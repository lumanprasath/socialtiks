{
  "_args": [
    [
      {
        "raw": "amcharts/amcharts3-angular2",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "amcharts/amcharts3-angular2",
        "spec": "github:amcharts/amcharts3-angular2",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:amcharts/amcharts3-angular2.git",
          "sshUrl": "git+ssh://git@github.com/amcharts/amcharts3-angular2.git",
          "httpsUrl": "git+https://github.com/amcharts/amcharts3-angular2.git",
          "gitUrl": "git://github.com/amcharts/amcharts3-angular2.git",
          "shortcut": "github:amcharts/amcharts3-angular2",
          "directUrl": "https://raw.githubusercontent.com/amcharts/amcharts3-angular2/master/package.json"
        }
      },
      "/home/tfnt001/Desktop/Dashboard/socialytiks/socialytiks-dashboard"
    ]
  ],
  "_from": "amcharts/amcharts3-angular2",
  "_id": "amcharts3-angular2@1.1.0",
  "_inCache": true,
  "_location": "/amcharts3-angular2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "amcharts/amcharts3-angular2",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "amcharts/amcharts3-angular2",
    "spec": "github:amcharts/amcharts3-angular2",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:amcharts/amcharts3-angular2.git",
      "sshUrl": "git+ssh://git@github.com/amcharts/amcharts3-angular2.git",
      "httpsUrl": "git+https://github.com/amcharts/amcharts3-angular2.git",
      "gitUrl": "git://github.com/amcharts/amcharts3-angular2.git",
      "shortcut": "github:amcharts/amcharts3-angular2",
      "directUrl": "https://raw.githubusercontent.com/amcharts/amcharts3-angular2/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git://github.com/amcharts/amcharts3-angular2.git#aedfcede81eecdf3ba6864b52320064e5df09b46",
  "_shasum": "30598fea0322df0470cf309629b2dc0a4c032755",
  "_shrinkwrap": null,
  "_spec": "amcharts/amcharts3-angular2",
  "_where": "/home/tfnt001/Desktop/Dashboard/socialytiks/socialytiks-dashboard",
  "bugs": {
    "url": "https://github.com/amcharts/amcharts3-angular2/issues"
  },
  "dependencies": {},
  "description": "Official Angular 2 plugin for amCharts V3",
  "devDependencies": {},
  "gitHead": "aedfcede81eecdf3ba6864b52320064e5df09b46",
  "homepage": "https://github.com/amcharts/amcharts3-angular2#readme",
  "name": "amcharts3-angular2",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.4.7"
  },
  "readme": "Official Angular 2 plugin for amCharts V3\n\nInstallation\n============\n\n```\nnpm install amcharts/amcharts3-angular2 --save\n```\n\nHow to use\n==========\n\n1) In your HTML file, load the amCharts library using `<script>` tags:\n\n```\n<script src=\"https://www.amcharts.com/lib/3/amcharts.js\"></script>\n<script src=\"https://www.amcharts.com/lib/3/serial.js\"></script>\n<script src=\"https://www.amcharts.com/lib/3/themes/light.js\"></script>\n```\n\n----\n\n2) In your app module, import the `AmChartsModule` module and add it to the `imports`:\n\n```\nimport { AmChartsModule } from \"amcharts3-angular2\";\n\n@NgModule({\n  imports: [\n    AmChartsModule\n  ]\n})\nexport class AppModule {}\n```\n\n----\n\n3) Use the `<amCharts>` tag in your `template`, and also specify the `id` and `options`:\n\n```\n@Component({\n  template: `<amCharts [id]=\"id\" [options]=\"options\" [style.width.%]=\"100\" [style.height.px]=\"500\"></amCharts>`\n})\nexport class AppComponent {\n  id = \"chartdiv\";\n\n  options = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"dataProvider\": []\n    ...\n  };\n}\n```\n\n----\n\n4) If you want to dynamically change the chart config after the chart has been created, you first need to create a *copy* of the existing config:\n\n```\nexport class AppComponent {\n  changeChart() {\n    // Make a copy of the existing config\n    this.options = JSON.parse(JSON.serialize(this.options));\n\n    // Change the config\n    this.options.dataProvider = [...];\n  }\n}\n```\n\nAlternatively, you can use a function or method to create a new config:\n\n```\nexport class AppComponent {\n  makeConfig(dataProvider) {\n    return {\n      \"type\": \"serial\",\n      \"theme\": \"light\",\n      \"dataProvider\": dataProvider\n      ...\n    };\n  }\n\n  changeChart() {\n    this.options = this.makeConfig([...]);\n  }\n}\n```\n\nWhy do you need to make a copy of the config? Even if you change the properties of the object, the object itself has not changed, and therefore Angular2 does **not** update AmCharts.\n\nBut if you make a copy of the object, then Angular2 realizes that the object is different, and so it updates AmCharts. This is an issue with Angular2, and there isn't much we can do about it.\n\n----\n\nYou can see some examples in the `examples` directory.\n\n## Changelog\n\n### 1.1.0\n* Various fixes\n* Adding examples\n\n### 1.0.0\n* Initial release\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/amcharts/amcharts3-angular2.git"
  },
  "version": "1.1.0"
}
