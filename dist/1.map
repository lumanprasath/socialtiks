{"version":3,"file":"1.chunk.js","sources":["webpack:///./src/app/pages/charts/charts.module.ts","webpack:///./src/app/pages/maps/components/bubbleMaps/bubbleMaps.component.ts","webpack:///./src/app/pages/maps/components/bubbleMaps/bubbleMaps.service.ts","webpack:///./src/app/pages/maps/maps.component.ts","webpack:///./~/ng2-daterangepicker/index.js","webpack:///./~/ng2-daterangepicker/src/app/daterangepicker/config.service.ts","webpack:///./src/app/pages/maps/components/bubbleMaps/bubbleMaps.scss","webpack:///./src/app/pages/maps/components/bubbleMaps/bubbleMaps.html","webpack:///./~/ng2-daterangepicker/src/app/daterangepicker/daterangepicker.component.ts","webpack:///./src/app/pages/charts/charts.component.ts","webpack:///./src/app/pages/charts/components/brand_league/BrandLeague.service.ts","webpack:///./src/app/pages/charts/components/brand_league/brand_league.components.ts","webpack:///./src/app/pages/charts/components/chartistJs/chartistJs.component.ts","webpack:///./src/app/pages/charts/components/chartistJs2/chartistJs2.component.ts","webpack:///./src/app/pages/charts/components/chartistJs2/chartistJs2.service.ts","webpack:///./~/angular-tag-cloud-module/tag-cloud.component.js","webpack:///./~/ng2-google-charts/build/src/google-chart/google-chart.component.js","webpack:///./~/ng2-google-charts/build/src/google-charts-loader.service.js","webpack:///./~/ng2-daterangepicker/src/app/daterangepicker/daterangepicker.module.ts","webpack:///./src/app/pages/charts/charts.routing.ts","webpack:///./src/app/pages/charts/components/chartistJs/chartistJs.service.ts","webpack:///./~/angular-tag-cloud-module/index.js","webpack:///./~/angular-tag-cloud-module/tag-cloud.module.js","webpack:///./~/bootstrap-daterangepicker/daterangepicker.js","webpack:///./~/ng2-charts/components/charts/charts.js","webpack:///./~/ng2-charts/ng2-charts.js","webpack:///./~/ng2-google-charts/build/ng2-google-charts.js","webpack:///./~/ng2-google-charts/build/src/google-charts.module.js","webpack:///./~/ng2-daterangepicker/src/app/daterangepicker/daterangepicker.css","webpack:///./src/app/pages/charts/components/brand_league/brand_league.scss","webpack:///./src/app/pages/charts/components/chartistJs/chartistJs.scss","webpack:///./src/app/pages/charts/components/chartistJs2/chartistJs2.scss","webpack:///./src/app/pages/charts/components/brand_league/brand_league.html","webpack:///./src/app/pages/charts/components/chartistJs/chartistJs.html","webpack:///./src/app/pages/charts/components/chartistJs2/chartistJs2.html"],"sourcesContent":["import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgaModule } from '../../theme/nga.module';\nimport {HttpModule} from '@angular/http';\n\n\nimport { routing } from './charts.routing';\nimport { Charts } from './charts.component';\nimport { ChartistJs } from './components/chartistJs/chartistJs.component';\nimport { ChartistJs2} from './components/chartistJs2/chartistJs2.component';\nimport { BrandLeague } from './components/brand_league/brand_league.components';\nimport { ChartistJsService } from './components/chartistJs/chartistJs.service';\nimport { ChartistJs2Service } from './components/chartistJs2/chartistJs2.service';\nimport { BrandLeagueService} from './components/brand_league/BrandLeague.service';\nimport { Maps } from '../maps/maps.component';\nimport { BubbleMaps } from '../maps/components/bubbleMaps/bubbleMaps.component';\nimport { BubbleMapsService } from '../maps/components/bubbleMaps/bubbleMaps.service';\nimport { TagCloudModule } from 'angular-tag-cloud-module';\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\nimport { Daterangepicker } from 'ng2-daterangepicker';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgaModule,\n    routing,\n    HttpModule,\n    ChartsModule,\n    TagCloudModule,\n    Ng2GoogleChartsModule,\n    Daterangepicker\n   \n  ],\n  declarations: [\n    Charts,\n    ChartistJs,\n    ChartistJs2,\n    Maps,\n    BubbleMaps,\n    BrandLeague\n    \n\n    \n  ],\n  providers: [\n    ChartistJsService,\n    ChartistJs2Service,\n    BrandLeagueService,\n    BubbleMapsService\n \n  ]\n})\nexport default class ChartsALLModule {}\n\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/charts.module.ts","import {Component, ViewEncapsulation} from '@angular/core';\n\nimport {BubbleMapsService} from './bubbleMaps.service';\n\n@Component({\n  selector: 'bubble-maps',\n  encapsulation: ViewEncapsulation.None,\n  styles: [require('./bubbleMaps.scss')],\n  template: require('./bubbleMaps.html'),\n})\nexport class BubbleMaps {\n\n  chartData:Object;\n\n  constructor(private _bubbleMapsService:BubbleMapsService) {\n  }\n\n  ngOnInit() {\n    this.chartData = this._bubbleMapsService.getData();\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/maps/components/bubbleMaps/bubbleMaps.component.ts","import {Injectable} from '@angular/core';\nimport {BaThemeConfigProvider, layoutPaths} from '../../../../theme';\n\n@Injectable()\nexport class BubbleMapsService {\n\n  constructor(private _baConfig:BaThemeConfigProvider) {\n  }\n\n  getData() {\n    let layoutColors = this._baConfig.get().colors;\n    let latlong = {};\n\n    latlong['AD'] = {'latitude': 42.5, 'longitude': 1.5};\n    latlong['AE'] = {'latitude': 24, 'longitude': 54};\n    latlong['AF'] = {'latitude': 33, 'longitude': 65};\n    latlong['AG'] = {'latitude': 17.05, 'longitude': -61.8};\n    latlong['AI'] = {'latitude': 18.25, 'longitude': -63.1667};\n    latlong['AL'] = {'latitude': 41, 'longitude': 20};\n    latlong['AM'] = {'latitude': 40, 'longitude': 45};\n    latlong['AN'] = {'latitude': 12.25, 'longitude': -68.75};\n    latlong['AO'] = {'latitude': -12.5, 'longitude': 18.5};\n    latlong['AP'] = {'latitude': 35, 'longitude': 105};\n    latlong['AQ'] = {'latitude': -90, 'longitude': 0};\n    latlong['AR'] = {'latitude': -34, 'longitude': -64};\n    latlong['AS'] = {'latitude': -14.3333, 'longitude': -170};\n    latlong['AT'] = {'latitude': 47.3333, 'longitude': 13.3333};\n    latlong['AU'] = {'latitude': -27, 'longitude': 133};\n    latlong['AW'] = {'latitude': 12.5, 'longitude': -69.9667};\n    latlong['AZ'] = {'latitude': 40.5, 'longitude': 47.5};\n    latlong['BA'] = {'latitude': 44, 'longitude': 18};\n    latlong['BB'] = {'latitude': 13.1667, 'longitude': -59.5333};\n    latlong['BD'] = {'latitude': 24, 'longitude': 90};\n    latlong['BE'] = {'latitude': 50.8333, 'longitude': 4};\n    latlong['BF'] = {'latitude': 13, 'longitude': -2};\n    latlong['BG'] = {'latitude': 43, 'longitude': 25};\n    latlong['BH'] = {'latitude': 26, 'longitude': 50.55};\n    latlong['BI'] = {'latitude': -3.5, 'longitude': 30};\n    latlong['BJ'] = {'latitude': 9.5, 'longitude': 2.25};\n    latlong['BM'] = {'latitude': 32.3333, 'longitude': -64.75};\n    latlong['BN'] = {'latitude': 4.5, 'longitude': 114.6667};\n    latlong['BO'] = {'latitude': -17, 'longitude': -65};\n    latlong['BR'] = {'latitude': -10, 'longitude': -55};\n    latlong['BS'] = {'latitude': 24.25, 'longitude': -76};\n    latlong['BT'] = {'latitude': 27.5, 'longitude': 90.5};\n    latlong['BV'] = {'latitude': -54.4333, 'longitude': 3.4};\n    latlong['BW'] = {'latitude': -22, 'longitude': 24};\n    latlong['BY'] = {'latitude': 53, 'longitude': 28};\n    latlong['BZ'] = {'latitude': 17.25, 'longitude': -88.75};\n    latlong['CA'] = {'latitude': 54, 'longitude': -100};\n    latlong['CC'] = {'latitude': -12.5, 'longitude': 96.8333};\n    latlong['CD'] = {'latitude': 0, 'longitude': 25};\n    latlong['CF'] = {'latitude': 7, 'longitude': 21};\n    latlong['CG'] = {'latitude': -1, 'longitude': 15};\n    latlong['CH'] = {'latitude': 47, 'longitude': 8};\n    latlong['CI'] = {'latitude': 8, 'longitude': -5};\n    latlong['CK'] = {'latitude': -21.2333, 'longitude': -159.7667};\n    latlong['CL'] = {'latitude': -30, 'longitude': -71};\n    latlong['CM'] = {'latitude': 6, 'longitude': 12};\n    latlong['CN'] = {'latitude': 35, 'longitude': 105};\n    latlong['CO'] = {'latitude': 4, 'longitude': -72};\n    latlong['CR'] = {'latitude': 10, 'longitude': -84};\n    latlong['CU'] = {'latitude': 21.5, 'longitude': -80};\n    latlong['CV'] = {'latitude': 16, 'longitude': -24};\n    latlong['CX'] = {'latitude': -10.5, 'longitude': 105.6667};\n    latlong['CY'] = {'latitude': 35, 'longitude': 33};\n    latlong['CZ'] = {'latitude': 49.75, 'longitude': 15.5};\n    latlong['DE'] = {'latitude': 51, 'longitude': 9};\n    latlong['DJ'] = {'latitude': 11.5, 'longitude': 43};\n    latlong['DK'] = {'latitude': 56, 'longitude': 10};\n    latlong['DM'] = {'latitude': 15.4167, 'longitude': -61.3333};\n    latlong['DO'] = {'latitude': 19, 'longitude': -70.6667};\n    latlong['DZ'] = {'latitude': 28, 'longitude': 3};\n    latlong['EC'] = {'latitude': -2, 'longitude': -77.5};\n    latlong['EE'] = {'latitude': 59, 'longitude': 26};\n    latlong['EG'] = {'latitude': 27, 'longitude': 30};\n    latlong['EH'] = {'latitude': 24.5, 'longitude': -13};\n    latlong['ER'] = {'latitude': 15, 'longitude': 39};\n    latlong['ES'] = {'latitude': 40, 'longitude': -4};\n    latlong['ET'] = {'latitude': 8, 'longitude': 38};\n    latlong['EU'] = {'latitude': 47, 'longitude': 8};\n    latlong['FI'] = {'latitude': 62, 'longitude': 26};\n    latlong['FJ'] = {'latitude': -18, 'longitude': 175};\n    latlong['FK'] = {'latitude': -51.75, 'longitude': -59};\n    latlong['FM'] = {'latitude': 6.9167, 'longitude': 158.25};\n    latlong['FO'] = {'latitude': 62, 'longitude': -7};\n    latlong['FR'] = {'latitude': 46, 'longitude': 2};\n    latlong['GA'] = {'latitude': -1, 'longitude': 11.75};\n    latlong['GB'] = {'latitude': 54, 'longitude': -2};\n    latlong['GD'] = {'latitude': 12.1167, 'longitude': -61.6667};\n    latlong['GE'] = {'latitude': 42, 'longitude': 43.5};\n    latlong['GF'] = {'latitude': 4, 'longitude': -53};\n    latlong['GH'] = {'latitude': 8, 'longitude': -2};\n    latlong['GI'] = {'latitude': 36.1833, 'longitude': -5.3667};\n    latlong['GL'] = {'latitude': 72, 'longitude': -40};\n    latlong['GM'] = {'latitude': 13.4667, 'longitude': -16.5667};\n    latlong['GN'] = {'latitude': 11, 'longitude': -10};\n    latlong['GP'] = {'latitude': 16.25, 'longitude': -61.5833};\n    latlong['GQ'] = {'latitude': 2, 'longitude': 10};\n    latlong['GR'] = {'latitude': 39, 'longitude': 22};\n    latlong['GS'] = {'latitude': -54.5, 'longitude': -37};\n    latlong['GT'] = {'latitude': 15.5, 'longitude': -90.25};\n    latlong['GU'] = {'latitude': 13.4667, 'longitude': 144.7833};\n    latlong['GW'] = {'latitude': 12, 'longitude': -15};\n    latlong['GY'] = {'latitude': 5, 'longitude': -59};\n    latlong['HK'] = {'latitude': 22.25, 'longitude': 114.1667};\n    latlong['HM'] = {'latitude': -53.1, 'longitude': 72.5167};\n    latlong['HN'] = {'latitude': 15, 'longitude': -86.5};\n    latlong['HR'] = {'latitude': 45.1667, 'longitude': 15.5};\n    latlong['HT'] = {'latitude': 19, 'longitude': -72.4167};\n    latlong['HU'] = {'latitude': 47, 'longitude': 20};\n    latlong['ID'] = {'latitude': -5, 'longitude': 120};\n    latlong['IE'] = {'latitude': 53, 'longitude': -8};\n    latlong['IL'] = {'latitude': 31.5, 'longitude': 34.75};\n    latlong['IN'] = {'latitude': 20, 'longitude': 77};\n    latlong['IO'] = {'latitude': -6, 'longitude': 71.5};\n    latlong['IQ'] = {'latitude': 33, 'longitude': 44};\n    latlong['IR'] = {'latitude': 32, 'longitude': 53};\n    latlong['IS'] = {'latitude': 65, 'longitude': -18};\n    latlong['IT'] = {'latitude': 42.8333, 'longitude': 12.8333};\n    latlong['JM'] = {'latitude': 18.25, 'longitude': -77.5};\n    latlong['JO'] = {'latitude': 31, 'longitude': 36};\n    latlong['JP'] = {'latitude': 36, 'longitude': 138};\n    latlong['KE'] = {'latitude': 1, 'longitude': 38};\n    latlong['KG'] = {'latitude': 41, 'longitude': 75};\n    latlong['KH'] = {'latitude': 13, 'longitude': 105};\n    latlong['KI'] = {'latitude': 1.4167, 'longitude': 173};\n    latlong['KM'] = {'latitude': -12.1667, 'longitude': 44.25};\n    latlong['KN'] = {'latitude': 17.3333, 'longitude': -62.75};\n    latlong['KP'] = {'latitude': 40, 'longitude': 127};\n    latlong['KR'] = {'latitude': 37, 'longitude': 127.5};\n    latlong['KW'] = {'latitude': 29.3375, 'longitude': 47.6581};\n    latlong['KY'] = {'latitude': 19.5, 'longitude': -80.5};\n    latlong['KZ'] = {'latitude': 48, 'longitude': 68};\n    latlong['LA'] = {'latitude': 18, 'longitude': 105};\n    latlong['LB'] = {'latitude': 33.8333, 'longitude': 35.8333};\n    latlong['LC'] = {'latitude': 13.8833, 'longitude': -61.1333};\n    latlong['LI'] = {'latitude': 47.1667, 'longitude': 9.5333};\n    latlong['LK'] = {'latitude': 7, 'longitude': 81};\n    latlong['LR'] = {'latitude': 6.5, 'longitude': -9.5};\n    latlong['LS'] = {'latitude': -29.5, 'longitude': 28.5};\n    latlong['LT'] = {'latitude': 55, 'longitude': 24};\n    latlong['LU'] = {'latitude': 49.75, 'longitude': 6};\n    latlong['LV'] = {'latitude': 57, 'longitude': 25};\n    latlong['LY'] = {'latitude': 25, 'longitude': 17};\n    latlong['MA'] = {'latitude': 32, 'longitude': -5};\n    latlong['MC'] = {'latitude': 43.7333, 'longitude': 7.4};\n    latlong['MD'] = {'latitude': 47, 'longitude': 29};\n    latlong['ME'] = {'latitude': 42.5, 'longitude': 19.4};\n    latlong['MG'] = {'latitude': -20, 'longitude': 47};\n    latlong['MH'] = {'latitude': 9, 'longitude': 168};\n    latlong['MK'] = {'latitude': 41.8333, 'longitude': 22};\n    latlong['ML'] = {'latitude': 17, 'longitude': -4};\n    latlong['MM'] = {'latitude': 22, 'longitude': 98};\n    latlong['MN'] = {'latitude': 46, 'longitude': 105};\n    latlong['MO'] = {'latitude': 22.1667, 'longitude': 113.55};\n    latlong['MP'] = {'latitude': 15.2, 'longitude': 145.75};\n    latlong['MQ'] = {'latitude': 14.6667, 'longitude': -61};\n    latlong['MR'] = {'latitude': 20, 'longitude': -12};\n    latlong['MS'] = {'latitude': 16.75, 'longitude': -62.2};\n    latlong['MT'] = {'latitude': 35.8333, 'longitude': 14.5833};\n    latlong['MU'] = {'latitude': -20.2833, 'longitude': 57.55};\n    latlong['MV'] = {'latitude': 3.25, 'longitude': 73};\n    latlong['MW'] = {'latitude': -13.5, 'longitude': 34};\n    latlong['MX'] = {'latitude': 23, 'longitude': -102};\n    latlong['MY'] = {'latitude': 2.5, 'longitude': 112.5};\n    latlong['MZ'] = {'latitude': -18.25, 'longitude': 35};\n    latlong['NA'] = {'latitude': -22, 'longitude': 17};\n    latlong['NC'] = {'latitude': -21.5, 'longitude': 165.5};\n    latlong['NE'] = {'latitude': 16, 'longitude': 8};\n    latlong['NF'] = {'latitude': -29.0333, 'longitude': 167.95};\n    latlong['NG'] = {'latitude': 10, 'longitude': 8};\n    latlong['NI'] = {'latitude': 13, 'longitude': -85};\n    latlong['NL'] = {'latitude': 52.5, 'longitude': 5.75};\n    latlong['NO'] = {'latitude': 62, 'longitude': 10};\n    latlong['NP'] = {'latitude': 28, 'longitude': 84};\n    latlong['NR'] = {'latitude': -0.5333, 'longitude': 166.9167};\n    latlong['NU'] = {'latitude': -19.0333, 'longitude': -169.8667};\n    latlong['NZ'] = {'latitude': -41, 'longitude': 174};\n    latlong['OM'] = {'latitude': 21, 'longitude': 57};\n    latlong['PA'] = {'latitude': 9, 'longitude': -80};\n    latlong['PE'] = {'latitude': -10, 'longitude': -76};\n    latlong['PF'] = {'latitude': -15, 'longitude': -140};\n    latlong['PG'] = {'latitude': -6, 'longitude': 147};\n    latlong['PH'] = {'latitude': 13, 'longitude': 122};\n    latlong['PK'] = {'latitude': 30, 'longitude': 70};\n    latlong['PL'] = {'latitude': 52, 'longitude': 20};\n    latlong['PM'] = {'latitude': 46.8333, 'longitude': -56.3333};\n    latlong['PR'] = {'latitude': 18.25, 'longitude': -66.5};\n    latlong['PS'] = {'latitude': 32, 'longitude': 35.25};\n    latlong['PT'] = {'latitude': 39.5, 'longitude': -8};\n    latlong['PW'] = {'latitude': 7.5, 'longitude': 134.5};\n    latlong['PY'] = {'latitude': -23, 'longitude': -58};\n    latlong['QA'] = {'latitude': 25.5, 'longitude': 51.25};\n    latlong['RE'] = {'latitude': -21.1, 'longitude': 55.6};\n    latlong['RO'] = {'latitude': 46, 'longitude': 25};\n    latlong['RS'] = {'latitude': 44, 'longitude': 21};\n    latlong['RU'] = {'latitude': 60, 'longitude': 100};\n    latlong['RW'] = {'latitude': -2, 'longitude': 30};\n    latlong['SA'] = {'latitude': 25, 'longitude': 45};\n    latlong['SB'] = {'latitude': -8, 'longitude': 159};\n    latlong['SC'] = {'latitude': -4.5833, 'longitude': 55.6667};\n    latlong['SD'] = {'latitude': 15, 'longitude': 30};\n    latlong['SE'] = {'latitude': 62, 'longitude': 15};\n    latlong['SG'] = {'latitude': 1.3667, 'longitude': 103.8};\n    latlong['SH'] = {'latitude': -15.9333, 'longitude': -5.7};\n    latlong['SI'] = {'latitude': 46, 'longitude': 15};\n    latlong['SJ'] = {'latitude': 78, 'longitude': 20};\n    latlong['SK'] = {'latitude': 48.6667, 'longitude': 19.5};\n    latlong['SL'] = {'latitude': 8.5, 'longitude': -11.5};\n    latlong['SM'] = {'latitude': 43.7667, 'longitude': 12.4167};\n    latlong['SN'] = {'latitude': 14, 'longitude': -14};\n    latlong['SO'] = {'latitude': 10, 'longitude': 49};\n    latlong['SR'] = {'latitude': 4, 'longitude': -56};\n    latlong['ST'] = {'latitude': 1, 'longitude': 7};\n    latlong['SV'] = {'latitude': 13.8333, 'longitude': -88.9167};\n    latlong['SY'] = {'latitude': 35, 'longitude': 38};\n    latlong['SZ'] = {'latitude': -26.5, 'longitude': 31.5};\n    latlong['TC'] = {'latitude': 21.75, 'longitude': -71.5833};\n    latlong['TD'] = {'latitude': 15, 'longitude': 19};\n    latlong['TF'] = {'latitude': -43, 'longitude': 67};\n    latlong['TG'] = {'latitude': 8, 'longitude': 1.1667};\n    latlong['TH'] = {'latitude': 15, 'longitude': 100};\n    latlong['TJ'] = {'latitude': 39, 'longitude': 71};\n    latlong['TK'] = {'latitude': -9, 'longitude': -172};\n    latlong['TM'] = {'latitude': 40, 'longitude': 60};\n    latlong['TN'] = {'latitude': 34, 'longitude': 9};\n    latlong['TO'] = {'latitude': -20, 'longitude': -175};\n    latlong['TR'] = {'latitude': 39, 'longitude': 35};\n    latlong['TT'] = {'latitude': 11, 'longitude': -61};\n    latlong['TV'] = {'latitude': -8, 'longitude': 178};\n    latlong['TW'] = {'latitude': 23.5, 'longitude': 121};\n    latlong['TZ'] = {'latitude': -6, 'longitude': 35};\n    latlong['UA'] = {'latitude': 49, 'longitude': 32};\n    latlong['UG'] = {'latitude': 1, 'longitude': 32};\n    latlong['UM'] = {'latitude': 19.2833, 'longitude': 166.6};\n    latlong['US'] = {'latitude': 38, 'longitude': -97};\n    latlong['UY'] = {'latitude': -33, 'longitude': -56};\n    latlong['UZ'] = {'latitude': 41, 'longitude': 64};\n    latlong['VA'] = {'latitude': 41.9, 'longitude': 12.45};\n    latlong['VC'] = {'latitude': 13.25, 'longitude': -61.2};\n    latlong['VE'] = {'latitude': 8, 'longitude': -66};\n    latlong['VG'] = {'latitude': 18.5, 'longitude': -64.5};\n    latlong['VI'] = {'latitude': 18.3333, 'longitude': -64.8333};\n    latlong['VN'] = {'latitude': 16, 'longitude': 106};\n    latlong['VU'] = {'latitude': -16, 'longitude': 167};\n    latlong['WF'] = {'latitude': -13.3, 'longitude': -176.2};\n    latlong['WS'] = {'latitude': -13.5833, 'longitude': -172.3333};\n    latlong['YE'] = {'latitude': 15, 'longitude': 48};\n    latlong['YT'] = {'latitude': -12.8333, 'longitude': 45.1667};\n    latlong['ZA'] = {'latitude': -29, 'longitude': 24};\n    latlong['ZM'] = {'latitude': -15, 'longitude': 30};\n    latlong['ZW'] = {'latitude': -20, 'longitude': 30};\n\n    let mapData = [\n      {'code': 'AF', 'name': 'Afghanistan', 'value': 32358260, 'color': layoutColors.primaryDark},\n      {'code': 'AL', 'name': 'Albania', 'value': 3215988, 'color': layoutColors.warning},\n      {'code': 'DZ', 'name': 'Algeria', 'value': 35980193, 'color': layoutColors.danger},\n      {'code': 'AO', 'name': 'Angola', 'value': 19618432, 'color': layoutColors.danger},\n      {'code': 'AR', 'name': 'Argentina', 'value': 40764561, 'color': layoutColors.success},\n      {'code': 'AM', 'name': 'Armenia', 'value': 3100236, 'color': layoutColors.warning},\n      {'code': 'AU', 'name': 'Australia', 'value': 22605732, 'color': layoutColors.warningDark},\n      {'code': 'AT', 'name': 'Austria', 'value': 8413429, 'color': layoutColors.warning},\n      {'code': 'AZ', 'name': 'Azerbaijan', 'value': 9306023, 'color': layoutColors.warning},\n      {'code': 'BH', 'name': 'Bahrain', 'value': 1323535, 'color': layoutColors.primaryDark},\n      {'code': 'BD', 'name': 'Bangladesh', 'value': 150493658, 'color': layoutColors.primaryDark},\n      {'code': 'BY', 'name': 'Belarus', 'value': 9559441, 'color': layoutColors.warning},\n      {'code': 'BE', 'name': 'Belgium', 'value': 10754056, 'color': layoutColors.warning},\n      {'code': 'BJ', 'name': 'Benin', 'value': 9099922, 'color': layoutColors.danger},\n      {'code': 'BT', 'name': 'Bhutan', 'value': 738267, 'color': layoutColors.primaryDark},\n      {'code': 'BO', 'name': 'Bolivia', 'value': 10088108, 'color': layoutColors.success},\n      {'code': 'BA', 'name': 'Bosnia and Herzegovina', 'value': 3752228, 'color': layoutColors.warning},\n      {'code': 'BW', 'name': 'Botswana', 'value': 2030738, 'color': layoutColors.danger},\n      {'code': 'BR', 'name': 'Brazil', 'value': 196655014, 'color': layoutColors.success},\n      {'code': 'BN', 'name': 'Brunei', 'value': 405938, 'color': layoutColors.primaryDark},\n      {'code': 'BG', 'name': 'Bulgaria', 'value': 7446135, 'color': layoutColors.warning},\n      {'code': 'BF', 'name': 'Burkina Faso', 'value': 16967845, 'color': layoutColors.danger},\n      {'code': 'BI', 'name': 'Burundi', 'value': 8575172, 'color': layoutColors.danger},\n      {'code': 'KH', 'name': 'Cambodia', 'value': 14305183, 'color': layoutColors.primaryDark},\n      {'code': 'CM', 'name': 'Cameroon', 'value': 20030362, 'color': layoutColors.danger},\n      {'code': 'CA', 'name': 'Canada', 'value': 34349561, 'color': layoutColors.primary},\n      {'code': 'CV', 'name': 'Cape Verde', 'value': 500585, 'color': layoutColors.danger},\n      {'code': 'CF', 'name': 'Central African Rep.', 'value': 4486837, 'color': layoutColors.danger},\n      {'code': 'TD', 'name': 'Chad', 'value': 11525496, 'color': layoutColors.danger},\n      {'code': 'CL', 'name': 'Chile', 'value': 17269525, 'color': layoutColors.success},\n      {'code': 'CN', 'name': 'China', 'value': 1347565324, 'color': layoutColors.primaryDark},\n      {'code': 'CO', 'name': 'Colombia', 'value': 46927125, 'color': layoutColors.success},\n      {'code': 'KM', 'name': 'Comoros', 'value': 753943, 'color': layoutColors.danger},\n      {'code': 'CD', 'name': 'Congo, Dem. Rep.', 'value': 67757577, 'color': layoutColors.danger},\n      {'code': 'CG', 'name': 'Congo, Rep.', 'value': 4139748, 'color': layoutColors.danger},\n      {'code': 'CR', 'name': 'Costa Rica', 'value': 4726575, 'color': layoutColors.primary},\n      {'code': 'CI', 'name': 'Cote d\\'Ivoire', 'value': 20152894, 'color': layoutColors.danger},\n      {'code': 'HR', 'name': 'Croatia', 'value': 4395560, 'color': layoutColors.warning},\n      {'code': 'CU', 'name': 'Cuba', 'value': 11253665, 'color': layoutColors.primary},\n      {'code': 'CY', 'name': 'Cyprus', 'value': 1116564, 'color': layoutColors.warning},\n      {'code': 'CZ', 'name': 'Czech Rep.', 'value': 10534293, 'color': layoutColors.warning},\n      {'code': 'DK', 'name': 'Denmark', 'value': 5572594, 'color': layoutColors.warning},\n      {'code': 'DJ', 'name': 'Djibouti', 'value': 905564, 'color': layoutColors.danger},\n      {'code': 'DO', 'name': 'Dominican Rep.', 'value': 10056181, 'color': layoutColors.primary},\n      {'code': 'EC', 'name': 'Ecuador', 'value': 14666055, 'color': layoutColors.success},\n      {'code': 'EG', 'name': 'Egypt', 'value': 82536770, 'color': layoutColors.danger},\n      {'code': 'SV', 'name': 'El Salvador', 'value': 6227491, 'color': layoutColors.primary},\n      {'code': 'GQ', 'name': 'Equatorial Guinea', 'value': 720213, 'color': layoutColors.danger},\n      {'code': 'ER', 'name': 'Eritrea', 'value': 5415280, 'color': layoutColors.danger},\n      {'code': 'EE', 'name': 'Estonia', 'value': 1340537, 'color': layoutColors.warning},\n      {'code': 'ET', 'name': 'Ethiopia', 'value': 84734262, 'color': layoutColors.danger},\n      {'code': 'FJ', 'name': 'Fiji', 'value': 868406, 'color': layoutColors.warningDark},\n      {'code': 'FI', 'name': 'Finland', 'value': 5384770, 'color': layoutColors.warning},\n      {'code': 'FR', 'name': 'France', 'value': 63125894, 'color': layoutColors.warning},\n      {'code': 'GA', 'name': 'Gabon', 'value': 1534262, 'color': layoutColors.danger},\n      {'code': 'GM', 'name': 'Gambia', 'value': 1776103, 'color': layoutColors.danger},\n      {'code': 'GE', 'name': 'Georgia', 'value': 4329026, 'color': layoutColors.warning},\n      {'code': 'DE', 'name': 'Germany', 'value': 82162512, 'color': layoutColors.warning},\n      {'code': 'GH', 'name': 'Ghana', 'value': 24965816, 'color': layoutColors.danger},\n      {'code': 'GR', 'name': 'Greece', 'value': 11390031, 'color': layoutColors.warning},\n      {'code': 'GT', 'name': 'Guatemala', 'value': 14757316, 'color': layoutColors.primary},\n      {'code': 'GN', 'name': 'Guinea', 'value': 10221808, 'color': layoutColors.danger},\n      {'code': 'GW', 'name': 'Guinea-Bissau', 'value': 1547061, 'color': layoutColors.danger},\n      {'code': 'GY', 'name': 'Guyana', 'value': 756040, 'color': layoutColors.success},\n      {'code': 'HT', 'name': 'Haiti', 'value': 10123787, 'color': layoutColors.primary},\n      {'code': 'HN', 'name': 'Honduras', 'value': 7754687, 'color': layoutColors.primary},\n      {'code': 'HK', 'name': 'Hong Kong, China', 'value': 7122187, 'color': layoutColors.primaryDark},\n      {'code': 'HU', 'name': 'Hungary', 'value': 9966116, 'color': layoutColors.warning},\n      {'code': 'IS', 'name': 'Iceland', 'value': 324366, 'color': layoutColors.warning},\n      {'code': 'IN', 'name': 'India', 'value': 1241491960, 'color': layoutColors.primaryDark},\n      {'code': 'ID', 'name': 'Indonesia', 'value': 242325638, 'color': layoutColors.primaryDark},\n      {'code': 'IR', 'name': 'Iran', 'value': 74798599, 'color': layoutColors.primaryDark},\n      {'code': 'IQ', 'name': 'Iraq', 'value': 32664942, 'color': layoutColors.primaryDark},\n      {'code': 'IE', 'name': 'Ireland', 'value': 4525802, 'color': layoutColors.warning},\n      {'code': 'IL', 'name': 'Israel', 'value': 7562194, 'color': layoutColors.primaryDark},\n      {'code': 'IT', 'name': 'Italy', 'value': 60788694, 'color': layoutColors.warning},\n      {'code': 'JM', 'name': 'Jamaica', 'value': 2751273, 'color': layoutColors.primary},\n      {'code': 'JP', 'name': 'Japan', 'value': 126497241, 'color': layoutColors.primaryDark},\n      {'code': 'JO', 'name': 'Jordan', 'value': 6330169, 'color': layoutColors.primaryDark},\n      {'code': 'KZ', 'name': 'Kazakhstan', 'value': 16206750, 'color': layoutColors.primaryDark},\n      {'code': 'KE', 'name': 'Kenya', 'value': 41609728, 'color': layoutColors.danger},\n      {'code': 'KP', 'name': 'Korea, Dem. Rep.', 'value': 24451285, 'color': layoutColors.primaryDark},\n      {'code': 'KR', 'name': 'Korea, Rep.', 'value': 48391343, 'color': layoutColors.primaryDark},\n      {'code': 'KW', 'name': 'Kuwait', 'value': 2818042, 'color': layoutColors.primaryDark},\n      {'code': 'KG', 'name': 'Kyrgyzstan', 'value': 5392580, 'color': layoutColors.primaryDark},\n      {'code': 'LA', 'name': 'Laos', 'value': 6288037, 'color': layoutColors.primaryDark},\n      {'code': 'LV', 'name': 'Latvia', 'value': 2243142, 'color': layoutColors.warning},\n      {'code': 'LB', 'name': 'Lebanon', 'value': 4259405, 'color': layoutColors.primaryDark},\n      {'code': 'LS', 'name': 'Lesotho', 'value': 2193843, 'color': layoutColors.danger},\n      {'code': 'LR', 'name': 'Liberia', 'value': 4128572, 'color': layoutColors.danger},\n      {'code': 'LY', 'name': 'Libya', 'value': 6422772, 'color': layoutColors.danger},\n      {'code': 'LT', 'name': 'Lithuania', 'value': 3307481, 'color': layoutColors.warning},\n      {'code': 'LU', 'name': 'Luxembourg', 'value': 515941, 'color': layoutColors.warning},\n      {'code': 'MK', 'name': 'Macedonia, FYR', 'value': 2063893, 'color': layoutColors.warning},\n      {'code': 'MG', 'name': 'Madagascar', 'value': 21315135, 'color': layoutColors.danger},\n      {'code': 'MW', 'name': 'Malawi', 'value': 15380888, 'color': layoutColors.danger},\n      {'code': 'MY', 'name': 'Malaysia', 'value': 28859154, 'color': layoutColors.primaryDark},\n      {'code': 'ML', 'name': 'Mali', 'value': 15839538, 'color': layoutColors.danger},\n      {'code': 'MR', 'name': 'Mauritania', 'value': 3541540, 'color': layoutColors.danger},\n      {'code': 'MU', 'name': 'Mauritius', 'value': 1306593, 'color': layoutColors.danger},\n      {'code': 'MX', 'name': 'Mexico', 'value': 114793341, 'color': layoutColors.primary},\n      {'code': 'MD', 'name': 'Moldova', 'value': 3544864, 'color': layoutColors.warning},\n      {'code': 'MN', 'name': 'Mongolia', 'value': 2800114, 'color': layoutColors.primaryDark},\n      {'code': 'ME', 'name': 'Montenegro', 'value': 632261, 'color': layoutColors.warning},\n      {'code': 'MA', 'name': 'Morocco', 'value': 32272974, 'color': layoutColors.danger},\n      {'code': 'MZ', 'name': 'Mozambique', 'value': 23929708, 'color': layoutColors.danger},\n      {'code': 'MM', 'name': 'Myanmar', 'value': 48336763, 'color': layoutColors.primaryDark},\n      {'code': 'NA', 'name': 'Namibia', 'value': 2324004, 'color': layoutColors.danger},\n      {'code': 'NP', 'name': 'Nepal', 'value': 30485798, 'color': layoutColors.primaryDark},\n      {'code': 'NL', 'name': 'Netherlands', 'value': 16664746, 'color': layoutColors.warning},\n      {'code': 'NZ', 'name': 'New Zealand', 'value': 4414509, 'color': layoutColors.warningDark},\n      {'code': 'NI', 'name': 'Nicaragua', 'value': 5869859, 'color': layoutColors.primary},\n      {'code': 'NE', 'name': 'Niger', 'value': 16068994, 'color': layoutColors.danger},\n      {'code': 'NG', 'name': 'Nigeria', 'value': 162470737, 'color': layoutColors.danger},\n      {'code': 'NO', 'name': 'Norway', 'value': 4924848, 'color': layoutColors.warning},\n      {'code': 'OM', 'name': 'Oman', 'value': 2846145, 'color': layoutColors.primaryDark},\n      {'code': 'PK', 'name': 'Pakistan', 'value': 176745364, 'color': layoutColors.primaryDark},\n      {'code': 'PA', 'name': 'Panama', 'value': 3571185, 'color': layoutColors.primary},\n      {'code': 'PG', 'name': 'Papua New Guinea', 'value': 7013829, 'color': layoutColors.warningDark},\n      {'code': 'PY', 'name': 'Paraguay', 'value': 6568290, 'color': layoutColors.success},\n      {'code': 'PE', 'name': 'Peru', 'value': 29399817, 'color': layoutColors.success},\n      {'code': 'PH', 'name': 'Philippines', 'value': 94852030, 'color': layoutColors.primaryDark},\n      {'code': 'PL', 'name': 'Poland', 'value': 38298949, 'color': layoutColors.warning},\n      {'code': 'PT', 'name': 'Portugal', 'value': 10689663, 'color': layoutColors.warning},\n      {'code': 'PR', 'name': 'Puerto Rico', 'value': 3745526, 'color': layoutColors.primary},\n      {'code': 'QA', 'name': 'Qatar', 'value': 1870041, 'color': layoutColors.primaryDark},\n      {'code': 'RO', 'name': 'Romania', 'value': 21436495, 'color': layoutColors.warning},\n      {'code': 'RU', 'name': 'Russia', 'value': 142835555, 'color': layoutColors.warning},\n      {'code': 'RW', 'name': 'Rwanda', 'value': 10942950, 'color': layoutColors.danger},\n      {'code': 'SA', 'name': 'Saudi Arabia', 'value': 28082541, 'color': layoutColors.primaryDark},\n      {'code': 'SN', 'name': 'Senegal', 'value': 12767556, 'color': layoutColors.danger},\n      {'code': 'RS', 'name': 'Serbia', 'value': 9853969, 'color': layoutColors.warning},\n      {'code': 'SL', 'name': 'Sierra Leone', 'value': 5997486, 'color': layoutColors.danger},\n      {'code': 'SG', 'name': 'Singapore', 'value': 5187933, 'color': layoutColors.primaryDark},\n      {'code': 'SK', 'name': 'Slovak Republic', 'value': 5471502, 'color': layoutColors.warning},\n      {'code': 'SI', 'name': 'Slovenia', 'value': 2035012, 'color': layoutColors.warning},\n      {'code': 'SB', 'name': 'Solomon Islands', 'value': 552267, 'color': layoutColors.warningDark},\n      {'code': 'SO', 'name': 'Somalia', 'value': 9556873, 'color': layoutColors.danger},\n      {'code': 'ZA', 'name': 'South Africa', 'value': 50459978, 'color': layoutColors.danger},\n      {'code': 'ES', 'name': 'Spain', 'value': 46454895, 'color': layoutColors.warning},\n      {'code': 'LK', 'name': 'Sri Lanka', 'value': 21045394, 'color': layoutColors.primaryDark},\n      {'code': 'SD', 'name': 'Sudan', 'value': 34735288, 'color': layoutColors.danger},\n      {'code': 'SR', 'name': 'Suriname', 'value': 529419, 'color': layoutColors.success},\n      {'code': 'SZ', 'name': 'Swaziland', 'value': 1203330, 'color': layoutColors.danger},\n      {'code': 'SE', 'name': 'Sweden', 'value': 9440747, 'color': layoutColors.warning},\n      {'code': 'CH', 'name': 'Switzerland', 'value': 7701690, 'color': layoutColors.warning},\n      {'code': 'SY', 'name': 'Syria', 'value': 20766037, 'color': layoutColors.primaryDark},\n      {'code': 'TW', 'name': 'Taiwan', 'value': 23072000, 'color': layoutColors.primaryDark},\n      {'code': 'TJ', 'name': 'Tajikistan', 'value': 6976958, 'color': layoutColors.primaryDark},\n      {'code': 'TZ', 'name': 'Tanzania', 'value': 46218486, 'color': layoutColors.danger},\n      {'code': 'TH', 'name': 'Thailand', 'value': 69518555, 'color': layoutColors.primaryDark},\n      {'code': 'TG', 'name': 'Togo', 'value': 6154813, 'color': layoutColors.danger},\n      {'code': 'TT', 'name': 'Trinidad and Tobago', 'value': 1346350, 'color': layoutColors.primary},\n      {'code': 'TN', 'name': 'Tunisia', 'value': 10594057, 'color': layoutColors.danger},\n      {'code': 'TR', 'name': 'Turkey', 'value': 73639596, 'color': layoutColors.warning},\n      {'code': 'TM', 'name': 'Turkmenistan', 'value': 5105301, 'color': layoutColors.primaryDark},\n      {'code': 'UG', 'name': 'Uganda', 'value': 34509205, 'color': layoutColors.danger},\n      {'code': 'UA', 'name': 'Ukraine', 'value': 45190180, 'color': layoutColors.warning},\n      {'code': 'AE', 'name': 'United Arab Emirates', 'value': 7890924, 'color': layoutColors.primaryDark},\n      {'code': 'GB', 'name': 'United Kingdom', 'value': 62417431, 'color': layoutColors.warning},\n      {'code': 'US', 'name': 'United States', 'value': 313085380, 'color': layoutColors.primary},\n      {'code': 'UY', 'name': 'Uruguay', 'value': 3380008, 'color': layoutColors.success},\n      {'code': 'UZ', 'name': 'Uzbekistan', 'value': 27760267, 'color': layoutColors.primaryDark},\n      {'code': 'VE', 'name': 'Venezuela', 'value': 29436891, 'color': layoutColors.success},\n      {'code': 'PS', 'name': 'West Bank and Gaza', 'value': 4152369, 'color': layoutColors.primaryDark},\n      {'code': 'VN', 'name': 'Vietnam', 'value': 88791996, 'color': layoutColors.primaryDark},\n      {'code': 'YE', 'name': 'Yemen, Rep.', 'value': 24799880, 'color': layoutColors.primaryDark},\n      {'code': 'ZM', 'name': 'Zambia', 'value': 13474959, 'color': layoutColors.danger},\n      {'code': 'ZW', 'name': 'Zimbabwe', 'value': 12754378, 'color': layoutColors.danger}\n    ];\n\n    let minBulletSize = 3\n      , maxBulletSize = 70\n      , min = Infinity\n      , max = -Infinity;\n\n    // get min and max values\n    for (let i = 0; i < mapData.length; i++) {\n      var value = mapData[i].value;\n      if (value < min) {\n        min = value;\n      }\n      if (value > max) {\n        max = value;\n      }\n    }\n\n\n    let dataProvider = {\n      mapVar: AmCharts.maps.worldLow,\n      images: []\n    };\n\n    var maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI;\n    var minSquare = minBulletSize * minBulletSize * 2 * Math.PI;\n\n    // create circle for each country\n    for (let i = 0; i < mapData.length; i++) {\n      let dataItem = mapData[i];\n      let value = dataItem.value;\n      // calculate size of a bubble\n      let square = (value - min) / (max - min) * (maxSquare - minSquare) + minSquare;\n      if (square < minSquare) {\n        square = minSquare;\n      }\n      let size = Math.sqrt(square / (Math.PI * 2));\n      let id = dataItem.code;\n\n\n\n      dataProvider.images.push({\n        type: 'circle',\n        width: size,\n        height: size,\n        color: dataItem.color,\n        longitude: latlong[id].longitude,\n        latitude: latlong[id].latitude,\n        title: dataItem.name,\n        value: value\n      });\n    }\n\n    return {\n      type: 'map',\n      theme: 'blur',\n      titles: [\n        {text: 'Reach around the world', size: 14},\n        {text: 'source: Twitter', size: 11}\n      ],\n      dataProvider: dataProvider,\n\n      areasSettings: {\n        unlistedAreasColor: '#000000',\n        unlistedAreasAlpha: 0.1\n      },\n\n      imagesSettings: {\n        balloonText: '<span style=\"font-size:14px;\"><b>[[title]]</b>: [[value]]</span>'\n      },\n\n      export: {\n        enabled: true\n      },\n      pathToImages: layoutPaths.images.amMap\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/maps/components/bubbleMaps/bubbleMaps.service.ts","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'maps',\n  styles: [],\n  template: `<router-outlet></router-outlet>`\n})\nexport class Maps {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/maps/maps.component.ts","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require(\"./src/app/daterangepicker/daterangepicker.module\"));\r\n__export(require(\"./src/app/daterangepicker/daterangepicker.component\"));\r\n__export(require(\"./src/app/daterangepicker/config.service\"));\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-daterangepicker/index.js\n// module id = 1329\n// module chunks = 1","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DaterangepickerConfig {\r\n\r\n    public settings: any;\r\n\r\n    constructor() {\r\n        this.settings = {};\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/ng2-daterangepicker/src/app/daterangepicker/config.service.ts","module.exports = \".bubble-maps {\\n  width: 100%;\\n  height: calc(100vh - 283px);\\n  font-size: 11px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/maps/components/bubbleMaps/bubbleMaps.scss\n// module id = 1331\n// module chunks = 1 2","module.exports = \"<ba-card title=\\\"Map with bubbles\\\">\\n  <ba-am-chart baAmChartClass=\\\"bubble-maps\\\" [baAmChartConfiguration]=\\\"chartData\\\"></ba-am-chart>\\n</ba-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/maps/components/bubbleMaps/bubbleMaps.html\n// module id = 1332\n// module chunks = 1 2","import { Directive, OnInit, AfterViewInit, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { DaterangepickerConfig } from './config.service';\r\n\r\ndeclare var $:any;\r\nvar $ = require('jquery');\r\nimport 'bootstrap-daterangepicker';\r\nimport * as moment from 'moment';\r\n\r\n@Directive({ selector: '[daterangepicker]' })\r\nexport class DaterangePickerComponent implements AfterViewInit {\r\n\r\n    @Input() options: any = {};\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(private input: ElementRef, private config: DaterangepickerConfig) { }\r\n\r\n    ngAfterViewInit() {\r\n        $('head').append('<style>'+require('./daterangepicker.css')+'</style>');\r\n\r\n        let targetOptions: any = Object.assign({}, this.config.settings, this.options);\r\n\r\n        $(this.input.nativeElement).daterangepicker(targetOptions, this.callback.bind(this));\r\n    }\r\n\r\n    private callback(start?: any, end?: any): void {\r\n        let obj = {\r\n            start: start,\r\n            end: end\r\n        };\r\n\r\n        this.selected.emit(obj);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/ng2-daterangepicker/src/app/daterangepicker/daterangepicker.component.ts","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'maps',\n  styles: [],\n  template: `<router-outlet></router-outlet>`\n})\nexport class Charts {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/charts.component.ts","import {Injectable} from '@angular/core';\n\nimport {BaThemeConfigProvider} from '../../../../theme';\n\n@Injectable()\nexport class BrandLeagueService {\n\n  private _data = {\n       simplePieData: {\n      labels: ['<100', '100-1k', '1k-10k', '10k>'],\n      series: [12,12,21,3]\n    },\n    simplePieOptions: {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelInterpolationFnc: function (value) {\n        return Math.round(value / 12 * 100) + '%';\n      }\n    },\n         scatterChartOptions :{\n    chartType: 'ScatterChart',\n    dataTable: [\n      ['Age', 'Weight'],\n      [ 8,      12],\n      [ 4,      5.5],\n      [ 11,     14],\n      [ 4,      5],\n      [ 3,      3.5],\n      [ 6.5,    7]\n    ],\n    options: {\n      title: 'HasTag  and Count',\n      hAxis: {title: 'HashTag'},\n      vAxis: {title: 'Count'},\n      legend: 'none'\n    }\n},\n\n\n    labelsPieData: {\n      labels: ['fr', 'en', 'pt', 'tl', 'ja', 'es'],\n      series: [3, 34, 1, 2, 14, 1]\n    },\n    labelsPieOptions: {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelDirection: 'explode',\n      labelInterpolationFnc: function (value) {\n        return value;\n      }\n    },\n    simpleDonutData: {\n      labels: ['neutral', 'positive', 'negative'],\n      series: [20, 34, 5]\n    },\n    simpleDonutOptions: {\n      fullWidth: true,\n      donut: true,\n      height: '100px',\n      weight: '100px',\n      labelDirection: 'explode',\n      labelInterpolationFnc: function (value) {\n        return value[0];\n      }\n    },\n    simpleLineOptions: {\n      color: this._baConfig.get().colors.defaultText,\n      fullWidth: true,\n      height: '300px',\n      chartPadding: {\n        right: 40\n      }\n    },\n    simpleLineData: {\n      labels: ['2016-11-09', '2016-11-10', '2016-11-11', '2016-11-12', '2016-11-13', '2016-11-14'],\n      series: [\n        [173, 127, 54, 176, 117 ,187],\n        [48, 52, 39, 93, 54, 55],\n        [53, 46, 9, 33, 43, 76]\n      ]\n    },\n    areaLineData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8],\n      series: [\n        [5, 9, 7, 8, 5, 3, 5, 4]\n      ]\n    },\n    areaLineOptions: {\n      fullWidth: true,\n      height: '300px',\n      low: 0,\n      showArea: true\n    },\n    biLineData: {\n      labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      series: [\n        [1, 2, 3, 1, -2, 0, 1],\n        [-2, -1, -2, -1, -2.5, -1, -2],\n        [0, 0, 0, 1, 2, 2.5, 2],\n        [2.5, 2, 1, 0.5, 1, 0.5, -1]\n      ]\n    },\n\n    biLineOptions: {\n      height: '300px',\n      high: 3,\n      low: -3,\n      showArea: true,\n      showLine: false,\n      showPoint: false,\n      fullWidth: true,\n      axisX: {\n        showGrid: false\n      }\n    },\n    // simpleBarData: {\n    //   labels: ['@iptl', '@IndianAces', '@rogerfederer', '@naterzzzz', '@geniebouchard', '@IPTL', '@jakedavi5', '@MattBarbarin', '@MirzaSania', '@hotdog6969'],\n    //   series: [\n    //     [4, 2, 2, 1, 1, 1, 1,1, 1,1]\n        \n    //   ]\n    // },\n    // simpleBarOptions: {\n    //   fullWidth: true,\n    //   height: '300px'\n    // },\n    multiBarData: {\n      labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\n      series: [\n        [5, 4, 3, 7],\n        [3, 2, 9, 5],\n        [1, 5, 8, 4],\n        [2, 3, 4, 6],\n        [4, 1, 2, 1]\n      ]\n    },\n    multiBarOptions: {\n      fullWidth: true,\n      height: '300px',\n      stackBars: true,\n      axisX: {\n        labelInterpolationFnc: function (value) {\n          return value.split(/\\s+/).map(function (word) {\n            return word[0];\n          }).join('');\n        }\n      },\n      axisY: {\n        offset: 20\n      }\n    },\n    multiBarResponsive: [\n      ['screen and (min-width: 400px)', {\n        reverseData: true,\n        horizontalBars: true,\n        axisX: {\n          labelInterpolationFnc: (n) => n\n        },\n        axisY: {\n          offset: 60\n        }\n      }],\n      ['screen and (min-width: 700px)', {\n        stackBars: false,\n        reverseData: false,\n        horizontalBars: false,\n        seriesBarDistance: 15\n      }]\n    ],\n    stackedBarData: {\n      labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\n      series: [\n        [800000, 1200000, 1400000, 1300000],\n        [200000, 400000, 500000, 300000],\n        [100000, 200000, 400000, 600000]\n      ]\n    },\n    stackedBarOptions: {\n      fullWidth: true,\n      height: '300px',\n      stackBars: true,\n      axisY: {\n        labelInterpolationFnc: function (value) {\n          return (value / 1000) + 'k';\n        }\n      }\n    }\n \n  };\n\n  constructor(private _baConfig:BaThemeConfigProvider) {\n  }\n\n  public getAll() {\n    return this._data;\n  }\n\n  public getResponsive(padding, offset) {\n    return [\n      ['screen and (min-width: 1550px)', {\n        chartPadding: padding,\n        labelOffset: offset,\n        labelDirection: 'explode',\n        labelInterpolationFnc: function (value) {\n          return value;\n        }\n      }],\n      ['screen and (max-width: 1200px)', {\n        chartPadding: padding,\n        labelOffset: offset,\n        labelDirection: 'explode',\n        labelInterpolationFnc: function (value) {\n          return value;\n        }\n      }],\n      ['screen and (max-width: 600px)', {\n        chartPadding: 0,\n        labelOffset: 0,\n        \n        labelInterpolationFnc: function (value) {\n          return value[0];\n        }\n      }]\n    ];\n  }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/components/brand_league/BrandLeague.service.ts","import {Component, ViewEncapsulation, Inject, Input, Output, EventEmitter, ViewChild,ElementRef  } from '@angular/core';\nimport {View} from \"angular2/angular2\";\nimport {HttpServices} from \"../../../../shared/services/httpservice\";\nimport {BrandLeagueService} from './BrandLeague.service';\nimport {BaThemeConfigProvider, layoutPaths} from '../../../../theme';\nimport { DaterangepickerConfig } from 'ng2-daterangepicker';\nimport * as moment from 'moment';\nimport {BaThemePreloader} from '../../../../theme/services';\n\nimport '../../../../theme/components/baAmChart/baAmChart.loader.ts';\nimport {BaAmChartThemeService} from '../../../../theme/components/baAmChart/baAmChartTheme.service';\n\n\n\n\n@Component({\n  selector: 'brand_league',\n  encapsulation: ViewEncapsulation.None,\n  styles: [require('chartist/dist/chartist.css'), require('./brand_league.scss')],\n  template: require('./brand_league.html'),\n  providers: [BaAmChartThemeService],\n  })\n\n\n\n\nexport class BrandLeague {\n//---------------------------------------------------------------------------------------//\nprivate brand_count:string;\npublic sentimentLabels:string[];\npublic sentimentData:number[] \npublic sentimentChartType:string;\nprivate sentimentOptions:any;\n\npublic topMentionLabels:string[];\npublic topMentionChartType:string;\npublic topMentionLegend:boolean = true;\npublic topMentionData:any[];\nprivate topMentionColor:any[];\n\npublic topBrandMoniteringLabels:string[];\npublic topBrandMoniteringData:any[];\npublic topBrandMoniteringType:string;\n\npublic topKeywordData:any[];\npublic topKeywordLabels:string[];\n\npublic topBrandTypeData:any[];\npublic topBrandTypeLabels:string[];\npublic topBrandChartType:string;\n\npublic lineChartLegend:boolean = true;\npublic lineChartType:string = 'line';\npublic lineChartColors:Array<any> = [];\npublic lineChartData:any = []\npublic lineChartLabels:any = [];\npublic lineChartOptions:any = {\n    responsive: true\n};\npublic sentimental_data:string;\n//------------------------------------------------------------------------------------------------//\n private dateInputs: any = [\n       {\n           start: moment(),\n           end: moment().add(5, 'month'),\n       }\n   ];\n  data2:any;\n  public mapchartData:Object;\n  private dropDownDate:any[];\n  private selectedDate:any;\n  private dropDownBrand:any[];\n  private selectedBrand:any;\n  private dropDownChannel:any[];\n  private selectedChannel:any;\n  public cloudData:any;\n  public mapData:any[];\n\n  private polarOptions:any;\n\n \n\n  public userClassLabels:string[];\n  public userClassData:number[] \n  public userClassChartType:string;\n  public userClassLegend:boolean = false;\n  \n  public topUserLegend:boolean = true;\n  public topUserLabels:string[];\n  private topUserOptions: any;\n  public topUserData:number[];\n  public topUserChartType:string;\n\n \n  public topDomainLabels:string[];\n  public topDomainChartType:string;\n  public topDomainLegend:boolean = true;\n  public topDomainData:any[];\n  private topDomainColor:any[];\n\n\n  public topReachLabels:string[];\n  public topReachChartType:string;\n  public topReachLegend:boolean = true;\n  public topReachData:any[];\n  private topReachColor:any[];\n\n\n  private url_1:string;\n  private url_2:string;\n  private url_3:string;\n  private url_4:string;\n  private words:any;\n  private start_date:any;\n  private end_date:any;\n\n  public languageLabels:string[];\n  public languageData:any;\n  private languageChartType:string;\n  private languageColor:Array<any> = [];\n \n   private totalarticlesengagement = 0;\n   private totalarticlecount =0;\n   private totalimpact =0;\n   private totalreach =0\n   private totalengagedusers =0;\n   private twitterFeeds:any;\n  //private dateToday:string;\n  //private dateMax:string;\n\n  public polarAreaChartLabels:string[];\n  public polarAreaChartData:number[];\n  public polarAreaLegend:boolean = true;\n  public polarAreaChartType:string;\n   @ViewChild('baAmChart') private _selector:ElementRef;\n\n\n  chartData:Object;\n  scatterChartOptions:any;\n \n\n  constructor(private _chartistJs2Service:BrandLeagueService,private _baConfig:BaThemeConfigProvider, private _httpService: HttpServices,\n  private daterangepickerOptions: DaterangepickerConfig,\n  private _baAmChartThemeService:BaAmChartThemeService) {\n    this._loadChartsLib();\n    this.daterangepickerOptions.settings = {\n             timePicker: true,\n        timePickerIncrement: 10,\n        locale: {\n            format: 'MM/DD/YYYY h:mm:ss A'\n        },\n\n       \n           alwaysShowCalendars: false,\n           ranges: {\n          'Today': [moment(), moment()],\n          'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n           }\n       };\n      \n      \n  }\n\n  private _loadChartsLib():void {\n    BaThemePreloader.registerLoader(new Promise((resolve, reject) => {\n      let amChartsReadyMsg = 'AmCharts ready';\n\n      if (AmCharts.isReady) {\n        resolve(amChartsReadyMsg);\n      } else {\n        AmCharts.ready(function () {\n          resolve(amChartsReadyMsg);\n        });\n      }\n    }));\n  }\n\n\n\n  ngOnInit() {\n   \n   \n  let self = this;  \n  AmCharts.themes.blur = this._baAmChartThemeService.getTheme();\n  self.requestLeague(self)\n    //sentiment  \n    self.sentimentLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    self.sentimentData = [300, 500, 100];\n \n    self.polarAreaChartData = [300, 500, 100, 40, 120];\n    self.polarAreaChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    self.polarAreaChartType = 'polarArea';\n    \n     // top brands \n    self.topBrandMoniteringType = 'bar';\n    self.topMentionColor = [{\n      backgroundColor:['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n      hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n      borderColor:\"#1EF9A1\",\n      hoverBorderColor:\"#7FFD1F\"\n    }];\n    // Brand Monitoring \n    self.topBrandMoniteringLabels= ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topBrandMoniteringData= [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Brand Monitoring Category'}];\n    // Top Brand Keywords  \n    self.topKeywordLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topKeywordData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Brand Monitoring Brands'}];\n    // Top Mentions Labels\n    self.topMentionChartType = 'horizontalBar';\n    self.topMentionLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topMentionData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Mentions'}];\n    // top Brand type \n    self.topBrandTypeData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Brand Type'}];\n    self.topBrandTypeLabels =['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topBrandChartType = 'horizontalBar';\n\n    //Articles Languages\n    \n     self.topUserLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n     self.topUserData = [300, 500, 100, 40, 120];\n    // line chart \n\n    self.lineChartData =[{data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},{data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'}, ];\n    self.lineChartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    self.lineChartColors = [\n      { // grey\n     backgroundColor: 'rgba(54, 162, 235, 0.2)',\n     borderColor: '#00acac',\n     pointBackgroundColor: '#348fe2',\n     pointBorderColor: '#fff',\n     pointHoverBackgroundColor: '#fff',\n     pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n    ];\n\n   // word cloud \n    \n    self.words = [ { text: 'Coca-Cola', weight: 1466 },\n  { text: 'Coca', weight: 1080 },\n  { text: 'Cola', weight: 1024 },\n  { text: 'Christmas', weight: 647 },\n  { text: 'advert', weight: 582 },\n  { text: 'Coke', weight: 417 },\n  { text: 'cola', weight: 372 },\n  { text: 'Zero', weight: 323 },\n  { text: 'way', weight: 322 },\n  { text: 'coca', weight: 322 },\n  { text: 'Diet', weight: 319 },\n  { text: '#MasterTheChoiceIMAXSweepstakes', weight: 313 },\n  { text: 'Rebellion', weight: 313 },\n  { text: 'Empire', weight: 312 },\n  { text: 'Rogue', weight: 303 },\n  { text: 'Either', weight: 302 },\n  { text: '#HolidaysAreComing', weight: 232 }\n   ];\n      jQuery(\"#col1\").jQCloud(self.words,{\n  autoResize: true\n});\n\n\n                 \n\n  self.twitterFeeds = [\n    {\n      url: \"https://twitter.com/AMAs/status/800378679536676864\",\n    },\n    {\n      url:  \"https://twitter.com/AMAs/status/800458706823561216\",\n    },\n    {\n      url: \"https://twitter.com/AMAs/status/800466263034109952\",\n    },\n    {\n      url: \"https://twitter.com/AMAs/status/800443605223501824\",\n    }\n  ];\n\n    self.userClassLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    self.userClassData = [300, 500, 100];\n   \n    \n    self.url_1 =  \"https://twitter.com/AMAs/status/800378679536676864\";\n     self.url_2 =  \"https://twitter.com/AMAs/status/800458706823561216\";\n     self.url_3 =  \"https://twitter.com/AMAs/status/800466263034109952\";\n     self.url_4 =  \"https://twitter.com/AMAs/status/800443605223501824\";\n\n\n    self.sentimentChartType  = 'doughnut';\n    self.sentimentOptions = {\n        tooltips: {\n            callbacks: {\n                label: function(tooltipItem, data) {\n                    var allData = data.datasets[tooltipItem.datasetIndex].data;\n                    var tooltipLabel = data.labels[tooltipItem.index];\n                    var tooltipData = allData[tooltipItem.index];\n                    var total = 0;\n                    for (var i in allData) {\n                        total += allData[i];\n                    }\n                    var tooltipPercentage = Math.round((tooltipData / total) * 100);\n                    return tooltipLabel + ': ' + tooltipData + ' (' + tooltipPercentage + '%)';\n                }\n            }\n        }\n    }\n\n    self.polarOptions =[{scaleShowLabels : false}];\n  \n    self.userClassChartType = 'radar';\n    self.topUserChartType = 'pie';\n    self.topUserOptions = {\n           tooltips: {\n            callbacks: {\n                label: function(tooltipItem, data) {\n                    var allData = data.datasets[tooltipItem.datasetIndex].data;\n                    var tooltipLabel = data.labels[tooltipItem.index];\n                    var tooltipData = allData[tooltipItem.index];\n                    var total = 0;\n                    for (var i in allData) {\n                        total += allData[i];\n                    }\n                    var tooltipPercentage = Math.round((tooltipData / total) * 100);\n                    return tooltipLabel + ': ' + tooltipData + ' (' + tooltipPercentage + '%)';\n                }\n            }\n        }\n    }\n   \n    self.topDomainChartType = 'horizontalBar';\n    self.topReachChartType ='bar';\n    \n    self.topDomainLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topDomainData = [{ label: 'Top Domain',data: [65, 59, 80, 81, 56, 55, 40] }];\n    self.topDomainColor = [{\n      backgroundColor:['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n      hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n      borderColor:\"#1EF9A1\",\n      hoverBorderColor:\"#7FFD1F\"\n    }];\n\n\n    self.topReachLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topReachData = [{ label: 'Top Domain',data: [65, 59, 80, 81, 56, 55, 40] }];\n    self.topReachColor = [{\n      backgroundColor:['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n      hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n      borderColor:\"#1EF9A1\",\n      hoverBorderColor:\"#7FFD1F\"\n    }];\n\n\n       self.mapData  = [{\"code\":\"BE\",\"name\":\"Belgium\",\"value\":19,\"color\":\"#e7ba08\"},{\"code\":\"BG\",\"name\":\"Bulgaria\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"BA\",\"name\":\"Bosnia and Herzegovina\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"JP\",\"name\":\"Japan\",\"value\":7,\"color\":\"#0091d8\"},{\"code\":\"JM\",\"name\":\"Jamaica\",\"value\":4,\"color\":\"#00abff\"},{\"code\":\"BW\",\"name\":\"Botswana\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"BR\",\"name\":\"Brazil\",\"value\":20,\"color\":\"#8bd22f\"},{\"code\":\"RU\",\"name\":\"Russia\",\"value\":4,\"color\":\"#e7ba08\"},{\"code\":\"RS\",\"name\":\"Serbia\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"RO\",\"name\":\"Romania\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"GT\",\"name\":\"Guatemala\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"GR\",\"name\":\"Greece\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"GB\",\"name\":\"United Kingdom\",\"value\":345,\"color\":\"#e7ba08\"},{\"code\":\"GH\",\"name\":\"Ghana\",\"value\":2,\"color\":\"#f95372\"},{\"code\":\"HR\",\"name\":\"Croatia\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"HT\",\"name\":\"Haiti\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"HU\",\"name\":\"Hungary\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"HK\",\"name\":\"Hong Kong, China\",\"value\":4,\"color\":\"#0091d8\"},{\"code\":\"PT\",\"name\":\"Portugal\",\"value\":5,\"color\":\"#e7ba08\"},{\"code\":\"PA\",\"name\":\"Panama\",\"value\":2,\"color\":\"#00abff\"},{\"code\":\"UY\",\"name\":\"Uruguay\",\"value\":8,\"color\":\"#8bd22f\"},{\"code\":\"PE\",\"name\":\"Peru\",\"value\":2,\"color\":\"#8bd22f\"},{\"code\":\"PK\",\"name\":\"Pakistan\",\"value\":10,\"color\":\"#0091d8\"},{\"code\":\"PH\",\"name\":\"Philippines\",\"value\":8,\"color\":\"#0091d8\"},{\"code\":\"PL\",\"name\":\"Poland\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"EE\",\"name\":\"Estonia\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"EG\",\"name\":\"Egypt\",\"value\":5,\"color\":\"#f95372\"},{\"code\":\"ZA\",\"name\":\"South Africa\",\"value\":25,\"color\":\"#f95372\"},{\"code\":\"EC\",\"name\":\"Ecuador\",\"value\":20,\"color\":\"#8bd22f\"},{\"code\":\"ZW\",\"name\":\"Zimbabwe\",\"value\":2,\"color\":\"#f95372\"},{\"code\":\"ES\",\"name\":\"Spain\",\"value\":19,\"color\":\"#e7ba08\"},{\"code\":\"MA\",\"name\":\"Morocco\",\"value\":43,\"color\":\"#f95372\"},{\"code\":\"MM\",\"name\":\"Myanmar\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"MN\",\"name\":\"Mongolia\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"MK\",\"name\":\"Macedonia, FYR\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"MY\",\"name\":\"Malaysia\",\"value\":5,\"color\":\"#0091d8\"},{\"code\":\"MX\",\"name\":\"Mexico\",\"value\":8,\"color\":\"#00abff\"},{\"code\":\"FR\",\"name\":\"France\",\"value\":6,\"color\":\"#e7ba08\"},{\"code\":\"FI\",\"name\":\"Finland\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"NI\",\"name\":\"Nicaragua\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"NL\",\"name\":\"Netherlands\",\"value\":95,\"color\":\"#e7ba08\"},{\"code\":\"NO\",\"name\":\"Norway\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"NA\",\"name\":\"Namibia\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"NG\",\"name\":\"Nigeria\",\"value\":21,\"color\":\"#f95372\"},{\"code\":\"NZ\",\"name\":\"New Zealand\",\"value\":9,\"color\":\"#c49e06\"},{\"code\":\"CH\",\"name\":\"Switzerland\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"CO\",\"name\":\"Colombia\",\"value\":4,\"color\":\"#8bd22f\"},{\"code\":\"CN\",\"name\":\"China\",\"value\":66,\"color\":\"#0091d8\"},{\"code\":\"CL\",\"name\":\"Chile\",\"value\":2,\"color\":\"#8bd22f\"},{\"code\":\"CA\",\"name\":\"Canada\",\"value\":55,\"color\":\"#00abff\"},{\"code\":\"CR\",\"name\":\"Costa Rica\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"KE\",\"name\":\"Kenya\",\"value\":16,\"color\":\"#f95372\"},{\"code\":\"KR\",\"name\":\"Korea, Rep.\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"SI\",\"name\":\"Slovenia\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"SO\",\"name\":\"Somalia\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"KW\",\"name\":\"Kuwait\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"SA\",\"name\":\"Saudi Arabia\",\"value\":5,\"color\":\"#0091d8\"},{\"code\":\"SG\",\"name\":\"Singapore\",\"value\":2,\"color\":\"#0091d8\"},{\"code\":\"SE\",\"name\":\"Sweden\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"DO\",\"name\":\"Dominican Rep.\",\"value\":9,\"color\":\"#00abff\"},{\"code\":\"DK\",\"name\":\"Denmark\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"DE\",\"name\":\"Germany\",\"value\":12,\"color\":\"#e7ba08\"},{\"code\":\"US\",\"name\":\"United States\",\"value\":872,\"color\":\"#00abff\"},{\"code\":\"TZ\",\"name\":\"Tanzania\",\"value\":2,\"color\":\"#f95372\"},{\"code\":\"LA\",\"name\":\"Laos\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"TR\",\"name\":\"Turkey\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"TN\",\"name\":\"Tunisia\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"LT\",\"name\":\"Lithuania\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"LU\",\"name\":\"Luxembourg\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"TH\",\"name\":\"Thailand\",\"value\":6,\"color\":\"#0091d8\"},{\"code\":\"AE\",\"name\":\"United Arab Emirates\",\"value\":14,\"color\":\"#0091d8\"},{\"code\":\"VE\",\"name\":\"Venezuela\",\"value\":11,\"color\":\"#8bd22f\"},{\"code\":\"IQ\",\"name\":\"Iraq\",\"value\":3,\"color\":\"#0091d8\"},{\"code\":\"IT\",\"name\":\"Italy\",\"value\":6,\"color\":\"#e7ba08\"},{\"code\":\"VN\",\"name\":\"Vietnam\",\"value\":18,\"color\":\"#0091d8\"},{\"code\":\"AR\",\"name\":\"Argentina\",\"value\":4,\"color\":\"#8bd22f\"},{\"code\":\"AU\",\"name\":\"Australia\",\"value\":22,\"color\":\"#c49e06\"},{\"code\":\"IL\",\"name\":\"Israel\",\"value\":3,\"color\":\"#0091d8\"},{\"code\":\"IN\",\"name\":\"India\",\"value\":38,\"color\":\"#0091d8\"},{\"code\":\"LB\",\"name\":\"Lebanon\",\"value\":2,\"color\":\"#0091d8\"},{\"code\":\"AZ\",\"name\":\"Azerbaijan\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"IE\",\"name\":\"Ireland\",\"value\":42,\"color\":\"#e7ba08\"},{\"code\":\"ID\",\"name\":\"Indonesia\",\"value\":4,\"color\":\"#0091d8\"},{\"code\":\"BD\",\"name\":\"Bangladesh\",\"value\":2,\"color\":\"#0091d8\"}];\n\n       self.transformationLocation(self.mapData,self);\n\n       \n       self.languageChartType = 'doughnut';\n   self.languageLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n   self.languageColor = [{\n     backgroundColor:['rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)'],\n     hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n     hoverBorderColor:\"#7FFD1F\"\n   }];\n   self.languageData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Mentions'}];\n                   \n\n\n\n\n\n\n\n\n}\n\npublic makeRequest(self){\n \n   if(self.sentimental_data!==\"\"){\n     self.requestSentimental({\"sentimental\":self.sentimental_data},self);\n   } \n   \n  \n}\n\n\n\n   \nmakeInputData(self,data){\n  self.brand_count = data.allbrand_count;\n  self.sentimentLabels = self.getChartLabel(data.sentiment);\n  self.sentimentData = self.getChartValue(data.sentiment);\n\n  self.topMentionLabels = self.getChartLabel(data.top_mention);\n  self.topMentionData = [{data: self.getChartValue(data.top_mention), label: 'Top Mentions'}];\n  \n  self.topBrandMoniteringLabels=self.getChartLabel(data.channels);\n  self.topBrandMoniteringData= [{data: self.getChartValue(data.channels), label: 'Brand Monitoring Category'}];\n\n  self.topDomainLabels = self.getChartLabel(data.top_domain);\n  self.topDomainData = [{ label: 'Top Domain',data: self.getChartValue(data.top_domain) }];\n\n  self.topKeywordLabels = self.getChartLabel(data.brands);\n  self.topKeywordData = [{data: self.getChartValue(data.brands), label: 'Top Brand Monitoring Brands'}];\n\n  self.topBrandTypeData = [{data:self.getChartValue(data.brand_type), label: 'Top Brand Type'}];\n  self.topBrandTypeLabels = self.getChartLabel(data.brand_type);\n\n  \n  self.topUserLabels = self.getLanguageLabel(data.article_lang);\n  self.topUserData = self.getLanguageValue(data.article_lang);\n\n  self.lineChartData =[{data: self.getLineValueTrue(data.histogram), label: 'Engaged True'},{data: self.getLineValueFalse(data.histogram), label: 'Engaged False'}, ];\n  self.lineChartLabels = self.getLineLabel(data.histogram)\n\n  \n\n  var data_array = [];\n            var logoData = data.tags;\n            logoData = JSON.parse(JSON.stringify(logoData).split('\"key\":').join('\"text\":'));\n            logoData = JSON.parse(JSON.stringify(logoData).split('\"doc_count\":').join('\"weight\":'));\n            logoData.forEach(function (element) {\n            \n                        var objWord = {\n                            text: element.text,\n                            weight: element.weight,\n                            handlers: {\n                                click: function () {\n                                    console.log(\"it worked for\" + element.text); \n                                    self.logo_ele = element.text;\n                                    //self.makeRequest(self);\n                                }\n                            }\n                        };\n                       \n                      data_array.push(objWord);\n                    });\n            jQuery(\"#col1\").jQCloud('update',data_array,{  \n                  autoResize: true  \n            });\n\n\n \n}\n\ngetBackHome(){\n  console.log('click');\n  let self = this;  \nself.requestLeague(self);\n}\n\nrequestLeague(self){\n  this._httpService.GetHttp(\"get_league\")\n            .subscribe(\n            (data) => {\n             //console.log(data)\n            self.makeInputData(self,data);\n            },\n            (error) => {\n               console.log(error);\n            }\n            \n            );\n}\n\n\nrequestLeagueWithDate(self,post_data){\n  this._httpService.PostHttp(JSON.stringify(post_data),\"get_league_date\")\n            .subscribe(\n            (data) => {\n             console.log(data)\n            self.makeInputData(self,data);\n            },\n            (error) => {\n               console.log(error);\n            }\n            \n            );\n}\n\ngetLineLabel(data){\n var data = data;   \n var label = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            //console.log(JSON.stringify(obj.key_as_string));\n            label.push(obj.key_as_string);\n          }\n        return label;\n}\n\ngetLineValueTrue(data){\n var data = data;   \n var value = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            var data_count = obj.data_ins.buckets\n            for (var j = 0; j < data_count.length; j++) {\n              var obj1 = data_count[j];\n              if(obj1.key_as_string == 'true'){\n                 value.push(obj1.doc_count);\n              }                                                                                                                                                                                                                                                                                \n             }\n           \n        }\n        return value;\n}\n\ngetLineValueFalse(data){\n var data = data;   \n var value = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            var data_count = obj.data_ins.buckets\n            for (var j = 0; j < data_count.length; j++) {\n              var obj1 = data_count[j];\n              if(obj1.key_as_string == 'false'){\n                 value.push(obj1.doc_count);\n              }                                                                                                                                                                                                                                                                                \n             }\n           \n        }\n        return value;\n}\n \n\n\ngetLanguageLabel(data){\n var data = data;   \n var label = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            //console.log(JSON.stringify(obj.key));\n            label.push(obj.key);\n          }\n        return label;\n}\n\ngetLanguageValue(data){\n var data = data;   \n var value = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            value.push(obj.doc_count);\n        }\n        return value;\n}\n  \n formatDate(date) {\n    var d = new Date(date);\n    var epoc = (d.getTime()-d.getSeconds())/1000;\n\n    return epoc+'000';\n}\n\n\n\n ProcessTwitt_Data(data2,self){\n\n    if(data2.hasOwnProperty(\"top_articles\")){\n     self.url_1 =  \"https://twitter.com/AMAs/status/800378679536676864\";\n     self.url_2 =  \"https://twitter.com/AMAs/status/800458706823561216\";\n     self.url_3 =  \"https://twitter.com/AMAs/status/800466263034109952\";\n     self.url_4 =  \"https://twitter.com/AMAs/status/800443605223501824\";\n\n      self.mapData = self.getMapLocationData(data2.article_locations,self);\n      self.transformationLocation(self.mapData,self);\n};\n   \n  }\n  \n\n\n  getResponsive(padding, offset) {\n    return this._chartistJs2Service.getResponsive(padding, offset);\n  }\n\n\n\n\n  OnChangeDate() {\n    let self = this;\n    let post_data= {};\n    if(self.start_date !== \"\" ||  self.end_date !==\"\") {\n      post_data = {\"gte\":\"1480591800547\",\"lte\":\"1485775800547\"}\n      self.requestLeagueWithDate(self,post_data);\n     } else{\n        post_data = {\"gte\":self.start_date,\"lte\":self.end_date}\n        self.requestLeagueWithDate(self,post_data);\n  }\n    \n}\n   private selectDate(value: any, dateInput: any) {\n      let self = this;\n       dateInput.start = value.start;\n       \n       dateInput.end = value.end;\n       self.start_date = this.formatDate(dateInput.start);\n       console.log(self.start_date);\n      \n       self.end_date = this.formatDate(dateInput.end);\n       console.log(self.end_date);\n       self.OnChangeDate()\n       \n\n       }\n       \n\n       \n   \n\n\n  OnChangeBrand() {\n     let self = this;\n     self.OnChangeDate();\n  }\n\n\n\n  OnChangeChannel() {\n    let self = this;\n    self.OnChangeDate();\n\n  }\n\n  // events\n  public chartClicked(e:any):void {\n    //console.log(e);\n  }\n\n  public chartHovered(e:any):void {\n    //console.log(e);\n  }\n\n  public chartSentimentalClicked(e:any):void{\n    let self = this;\n     self.sentimental_data = e.active[0]._model.label;\n    self.makeRequest(self);\n  }\n\n public barChartOptions:any = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  public articleChartOptions:any = {\n    scaleShowVerticalLines: false,\n    scales: {\n           xAxes: [{\n               display: false\n           }]\n       },\n    responsive: true\n  };\n\n  public randomize():void {\n    \n\n  }\n\ngetChartLabel(data){\n var data = data;   \n var label = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            label.push(obj.key);\n        }\n        return label;\n}\n\n\ngetChartValue(data){\n var data = data;   \n var value = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            value.push(obj.doc_count);\n        }\n        return value;\n}\n\n\n\ngetMapLocationData(result,self){\n\n\n   var mapResult = [];\n\n    for (var key in result) {\n            if (key !== \"\") {\n                var data = self.getMapData(key,result[key]);\n                mapResult.push(data);\n            }\n\n  }\n  \nreturn mapResult;\n\n  \n  }\n\n\n\nngAfterViewInit () {\n           !function(d,s,id){\n               var js: any,\n                   fjs=d.getElementsByTagName(s)[0],\n                   p='https';\n               if(!d.getElementById(id)){\n                   js=d.createElement(s);\n                   js.id=id;\n                   js.src=p+\"://platform.twitter.com/widgets.js\";\n                   fjs.parentNode.insertBefore(js,fjs);\n               }\n           }\n           (document,\"script\",\"twitter-wjs\");\n\n\n\n\n   }\n\ngetMapData(key,value){\n   var layoutColors = this._baConfig.get().colors;\n   var mapData = [\n      {'code': 'AF', 'name': 'Afghanistan', 'value': 32358260, 'color': layoutColors.primaryDark},\n      {'code': 'AL', 'name': 'Albania', 'value': 3215988, 'color': layoutColors.warning},\n      {'code': 'DZ', 'name': 'Algeria', 'value': 35980193, 'color': layoutColors.danger},\n      {'code': 'AO', 'name': 'Angola', 'value': 19618432, 'color': layoutColors.danger},\n      {'code': 'AR', 'name': 'Argentina', 'value': 40764561, 'color': layoutColors.success},\n      {'code': 'AM', 'name': 'Armenia', 'value': 3100236, 'color': layoutColors.warning},\n      {'code': 'AU', 'name': 'Australia', 'value': 22605732, 'color': layoutColors.warningDark},\n      {'code': 'AT', 'name': 'Austria', 'value': 8413429, 'color': layoutColors.warning},\n      {'code': 'AZ', 'name': 'Azerbaijan', 'value': 9306023, 'color': layoutColors.warning},\n      {'code': 'BH', 'name': 'Bahrain', 'value': 1323535, 'color': layoutColors.primaryDark},\n      {'code': 'BD', 'name': 'Bangladesh', 'value': 150493658, 'color': layoutColors.primaryDark},\n      {'code': 'BY', 'name': 'Belarus', 'value': 9559441, 'color': layoutColors.warning},\n      {'code': 'BE', 'name': 'Belgium', 'value': 10754056, 'color': layoutColors.warning},\n      {'code': 'BJ', 'name': 'Benin', 'value': 9099922, 'color': layoutColors.danger},\n      {'code': 'BT', 'name': 'Bhutan', 'value': 738267, 'color': layoutColors.primaryDark},\n      {'code': 'BO', 'name': 'Bolivia', 'value': 10088108, 'color': layoutColors.success},\n      {'code': 'BA', 'name': 'Bosnia and Herzegovina', 'value': 3752228, 'color': layoutColors.warning},\n      {'code': 'BW', 'name': 'Botswana', 'value': 2030738, 'color': layoutColors.danger},\n      {'code': 'BR', 'name': 'Brazil', 'value': 196655014, 'color': layoutColors.success},\n      {'code': 'BN', 'name': 'Brunei', 'value': 405938, 'color': layoutColors.primaryDark},\n      {'code': 'BG', 'name': 'Bulgaria', 'value': 7446135, 'color': layoutColors.warning},\n      {'code': 'BF', 'name': 'Burkina Faso', 'value': 16967845, 'color': layoutColors.danger},\n      {'code': 'BI', 'name': 'Burundi', 'value': 8575172, 'color': layoutColors.danger},\n      {'code': 'KH', 'name': 'Cambodia', 'value': 14305183, 'color': layoutColors.primaryDark},\n      {'code': 'CM', 'name': 'Cameroon', 'value': 20030362, 'color': layoutColors.danger},\n      {'code': 'CA', 'name': 'Canada', 'value': 34349561, 'color': layoutColors.primary},\n      {'code': 'CV', 'name': 'Cape Verde', 'value': 500585, 'color': layoutColors.danger},\n      {'code': 'CF', 'name': 'Central African Rep.', 'value': 4486837, 'color': layoutColors.danger},\n      {'code': 'TD', 'name': 'Chad', 'value': 11525496, 'color': layoutColors.danger},\n      {'code': 'CL', 'name': 'Chile', 'value': 17269525, 'color': layoutColors.success},\n      {'code': 'CN', 'name': 'China', 'value': 1347565324, 'color': layoutColors.primaryDark},\n      {'code': 'CO', 'name': 'Colombia', 'value': 46927125, 'color': layoutColors.success},\n      {'code': 'KM', 'name': 'Comoros', 'value': 753943, 'color': layoutColors.danger},\n      {'code': 'CD', 'name': 'Congo, Dem. Rep.', 'value': 67757577, 'color': layoutColors.danger},\n      {'code': 'CG', 'name': 'Congo, Rep.', 'value': 4139748, 'color': layoutColors.danger},\n      {'code': 'CR', 'name': 'Costa Rica', 'value': 4726575, 'color': layoutColors.primary},\n      {'code': 'CI', 'name': 'Cote d\\'Ivoire', 'value': 20152894, 'color': layoutColors.danger},\n      {'code': 'HR', 'name': 'Croatia', 'value': 4395560, 'color': layoutColors.warning},\n      {'code': 'CU', 'name': 'Cuba', 'value': 11253665, 'color': layoutColors.primary},\n      {'code': 'CY', 'name': 'Cyprus', 'value': 1116564, 'color': layoutColors.warning},\n      {'code': 'CZ', 'name': 'Czech Rep.', 'value': 10534293, 'color': layoutColors.warning},\n      {'code': 'DK', 'name': 'Denmark', 'value': 5572594, 'color': layoutColors.warning},\n      {'code': 'DJ', 'name': 'Djibouti', 'value': 905564, 'color': layoutColors.danger},\n      {'code': 'DO', 'name': 'Dominican Rep.', 'value': 10056181, 'color': layoutColors.primary},\n      {'code': 'EC', 'name': 'Ecuador', 'value': 14666055, 'color': layoutColors.success},\n      {'code': 'EG', 'name': 'Egypt', 'value': 82536770, 'color': layoutColors.danger},\n      {'code': 'SV', 'name': 'El Salvador', 'value': 6227491, 'color': layoutColors.primary},\n      {'code': 'GQ', 'name': 'Equatorial Guinea', 'value': 720213, 'color': layoutColors.danger},\n      {'code': 'ER', 'name': 'Eritrea', 'value': 5415280, 'color': layoutColors.danger},\n      {'code': 'EE', 'name': 'Estonia', 'value': 1340537, 'color': layoutColors.warning},\n      {'code': 'ET', 'name': 'Ethiopia', 'value': 84734262, 'color': layoutColors.danger},\n      {'code': 'FJ', 'name': 'Fiji', 'value': 868406, 'color': layoutColors.warningDark},\n      {'code': 'FI', 'name': 'Finland', 'value': 5384770, 'color': layoutColors.warning},\n      {'code': 'FR', 'name': 'France', 'value': 63125894, 'color': layoutColors.warning},\n      {'code': 'GA', 'name': 'Gabon', 'value': 1534262, 'color': layoutColors.danger},\n      {'code': 'GM', 'name': 'Gambia', 'value': 1776103, 'color': layoutColors.danger},\n      {'code': 'GE', 'name': 'Georgia', 'value': 4329026, 'color': layoutColors.warning},\n      {'code': 'DE', 'name': 'Germany', 'value': 82162512, 'color': layoutColors.warning},\n      {'code': 'GH', 'name': 'Ghana', 'value': 24965816, 'color': layoutColors.danger},\n      {'code': 'GR', 'name': 'Greece', 'value': 11390031, 'color': layoutColors.warning},\n      {'code': 'GT', 'name': 'Guatemala', 'value': 14757316, 'color': layoutColors.primary},\n      {'code': 'GN', 'name': 'Guinea', 'value': 10221808, 'color': layoutColors.danger},\n      {'code': 'GW', 'name': 'Guinea-Bissau', 'value': 1547061, 'color': layoutColors.danger},\n      {'code': 'GY', 'name': 'Guyana', 'value': 756040, 'color': layoutColors.success},\n      {'code': 'HT', 'name': 'Haiti', 'value': 10123787, 'color': layoutColors.primary},\n      {'code': 'HN', 'name': 'Honduras', 'value': 7754687, 'color': layoutColors.primary},\n      {'code': 'HK', 'name': 'Hong Kong, China', 'value': 7122187, 'color': layoutColors.primaryDark},\n      {'code': 'HU', 'name': 'Hungary', 'value': 9966116, 'color': layoutColors.warning},\n      {'code': 'IS', 'name': 'Iceland', 'value': 324366, 'color': layoutColors.warning},\n      {'code': 'IN', 'name': 'India', 'value': 1241491960, 'color': layoutColors.primaryDark},\n      {'code': 'ID', 'name': 'Indonesia', 'value': 242325638, 'color': layoutColors.primaryDark},\n      {'code': 'IR', 'name': 'Iran', 'value': 74798599, 'color': layoutColors.primaryDark},\n      {'code': 'IQ', 'name': 'Iraq', 'value': 32664942, 'color': layoutColors.primaryDark},\n      {'code': 'IE', 'name': 'Ireland', 'value': 4525802, 'color': layoutColors.warning},\n      {'code': 'IL', 'name': 'Israel', 'value': 7562194, 'color': layoutColors.primaryDark},\n      {'code': 'IT', 'name': 'Italy', 'value': 60788694, 'color': layoutColors.warning},\n      {'code': 'JM', 'name': 'Jamaica', 'value': 2751273, 'color': layoutColors.primary},\n      {'code': 'JP', 'name': 'Japan', 'value': 126497241, 'color': layoutColors.primaryDark},\n      {'code': 'JO', 'name': 'Jordan', 'value': 6330169, 'color': layoutColors.primaryDark},\n      {'code': 'KZ', 'name': 'Kazakhstan', 'value': 16206750, 'color': layoutColors.primaryDark},\n      {'code': 'KE', 'name': 'Kenya', 'value': 41609728, 'color': layoutColors.danger},\n      {'code': 'KP', 'name': 'Korea, Dem. Rep.', 'value': 24451285, 'color': layoutColors.primaryDark},\n      {'code': 'KR', 'name': 'Korea, Rep.', 'value': 48391343, 'color': layoutColors.primaryDark},\n      {'code': 'KW', 'name': 'Kuwait', 'value': 2818042, 'color': layoutColors.primaryDark},\n      {'code': 'KG', 'name': 'Kyrgyzstan', 'value': 5392580, 'color': layoutColors.primaryDark},\n      {'code': 'LA', 'name': 'Laos', 'value': 6288037, 'color': layoutColors.primaryDark},\n      {'code': 'LV', 'name': 'Latvia', 'value': 2243142, 'color': layoutColors.warning},\n      {'code': 'LB', 'name': 'Lebanon', 'value': 4259405, 'color': layoutColors.primaryDark},\n      {'code': 'LS', 'name': 'Lesotho', 'value': 2193843, 'color': layoutColors.danger},\n      {'code': 'LR', 'name': 'Liberia', 'value': 4128572, 'color': layoutColors.danger},\n      {'code': 'LY', 'name': 'Libya', 'value': 6422772, 'color': layoutColors.danger},\n      {'code': 'LT', 'name': 'Lithuania', 'value': 3307481, 'color': layoutColors.warning},\n      {'code': 'LU', 'name': 'Luxembourg', 'value': 515941, 'color': layoutColors.warning},\n      {'code': 'MK', 'name': 'Macedonia, FYR', 'value': 2063893, 'color': layoutColors.warning},\n      {'code': 'MG', 'name': 'Madagascar', 'value': 21315135, 'color': layoutColors.danger},\n      {'code': 'MW', 'name': 'Malawi', 'value': 15380888, 'color': layoutColors.danger},\n      {'code': 'MY', 'name': 'Malaysia', 'value': 28859154, 'color': layoutColors.primaryDark},\n      {'code': 'ML', 'name': 'Mali', 'value': 15839538, 'color': layoutColors.danger},\n      {'code': 'MR', 'name': 'Mauritania', 'value': 3541540, 'color': layoutColors.danger},\n      {'code': 'MU', 'name': 'Mauritius', 'value': 1306593, 'color': layoutColors.danger},\n      {'code': 'MX', 'name': 'Mexico', 'value': 114793341, 'color': layoutColors.primary},\n      {'code': 'MD', 'name': 'Moldova', 'value': 3544864, 'color': layoutColors.warning},\n      {'code': 'MN', 'name': 'Mongolia', 'value': 2800114, 'color': layoutColors.primaryDark},\n      {'code': 'ME', 'name': 'Montenegro', 'value': 632261, 'color': layoutColors.warning},\n      {'code': 'MA', 'name': 'Morocco', 'value': 32272974, 'color': layoutColors.danger},\n      {'code': 'MZ', 'name': 'Mozambique', 'value': 23929708, 'color': layoutColors.danger},\n      {'code': 'MM', 'name': 'Myanmar', 'value': 48336763, 'color': layoutColors.primaryDark},\n      {'code': 'NA', 'name': 'Namibia', 'value': 2324004, 'color': layoutColors.danger},\n      {'code': 'NP', 'name': 'Nepal', 'value': 30485798, 'color': layoutColors.primaryDark},\n      {'code': 'NL', 'name': 'Netherlands', 'value': 16664746, 'color': layoutColors.warning},\n      {'code': 'NZ', 'name': 'New Zealand', 'value': 4414509, 'color': layoutColors.warningDark},\n      {'code': 'NI', 'name': 'Nicaragua', 'value': 5869859, 'color': layoutColors.primary},\n      {'code': 'NE', 'name': 'Niger', 'value': 16068994, 'color': layoutColors.danger},\n      {'code': 'NG', 'name': 'Nigeria', 'value': 162470737, 'color': layoutColors.danger},\n      {'code': 'NO', 'name': 'Norway', 'value': 4924848, 'color': layoutColors.warning},\n      {'code': 'OM', 'name': 'Oman', 'value': 2846145, 'color': layoutColors.primaryDark},\n      {'code': 'PK', 'name': 'Pakistan', 'value': 176745364, 'color': layoutColors.primaryDark},\n      {'code': 'PA', 'name': 'Panama', 'value': 3571185, 'color': layoutColors.primary},\n      {'code': 'PG', 'name': 'Papua New Guinea', 'value': 7013829, 'color': layoutColors.warningDark},\n      {'code': 'PY', 'name': 'Paraguay', 'value': 6568290, 'color': layoutColors.success},\n      {'code': 'PE', 'name': 'Peru', 'value': 29399817, 'color': layoutColors.success},\n      {'code': 'PH', 'name': 'Philippines', 'value': 94852030, 'color': layoutColors.primaryDark},\n      {'code': 'PL', 'name': 'Poland', 'value': 38298949, 'color': layoutColors.warning},\n      {'code': 'PT', 'name': 'Portugal', 'value': 10689663, 'color': layoutColors.warning},\n      {'code': 'PR', 'name': 'Puerto Rico', 'value': 3745526, 'color': layoutColors.primary},\n      {'code': 'QA', 'name': 'Qatar', 'value': 1870041, 'color': layoutColors.primaryDark},\n      {'code': 'RO', 'name': 'Romania', 'value': 21436495, 'color': layoutColors.warning},\n      {'code': 'RU', 'name': 'Russia', 'value': 142835555, 'color': layoutColors.warning},\n      {'code': 'RW', 'name': 'Rwanda', 'value': 10942950, 'color': layoutColors.danger},\n      {'code': 'SA', 'name': 'Saudi Arabia', 'value': 28082541, 'color': layoutColors.primaryDark},\n      {'code': 'SN', 'name': 'Senegal', 'value': 12767556, 'color': layoutColors.danger},\n      {'code': 'RS', 'name': 'Serbia', 'value': 9853969, 'color': layoutColors.warning},\n      {'code': 'SL', 'name': 'Sierra Leone', 'value': 5997486, 'color': layoutColors.danger},\n      {'code': 'SG', 'name': 'Singapore', 'value': 5187933, 'color': layoutColors.primaryDark},\n      {'code': 'SK', 'name': 'Slovak Republic', 'value': 5471502, 'color': layoutColors.warning},\n      {'code': 'SI', 'name': 'Slovenia', 'value': 2035012, 'color': layoutColors.warning},\n      {'code': 'SB', 'name': 'Solomon Islands', 'value': 552267, 'color': layoutColors.warningDark},\n      {'code': 'SO', 'name': 'Somalia', 'value': 9556873, 'color': layoutColors.danger},\n      {'code': 'ZA', 'name': 'South Africa', 'value': 50459978, 'color': layoutColors.danger},\n      {'code': 'ES', 'name': 'Spain', 'value': 46454895, 'color': layoutColors.warning},\n      {'code': 'LK', 'name': 'Sri Lanka', 'value': 21045394, 'color': layoutColors.primaryDark},\n      {'code': 'SD', 'name': 'Sudan', 'value': 34735288, 'color': layoutColors.danger},\n      {'code': 'SR', 'name': 'Suriname', 'value': 529419, 'color': layoutColors.success},\n      {'code': 'SZ', 'name': 'Swaziland', 'value': 1203330, 'color': layoutColors.danger},\n      {'code': 'SE', 'name': 'Sweden', 'value': 9440747, 'color': layoutColors.warning},\n      {'code': 'CH', 'name': 'Switzerland', 'value': 7701690, 'color': layoutColors.warning},\n      {'code': 'SY', 'name': 'Syria', 'value': 20766037, 'color': layoutColors.primaryDark},\n      {'code': 'TW', 'name': 'Taiwan', 'value': 23072000, 'color': layoutColors.primaryDark},\n      {'code': 'TJ', 'name': 'Tajikistan', 'value': 6976958, 'color': layoutColors.primaryDark},\n      {'code': 'TZ', 'name': 'Tanzania', 'value': 46218486, 'color': layoutColors.danger},\n      {'code': 'TH', 'name': 'Thailand', 'value': 69518555, 'color': layoutColors.primaryDark},\n      {'code': 'TG', 'name': 'Togo', 'value': 6154813, 'color': layoutColors.danger},\n      {'code': 'TT', 'name': 'Trinidad and Tobago', 'value': 1346350, 'color': layoutColors.primary},\n      {'code': 'TN', 'name': 'Tunisia', 'value': 10594057, 'color': layoutColors.danger},\n      {'code': 'TR', 'name': 'Turkey', 'value': 73639596, 'color': layoutColors.warning},\n      {'code': 'TM', 'name': 'Turkmenistan', 'value': 5105301, 'color': layoutColors.primaryDark},\n      {'code': 'UG', 'name': 'Uganda', 'value': 34509205, 'color': layoutColors.danger},\n      {'code': 'UA', 'name': 'Ukraine', 'value': 45190180, 'color': layoutColors.warning},\n      {'code': 'AE', 'name': 'United Arab Emirates', 'value': 7890924, 'color': layoutColors.primaryDark},\n      {'code': 'GB', 'name': 'United Kingdom', 'value': 62417431, 'color': layoutColors.warning},\n      {'code': 'US', 'name': 'United States', 'value': 313085380, 'color': layoutColors.primary},\n      {'code': 'UY', 'name': 'Uruguay', 'value': 3380008, 'color': layoutColors.success},\n      {'code': 'UZ', 'name': 'Uzbekistan', 'value': 27760267, 'color': layoutColors.primaryDark},\n      {'code': 'VE', 'name': 'Venezuela', 'value': 29436891, 'color': layoutColors.success},\n      {'code': 'PS', 'name': 'West Bank and Gaza', 'value': 4152369, 'color': layoutColors.primaryDark},\n      {'code': 'VN', 'name': 'Vietnam', 'value': 88791996, 'color': layoutColors.primaryDark},\n      {'code': 'YE', 'name': 'Yemen, Rep.', 'value': 24799880, 'color': layoutColors.primaryDark},\n      {'code': 'ZM', 'name': 'Zambia', 'value': 13474959, 'color': layoutColors.danger},\n      {'code': 'ZW', 'name': 'Zimbabwe', 'value': 12754378, 'color': layoutColors.danger}\n    ];\n\n    \n\n    for (var i = 0; i < mapData.length; i++) {\n            var obj = mapData[i];\n            if(obj.code === key && key!= \"\"){\n              var data = {}; \n              data['code'] = key;\n              data['name'] = obj.name;\n              data['value'] = value;\n              data['color'] = obj.color;\n              return data;\n            }\n           \n        }\n        \n       \n\n}\n\n\ntransformationLocation(mapdata,self){\n   self.inputdata = mapdata;\n   self.chartData = self.getDataWithParam(self.inputdata);\n   let chart = AmCharts.makeChart(this._selector.nativeElement, self.chartData);\n}\n\n\ntransformationDateDropdown(result,self){\n    var sampleObject =[];\n    result.forEach(function(element){\n      var sO={\n        name: element,\n        date: element\n      };\n      sampleObject.push(sO);\n    });\n    \n\n    self.dropDownDate = sampleObject;\n\n}\n\n\n\ntransformationChannalDropdown(result,self){\n    var sampleObject =[];\n    var c_name;\n    result.forEach(function(element){\n      \n\n      if(element ==='reddit'){ c_name ='Reddit'; }\n      if(element ==='facebook'){ c_name ='Facebook'; }\n      if(element ==='tumblr'){ c_name ='Tumblr'; }\n      if(element ==='flickr'){ c_name ='Flickr'; }\n      if(element ==='news'){ c_name ='News'; }\n      if(element ==='all_media_stat'){ c_name ='All'; }\n      if(element ==='twitter'){ c_name ='Twitter'; }\n      if(element ==='Plus'){ c_name ='Plus'; }\n      if(element ==='blogs'){ c_name ='Blogs'; }\n     \n      \n      var sO={\n        name: c_name,\n        channel: element\n      };\n      sampleObject.push(sO);\n    });\n    \n\n    self.dropDownChannel = sampleObject;\n}\n\n\n\ntransformationBrandDropdown(result,self){\n    var sampleObject =[];\n    result.forEach(function(element){\n      var sO={\n        name: element,\n        brand: element\n      };\n      sampleObject.push(sO);\n    });\n   \n\n    self.dropDownBrand = sampleObject;\n}\n\nmakeHasTagInput(result){\n  \n  var cloud =[];\nfor (var i = 0; i < 10; i++) { \n  var data_lb = result[i];\n  \n    cloud.push(data_lb);\n}\nreturn cloud;\n}\n\nmakeReachInput(result){\n  \n  var cloud =[];\nfor (var i = 0; i < 20; i++) { \n  var data_lb = result[i];\n  \n    cloud.push(data_lb);\n}\nreturn cloud;\n}\n\n\n       \n\n\n\n\n\n\n\n\ngetDataWithParam(mapdata,self){\n\n  \n   let layoutColors = this._baConfig.get().colors;\n   let latlong = {};\n    latlong['AD'] = {'latitude': 42.5, 'longitude': 1.5};\n    latlong['AE'] = {'latitude': 24, 'longitude': 54};\n    latlong['AF'] = {'latitude': 33, 'longitude': 65};\n    latlong['AG'] = {'latitude': 17.05, 'longitude': -61.8};\n    latlong['AI'] = {'latitude': 18.25, 'longitude': -63.1667};\n    latlong['AL'] = {'latitude': 41, 'longitude': 20};\n    latlong['AM'] = {'latitude': 40, 'longitude': 45};\n    latlong['AN'] = {'latitude': 12.25, 'longitude': -68.75};\n    latlong['AO'] = {'latitude': -12.5, 'longitude': 18.5};\n    latlong['AP'] = {'latitude': 35, 'longitude': 105};\n    latlong['AQ'] = {'latitude': -90, 'longitude': 0};\n    latlong['AR'] = {'latitude': -34, 'longitude': -64};\n    latlong['AS'] = {'latitude': -14.3333, 'longitude': -170};\n    latlong['AT'] = {'latitude': 47.3333, 'longitude': 13.3333};\n    latlong['AU'] = {'latitude': -27, 'longitude': 133};\n    latlong['AW'] = {'latitude': 12.5, 'longitude': -69.9667};\n    latlong['AZ'] = {'latitude': 40.5, 'longitude': 47.5};\n    latlong['BA'] = {'latitude': 44, 'longitude': 18};\n    latlong['BB'] = {'latitude': 13.1667, 'longitude': -59.5333};\n    latlong['BD'] = {'latitude': 24, 'longitude': 90};\n    latlong['BE'] = {'latitude': 50.8333, 'longitude': 4};\n    latlong['BF'] = {'latitude': 13, 'longitude': -2};\n    latlong['BG'] = {'latitude': 43, 'longitude': 25};\n    latlong['BH'] = {'latitude': 26, 'longitude': 50.55};\n    latlong['BI'] = {'latitude': -3.5, 'longitude': 30};\n    latlong['BJ'] = {'latitude': 9.5, 'longitude': 2.25};\n    latlong['BM'] = {'latitude': 32.3333, 'longitude': -64.75};\n    latlong['BN'] = {'latitude': 4.5, 'longitude': 114.6667};\n    latlong['BO'] = {'latitude': -17, 'longitude': -65};\n    latlong['BR'] = {'latitude': -10, 'longitude': -55};\n    latlong['BS'] = {'latitude': 24.25, 'longitude': -76};\n    latlong['BT'] = {'latitude': 27.5, 'longitude': 90.5};\n    latlong['BV'] = {'latitude': -54.4333, 'longitude': 3.4};\n    latlong['BW'] = {'latitude': -22, 'longitude': 24};\n    latlong['BY'] = {'latitude': 53, 'longitude': 28};\n    latlong['BZ'] = {'latitude': 17.25, 'longitude': -88.75};\n    latlong['CA'] = {'latitude': 54, 'longitude': -100};\n    latlong['CC'] = {'latitude': -12.5, 'longitude': 96.8333};\n    latlong['CD'] = {'latitude': 0, 'longitude': 25};\n    latlong['CF'] = {'latitude': 7, 'longitude': 21};\n    latlong['CG'] = {'latitude': -1, 'longitude': 15};\n    latlong['CH'] = {'latitude': 47, 'longitude': 8};\n    latlong['CI'] = {'latitude': 8, 'longitude': -5};\n    latlong['CK'] = {'latitude': -21.2333, 'longitude': -159.7667};\n    latlong['CL'] = {'latitude': -30, 'longitude': -71};\n    latlong['CM'] = {'latitude': 6, 'longitude': 12};\n    latlong['CN'] = {'latitude': 35, 'longitude': 105};\n    latlong['CO'] = {'latitude': 4, 'longitude': -72};\n    latlong['CR'] = {'latitude': 10, 'longitude': -84};\n    latlong['CU'] = {'latitude': 21.5, 'longitude': -80};\n    latlong['CV'] = {'latitude': 16, 'longitude': -24};\n    latlong['CX'] = {'latitude': -10.5, 'longitude': 105.6667};\n    latlong['CY'] = {'latitude': 35, 'longitude': 33};\n    latlong['CZ'] = {'latitude': 49.75, 'longitude': 15.5};\n    latlong['DE'] = {'latitude': 51, 'longitude': 9};\n    latlong['DJ'] = {'latitude': 11.5, 'longitude': 43};\n    latlong['DK'] = {'latitude': 56, 'longitude': 10};\n    latlong['DM'] = {'latitude': 15.4167, 'longitude': -61.3333};\n    latlong['DO'] = {'latitude': 19, 'longitude': -70.6667};\n    latlong['DZ'] = {'latitude': 28, 'longitude': 3};\n    latlong['EC'] = {'latitude': -2, 'longitude': -77.5};\n    latlong['EE'] = {'latitude': 59, 'longitude': 26};\n    latlong['EG'] = {'latitude': 27, 'longitude': 30};\n    latlong['EH'] = {'latitude': 24.5, 'longitude': -13};\n    latlong['ER'] = {'latitude': 15, 'longitude': 39};\n    latlong['ES'] = {'latitude': 40, 'longitude': -4};\n    latlong['ET'] = {'latitude': 8, 'longitude': 38};\n    latlong['EU'] = {'latitude': 47, 'longitude': 8};\n    latlong['FI'] = {'latitude': 62, 'longitude': 26};\n    latlong['FJ'] = {'latitude': -18, 'longitude': 175};\n    latlong['FK'] = {'latitude': -51.75, 'longitude': -59};\n    latlong['FM'] = {'latitude': 6.9167, 'longitude': 158.25};\n    latlong['FO'] = {'latitude': 62, 'longitude': -7};\n    latlong['FR'] = {'latitude': 46, 'longitude': 2};\n    latlong['GA'] = {'latitude': -1, 'longitude': 11.75};\n    latlong['GB'] = {'latitude': 54, 'longitude': -2};\n    latlong['GD'] = {'latitude': 12.1167, 'longitude': -61.6667};\n    latlong['GE'] = {'latitude': 42, 'longitude': 43.5};\n    latlong['GF'] = {'latitude': 4, 'longitude': -53};\n    latlong['GH'] = {'latitude': 8, 'longitude': -2};\n    latlong['GI'] = {'latitude': 36.1833, 'longitude': -5.3667};\n    latlong['GL'] = {'latitude': 72, 'longitude': -40};\n    latlong['GM'] = {'latitude': 13.4667, 'longitude': -16.5667};\n    latlong['GN'] = {'latitude': 11, 'longitude': -10};\n    latlong['GP'] = {'latitude': 16.25, 'longitude': -61.5833};\n    latlong['GQ'] = {'latitude': 2, 'longitude': 10};\n    latlong['GR'] = {'latitude': 39, 'longitude': 22};\n    latlong['GS'] = {'latitude': -54.5, 'longitude': -37};\n    latlong['GT'] = {'latitude': 15.5, 'longitude': -90.25};\n    latlong['GU'] = {'latitude': 13.4667, 'longitude': 144.7833};\n    latlong['GW'] = {'latitude': 12, 'longitude': -15};\n    latlong['GY'] = {'latitude': 5, 'longitude': -59};\n    latlong['HK'] = {'latitude': 22.25, 'longitude': 114.1667};\n    latlong['HM'] = {'latitude': -53.1, 'longitude': 72.5167};\n    latlong['HN'] = {'latitude': 15, 'longitude': -86.5};\n    latlong['HR'] = {'latitude': 45.1667, 'longitude': 15.5};\n    latlong['HT'] = {'latitude': 19, 'longitude': -72.4167};\n    latlong['HU'] = {'latitude': 47, 'longitude': 20};\n    latlong['ID'] = {'latitude': -5, 'longitude': 120};\n    latlong['IE'] = {'latitude': 53, 'longitude': -8};\n    latlong['IL'] = {'latitude': 31.5, 'longitude': 34.75};\n    latlong['IN'] = {'latitude': 20, 'longitude': 77};\n    latlong['IO'] = {'latitude': -6, 'longitude': 71.5};\n    latlong['IQ'] = {'latitude': 33, 'longitude': 44};\n    latlong['IR'] = {'latitude': 32, 'longitude': 53};\n    latlong['IS'] = {'latitude': 65, 'longitude': -18};\n    latlong['IT'] = {'latitude': 42.8333, 'longitude': 12.8333};\n    latlong['JM'] = {'latitude': 18.25, 'longitude': -77.5};\n    latlong['JO'] = {'latitude': 31, 'longitude': 36};\n    latlong['JP'] = {'latitude': 36, 'longitude': 138};\n    latlong['KE'] = {'latitude': 1, 'longitude': 38};\n    latlong['KG'] = {'latitude': 41, 'longitude': 75};\n    latlong['KH'] = {'latitude': 13, 'longitude': 105};\n    latlong['KI'] = {'latitude': 1.4167, 'longitude': 173};\n    latlong['KM'] = {'latitude': -12.1667, 'longitude': 44.25};\n    latlong['KN'] = {'latitude': 17.3333, 'longitude': -62.75};\n    latlong['KP'] = {'latitude': 40, 'longitude': 127};\n    latlong['KR'] = {'latitude': 37, 'longitude': 127.5};\n    latlong['KW'] = {'latitude': 29.3375, 'longitude': 47.6581};\n    latlong['KY'] = {'latitude': 19.5, 'longitude': -80.5};\n    latlong['KZ'] = {'latitude': 48, 'longitude': 68};\n    latlong['LA'] = {'latitude': 18, 'longitude': 105};\n    latlong['LB'] = {'latitude': 33.8333, 'longitude': 35.8333};\n    latlong['LC'] = {'latitude': 13.8833, 'longitude': -61.1333};\n    latlong['LI'] = {'latitude': 47.1667, 'longitude': 9.5333};\n    latlong['LK'] = {'latitude': 7, 'longitude': 81};\n    latlong['LR'] = {'latitude': 6.5, 'longitude': -9.5};\n    latlong['LS'] = {'latitude': -29.5, 'longitude': 28.5};\n    latlong['LT'] = {'latitude': 55, 'longitude': 24};\n    latlong['LU'] = {'latitude': 49.75, 'longitude': 6};\n    latlong['LV'] = {'latitude': 57, 'longitude': 25};\n    latlong['LY'] = {'latitude': 25, 'longitude': 17};\n    latlong['MA'] = {'latitude': 32, 'longitude': -5};\n    latlong['MC'] = {'latitude': 43.7333, 'longitude': 7.4};\n    latlong['MD'] = {'latitude': 47, 'longitude': 29};\n    latlong['ME'] = {'latitude': 42.5, 'longitude': 19.4};\n    latlong['MG'] = {'latitude': -20, 'longitude': 47};\n    latlong['MH'] = {'latitude': 9, 'longitude': 168};\n    latlong['MK'] = {'latitude': 41.8333, 'longitude': 22};\n    latlong['ML'] = {'latitude': 17, 'longitude': -4};\n    latlong['MM'] = {'latitude': 22, 'longitude': 98};\n    latlong['MN'] = {'latitude': 46, 'longitude': 105};\n    latlong['MO'] = {'latitude': 22.1667, 'longitude': 113.55};\n    latlong['MP'] = {'latitude': 15.2, 'longitude': 145.75};\n    latlong['MQ'] = {'latitude': 14.6667, 'longitude': -61};\n    latlong['MR'] = {'latitude': 20, 'longitude': -12};\n    latlong['MS'] = {'latitude': 16.75, 'longitude': -62.2};\n    latlong['MT'] = {'latitude': 35.8333, 'longitude': 14.5833};\n    latlong['MU'] = {'latitude': -20.2833, 'longitude': 57.55};\n    latlong['MV'] = {'latitude': 3.25, 'longitude': 73};\n    latlong['MW'] = {'latitude': -13.5, 'longitude': 34};\n    latlong['MX'] = {'latitude': 23, 'longitude': -102};\n    latlong['MY'] = {'latitude': 2.5, 'longitude': 112.5};\n    latlong['MZ'] = {'latitude': -18.25, 'longitude': 35};\n    latlong['NA'] = {'latitude': -22, 'longitude': 17};\n    latlong['NC'] = {'latitude': -21.5, 'longitude': 165.5};\n    latlong['NE'] = {'latitude': 16, 'longitude': 8};\n    latlong['NF'] = {'latitude': -29.0333, 'longitude': 167.95};\n    latlong['NG'] = {'latitude': 10, 'longitude': 8};\n    latlong['NI'] = {'latitude': 13, 'longitude': -85};\n    latlong['NL'] = {'latitude': 52.5, 'longitude': 5.75};\n    latlong['NO'] = {'latitude': 62, 'longitude': 10};\n    latlong['NP'] = {'latitude': 28, 'longitude': 84};\n    latlong['NR'] = {'latitude': -0.5333, 'longitude': 166.9167};\n    latlong['NU'] = {'latitude': -19.0333, 'longitude': -169.8667};\n    latlong['NZ'] = {'latitude': -41, 'longitude': 174};\n    latlong['OM'] = {'latitude': 21, 'longitude': 57};\n    latlong['PA'] = {'latitude': 9, 'longitude': -80};\n    latlong['PE'] = {'latitude': -10, 'longitude': -76};\n    latlong['PF'] = {'latitude': -15, 'longitude': -140};\n    latlong['PG'] = {'latitude': -6, 'longitude': 147};\n    latlong['PH'] = {'latitude': 13, 'longitude': 122};\n    latlong['PK'] = {'latitude': 30, 'longitude': 70};\n    latlong['PL'] = {'latitude': 52, 'longitude': 20};\n    latlong['PM'] = {'latitude': 46.8333, 'longitude': -56.3333};\n    latlong['PR'] = {'latitude': 18.25, 'longitude': -66.5};\n    latlong['PS'] = {'latitude': 32, 'longitude': 35.25};\n    latlong['PT'] = {'latitude': 39.5, 'longitude': -8};\n    latlong['PW'] = {'latitude': 7.5, 'longitude': 134.5};\n    latlong['PY'] = {'latitude': -23, 'longitude': -58};\n    latlong['QA'] = {'latitude': 25.5, 'longitude': 51.25};\n    latlong['RE'] = {'latitude': -21.1, 'longitude': 55.6};\n    latlong['RO'] = {'latitude': 46, 'longitude': 25};\n    latlong['RS'] = {'latitude': 44, 'longitude': 21};\n    latlong['RU'] = {'latitude': 60, 'longitude': 100};\n    latlong['RW'] = {'latitude': -2, 'longitude': 30};\n    latlong['SA'] = {'latitude': 25, 'longitude': 45};\n    latlong['SB'] = {'latitude': -8, 'longitude': 159};\n    latlong['SC'] = {'latitude': -4.5833, 'longitude': 55.6667};\n    latlong['SD'] = {'latitude': 15, 'longitude': 30};\n    latlong['SE'] = {'latitude': 62, 'longitude': 15};\n    latlong['SG'] = {'latitude': 1.3667, 'longitude': 103.8};\n    latlong['SH'] = {'latitude': -15.9333, 'longitude': -5.7};\n    latlong['SI'] = {'latitude': 46, 'longitude': 15};\n    latlong['SJ'] = {'latitude': 78, 'longitude': 20};\n    latlong['SK'] = {'latitude': 48.6667, 'longitude': 19.5};\n    latlong['SL'] = {'latitude': 8.5, 'longitude': -11.5};\n    latlong['SM'] = {'latitude': 43.7667, 'longitude': 12.4167};\n    latlong['SN'] = {'latitude': 14, 'longitude': -14};\n    latlong['SO'] = {'latitude': 10, 'longitude': 49};\n    latlong['SR'] = {'latitude': 4, 'longitude': -56};\n    latlong['ST'] = {'latitude': 1, 'longitude': 7};\n    latlong['SV'] = {'latitude': 13.8333, 'longitude': -88.9167};\n    latlong['SY'] = {'latitude': 35, 'longitude': 38};\n    latlong['SZ'] = {'latitude': -26.5, 'longitude': 31.5};\n    latlong['TC'] = {'latitude': 21.75, 'longitude': -71.5833};\n    latlong['TD'] = {'latitude': 15, 'longitude': 19};\n    latlong['TF'] = {'latitude': -43, 'longitude': 67};\n    latlong['TG'] = {'latitude': 8, 'longitude': 1.1667};\n    latlong['TH'] = {'latitude': 15, 'longitude': 100};\n    latlong['TJ'] = {'latitude': 39, 'longitude': 71};\n    latlong['TK'] = {'latitude': -9, 'longitude': -172};\n    latlong['TM'] = {'latitude': 40, 'longitude': 60};\n    latlong['TN'] = {'latitude': 34, 'longitude': 9};\n    latlong['TO'] = {'latitude': -20, 'longitude': -175};\n    latlong['TR'] = {'latitude': 39, 'longitude': 35};\n    latlong['TT'] = {'latitude': 11, 'longitude': -61};\n    latlong['TV'] = {'latitude': -8, 'longitude': 178};\n    latlong['TW'] = {'latitude': 23.5, 'longitude': 121};\n    latlong['TZ'] = {'latitude': -6, 'longitude': 35};\n    latlong['UA'] = {'latitude': 49, 'longitude': 32};\n    latlong['UG'] = {'latitude': 1, 'longitude': 32};\n    latlong['UM'] = {'latitude': 19.2833, 'longitude': 166.6};\n    latlong['US'] = {'latitude': 38, 'longitude': -97};\n    latlong['UY'] = {'latitude': -33, 'longitude': -56};\n    latlong['UZ'] = {'latitude': 41, 'longitude': 64};\n    latlong['VA'] = {'latitude': 41.9, 'longitude': 12.45};\n    latlong['VC'] = {'latitude': 13.25, 'longitude': -61.2};\n    latlong['VE'] = {'latitude': 8, 'longitude': -66};\n    latlong['VG'] = {'latitude': 18.5, 'longitude': -64.5};\n    latlong['VI'] = {'latitude': 18.3333, 'longitude': -64.8333};\n    latlong['VN'] = {'latitude': 16, 'longitude': 106};\n    latlong['VU'] = {'latitude': -16, 'longitude': 167};\n    latlong['WF'] = {'latitude': -13.3, 'longitude': -176.2};\n    latlong['WS'] = {'latitude': -13.5833, 'longitude': -172.3333};\n    latlong['YE'] = {'latitude': 15, 'longitude': 48};\n    latlong['YT'] = {'latitude': -12.8333, 'longitude': 45.1667};\n    latlong['ZA'] = {'latitude': -29, 'longitude': 24};\n    latlong['ZM'] = {'latitude': -15, 'longitude': 30};\n    latlong['ZW'] = {'latitude': -20, 'longitude': 30};\n   \n    let oldData = mapdata;\n    let mapData= []\n    for (var key in oldData) {\n        if (oldData[key] === \"\" || oldData[key] === null || oldData[key] === undefined){\n          delete oldData[key];\n          \n        }else{\n          mapData.push(oldData[key]);\n            \n        }\n    }\n   \n    //console.log(JSON.stringify(mapData));\n    let minBulletSize = 3\n      , maxBulletSize = 70\n      , min = Infinity\n      , max = -Infinity;\n\n    // get min and max values\n    for (let i = 0; i < mapData.length; i++) {\n      \n      var value = mapData[i].value;\n      if (value < min) {\n        min = value;\n      }\n      if (value > max) {\n        max = value;\n      }\n    \n\n    }\n\n\n    let dataProvider = {\n      mapVar: AmCharts.maps.worldLow,\n      images: []\n    };\n\n    var maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI;\n    var minSquare = minBulletSize * minBulletSize * 2 * Math.PI;\n\n    // create circle for each country\n    for (let i = 0; i < mapData.length; i++) {\n      let dataItem = mapData[i];\n      let value = dataItem.value;\n      // calculate size of a bubble\n      let square = (value - min) / (max - min) * (maxSquare - minSquare) + minSquare;\n      if (square < minSquare) {\n        square = minSquare;\n      }\n      let size = Math.sqrt(square / (Math.PI * 2));\n      let id = dataItem.code;\n\n\n\n      dataProvider.images.push({\n        type: 'circle',\n        width: size,\n        height: size,\n        color: dataItem.color,\n        longitude: latlong[id].longitude,\n        latitude: latlong[id].latitude,\n        title: dataItem.name,\n        value: value\n      });\n    }\n\n    return {\n      type: 'map',\n      theme: 'blur',\n      titles: [\n        {text: 'Reach around the world', size: 14},\n        {text: 'source: Twitter', size: 11}\n      ],\n      dataProvider: dataProvider,\n\n      areasSettings: {\n        unlistedAreasColor: '#000000',\n        unlistedAreasAlpha: 0.1\n      },\n\n      imagesSettings: {\n        balloonText: '<span style=\"font-size:14px;\"><b>[[title]]</b>: [[value]]</span>'\n      },\n\n      export: {\n        enabled: true\n      },\n      pathToImages: layoutPaths.images.amMap\n    };\n}\n\n\n}\n\n\n\n \n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/components/brand_league/brand_league.components.ts","import {Component, ViewEncapsulation, Inject, Input, Output, EventEmitter, ViewChild,ElementRef  } from '@angular/core';\nimport {View} from \"angular2/angular2\";\nimport {HttpServices} from \"../../../../shared/services/httpservice\";\nimport {BaThemeConfigProvider, layoutPaths} from '../../../../theme';\nimport { DaterangepickerConfig } from 'ng2-daterangepicker';\nimport * as moment from 'moment';\nimport {BaThemePreloader} from '../../../../theme/services';\nimport {GoogleChart} from './directives/angular2-google-chart.directive';\nimport '../../../../theme/components/baAmChart/baAmChart.loader.ts';\nimport {BaAmChartThemeService} from '../../../../theme/components/baAmChart/baAmChartTheme.service';\n\n\n@Component({\n  selector: 'chartist-js',\n  encapsulation: ViewEncapsulation.None,\n  styles: [require('chartist/dist/chartist.css'), require('./chartistJs.scss')],\n  template: require('./chartistJs.html'),\n  providers: [BaAmChartThemeService],\n  })\n\n\n\n\nexport class ChartistJs {\n \n private selected_match:any;\n private dropDownMatch:any[];\n private dropDownLeague:any[];\n private dropDownInterval:any[];\n private selected_league:any;\n private selected_interval:any;\n private gaugeChartOptions:any;\n private totalFrameCount:string;\n private totalExposureTime:string;\n \n  public topAssetData:any[]; \n  public topAssetLabels:string[];\n  public topAssetChartType:string;\n  public topAssetLegend:boolean = true;\n  private topAssetColor:any[];\n\npublic topAssetWiseData:any[]; \n  public topAssetWiseLabels:string[];\n  public topAssetWiseChartType:string;\n  public topAssetWiseLegend:boolean = true;\n  private topAssetWiseColor:any[];\n\n\n  public topLogoLegend:boolean = false;\n  public topLogoType:string;\n  public topLogoLabels:string[]; \n  public topLogoData:any[];\n  public allData:any[];\n  public allLogoLabels:string[]; \n  data2:any;\n  public words:any[];\n  public asset_data:string=\"\";\n  public logo_data:string=\"\";\n  public type:string;\n  public logo_ele:string=\"\";\n \n  public topAllAssetData:any[]; \n  public topAllAssetLabels:string[];\n\n  public lineChartLegend:boolean = true;\n  public lineChartType:string = 'line';\n  public lineChartColors:Array<any> = [];\n  public lineChartData:any = []\n  public lineChartLabels:any = [];\n  private brands_exposure:string;\n  \n  public allLineChartData:any = []\n  public allLineChartLabels:any = [];\n  \n  \n\n\n  @ViewChild('baAmChart') private _selector:ElementRef;\n\n  chartData:Object;\n  scatterChartOptions:any;\n \n\n  constructor(private _baConfig:BaThemeConfigProvider, private _httpService: HttpServices,\n  private daterangepickerOptions: DaterangepickerConfig,\n  private _baAmChartThemeService:BaAmChartThemeService) {\n    this._loadChartsLib();\n    this.daterangepickerOptions.settings = {\n           locale: { format: 'YYYY-MM-DD' },\n           minDate: '2016-11-11',\n           maxDate: '2016-11-30',\n           alwaysShowCalendars: false,\n           ranges: {\n          'Today': [moment(), moment()],\n          'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n           }\n       };\n }\n\n  private _loadChartsLib():void {\n    BaThemePreloader.registerLoader(new Promise((resolve, reject) => {\n      let amChartsReadyMsg = 'AmCharts ready';\n\n      if (AmCharts.isReady) {\n        resolve(amChartsReadyMsg);\n      } else {\n        AmCharts.ready(function () {\n          resolve(amChartsReadyMsg);\n        });\n      }\n    }));\n  }\n\n\n//   private timeFormatChange(){\n//      var sec_num1 = parseInt(asecs, 10); // don't forget the second param\n//        var hours1   = Math.floor(sec_num1 / 3600);\n//        var minutes1 = Math.floor((sec_num1 - (hours1 * 3600)) / 60);\n//        var seconds1 = sec_num1 - (hours1 * 3600) - (minutes1 * 60);\n//        if (hours1   < 10) { var hours2   = \"0\"+hours1;}\n//        if (minutes1 < 10) {var minutes2 = \"0\"+minutes1;}\n//        if (seconds1 < 10) {var seconds2 = \"0\"+seconds1;}\n//  }\n\n\n\n  ngOnInit() {\n               AmCharts.themes.blur = this._baAmChartThemeService.getTheme();\n               let self = this;\n               \n               self.words = [ { text: 'Coca-Cola', weight: 1466 }, { text: 'Coca', weight: 1080 }, { text: 'Cola', weight: 1024 }, { text: 'Christmas', weight: 647 }, { text: 'advert', weight: 582 }, { text: 'Coke', weight: 417 }, { text: 'cola', weight: 372 }, { text: 'Zero', weight: 323 }, { text: 'way', weight: 322 }, { text: 'coca', weight: 322 }, { text: 'Diet', weight: 319 }, { text: '#MasterTheChoiceIMAXSweepstakes', weight: 313 }, { text: 'Rebellion', weight: 313 }, { text: 'Empire', weight: 312 }, { text: 'Rogue', weight: 303 }, { text: 'Either', weight: 302 }, { text: '#HolidaysAreComing',weight: 232 } ];\n               jQuery(\"#col1\").jQCloud(self.words,{\n                      autoResize: true\n               });\n               self.lineChartData =[ {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A',fill: false} ];\n               self.lineChartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n              // self.gaugeChartOptions ={chartType: 'Gauge',\n              //     dataTable: [\n              //       ['Label', 'Length'],\n              //       ['Value', 2.10]\n              //     ],\n              //     options: {\n              //       animation: {easing: 'out'},\n              //       width: 250, height: 250,\n              //       greenFrom: 1, greenTo: 4,\n              //       minorTicks: 5,\n              //       min: 0, max: 5,\n              //       majorTicks: ['0', '1', '2', '3', '4', '5','6', '7', '8', '9', '10', '11', '12'],\n              //       greenColor: '#d0e9c6'\n              // }\n              // };\n\n\n              self.topAssetData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Asset Exposure'}];\n              self.topAssetChartType = 'pie';\n              self.topAssetLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n              self.topAssetColor = [{\n              backgroundColor:['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)','rgba(0,10,220,1)','rgba(220,0,10,1)','rgba(220,0,0,1)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n                  hoverBackgroundColor:\"#421006\",\n                 \n                  hoverBorderColor:\"#421006\"\n                }];\n\n\n              self.topAssetWiseData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Asset Exposure'}];\n              self.topAssetWiseChartType = 'doughnut';\n              self.topAssetWiseLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n              self.topAssetWiseColor = [{\n              backgroundColor:['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 2)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)','rgba(0,10,220,1)','rgba(220,0,10,1)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n                  hoverBackgroundColor:\"#421006\",\n                  \n                  hoverBorderColor:\"#421006\"\n                }];  \n\n\n              self.topLogoType = 'bar';\n              self.topLogoData = [{ data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Logo`s'}];\n              self.topLogoLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n\n              self.brands_exposure = \"00:00:00\";\n\n              var match_list = [{name: 'SYS Vs WBD',match: 'SYS vs WBD'}]\n              self.dropDownMatch = match_list\n              self.selected_match = self.dropDownMatch[0].match;\n\n              var league_list = [{name: 'AFL',league: 'AFL' },{name: 'PKL',league: 'PKL' }]\n              self.dropDownLeague = league_list\n              self.selected_league = self.dropDownLeague[0].league;\n\n              var interval_list = [{name:'2 secs', value:'2s'},{name:'30 secs', value:'30s'},{name:'2 mins', value:'2m'},{name:'5 mins', value:'5m'},{name:'10 mins', value:'10m'}]\n              self.dropDownInterval = interval_list\n              self.selected_interval = self.dropDownInterval[3].value;\n              self.type = \"afl_output_2016\";\n              self.requestBrandExposure({match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n}\n\n\nrequestBrandExposure(post_data,self){\nself._httpService.PostHttp(JSON.stringify(post_data),\"brand_exposure\")\n            .subscribe(\n            (data2) => {\n             self.getExposure(data2,self);\n             self.processMaplytiksData(data2,self);\n            },\n            (error) => {\n               console.log(error);\n            }\n            );\n}\n\n\n\nOnChangeChannel(){\n  let self = this;\n  if(self.selected_league ==='AFL' ){\n     var match_list = [{name: 'SYS Vs WBD',match: 'SYS vs WBD'}]\n     self.dropDownMatch = match_list\n     self.type = \"afl_output_2016\";\n     self.selected_match = self.dropDownMatch[0].match;\n  }\n   if(self.selected_league ==='AFL_1' ){\n     var match_list = [{name: 'SYS vs WBD_1',match: 'SYS vs WBD_1'}]\n     self.dropDownMatch = match_list\n     self.type = \"afl_output_2016_1\";\n     self.selected_match = self.dropDownMatch[0].match;\n  }\n  if(self.selected_league ==='PKL' ){\n     var match_list = [{name: 'PP vs JPP',match: 'PP vs JPP'}]\n     self.dropDownMatch = match_list\n     self.type = \"pkl_output_2016\";\n     self.selected_match = self.dropDownMatch[0].match;\n  }\n  self.requestBrandExposure({match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n}\n\nOnChangeInterval(){\n  let self = this \n  var selected = self.selected_interval;\n   self.makeRequest(self)\n  //console.log('data',self.selected_interval);\n  //self.requestBrandExposure({match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n}\n\ntopTenLogo(){\n  let self = this;\n  self.topLogoData = [{ data:  self.getTopTenChartValue(self.allData), label: 'Top Logos'}];\n  self.topLogoLabels = self.getTopTenChartLabel(self.allLogoLabels)\n}\n\ntopLastTenLogo(){\n  let self = this;\n  self.topLogoData = [{ data:  self.getLastTenChartValue(self.allData), label: 'Top Logos'}];\n  self.topLogoLabels = self.getLastTenChartLabel(self.allLogoLabels)\n  \n}\n\ntopLogos(){\n   let self = this;\n   self.topLogoData = [{ data:  self.allData, label: 'Top Logos'}];\n   self.topLogoLabels = self.allLogoLabels;\n}\n\nrequestAssetExposure(post_data,self){\nself._httpService.PostHttp(JSON.stringify(post_data),\"asset_exposure\")\n            .subscribe(\n              (data2) => {\n                 self.processMaplytiksData(data2,self);\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n}\n\nrequestElementExposure(post_data,self){\nself._httpService.PostHttp(JSON.stringify(post_data),\"element_exposure\")\n            .subscribe(\n              (data2) => {\n                 self.processMaplytiksData(data2,self);\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n}\n\nrequestLogoExposure(post_data,self){\nself._httpService.PostHttp(JSON.stringify(post_data),\"logo_exposure\")\n            .subscribe(\n              (data2) => {\n                 self.processMaplytiksData(data2,self);\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n}\n\nrequestAssetAndLogoExposure(post_data,self){\nself._httpService.PostHttp(JSON.stringify(post_data),\"asset_logo_exposure\")\n            .subscribe(\n              (data2) => {\n                 self.processMaplytiksData(data2,self);\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n}\n\nrequestLogoAndElementExposure(post_data,self){\n  self._httpService.PostHttp(JSON.stringify(post_data),\"logo_element_exposure\")\n            .subscribe(\n              (data2) => {\n                 self.processMaplytiksData(data2,self);\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n\n}\n\n\nrequestAssetAndElementExposure(post_data,self){\n  self._httpService.PostHttp(JSON.stringify(post_data),\"asset_element_exposure\")\n            .subscribe(\n              (data2) => {\n                 self.processMaplytiksData(data2,self);\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n\n}\n\n\nrequestAssetAndLogoAndElement(post_data,self){\n  self._httpService.PostHttp(JSON.stringify(post_data),\"asset_logo__elements_exposure\")\n            .subscribe(\n              (data2) => {\n                 self.processMaplytiksData(data2,self);\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n\n}\n\nfirstHalfInterval(){\n\n    let self= this;\n    var chartData = self.getFirstHalfTimeValue(self.allLineChartData)\n    var chartLabels = self.getFirstHalfTimeLabel(self.allLineChartLabels)\n    self.lineChartData =[ {data: chartData, label: 'Time Interval',fill: false, lineTension: 0.1, backgroundColor: \"rgba(75,192,192,0.4)\", borderColor: \"rgba(75,192,192,1)\", borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter', pointBorderColor: \"rgba(75,192,192,1)\", pointBackgroundColor: \"#fff\", pointBorderWidth: 1, pointHoverRadius: 5, pointHoverBackgroundColor: \"rgba(75,192,192,1)\", pointHoverBorderColor: \"rgba(220,220,220,1)\", pointHoverBorderWidth: 2, pointRadius: 1, pointHitRadius: 10} ];\n    self.lineChartLabels = chartLabels\n}\n\nfullInterval(){\n          let self= this;\n          self.lineChartData =[ {data: self.allLineChartData, label: 'Time Interval',fill: false, lineTension: 0.1, backgroundColor: \"rgba(75,192,192,0.4)\", borderColor: \"rgba(75,192,192,1)\", borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter', pointBorderColor: \"rgba(75,192,192,1)\", pointBackgroundColor: \"#fff\", pointBorderWidth: 1, pointHoverRadius: 5, pointHoverBackgroundColor: \"rgba(75,192,192,1)\", pointHoverBorderColor: \"rgba(220,220,220,1)\", pointHoverBorderWidth: 2, pointRadius: 1, pointHitRadius: 10} ];\n          self.lineChartLabels = self.allLineChartLabels\n}\n\nsecondHalfInterval(){\n let self= this;\n    var chartData = self.getSecondHalfTimeValue(self.allLineChartData)\n    var chartLabels = self.getSecondHalfTimeLabel(self.allLineChartLabels)\n    self.lineChartData =[ {data: chartData, label: 'Time Interval',fill: false, lineTension: 0.1, backgroundColor: \"rgba(75,192,192,0.4)\", borderColor: \"rgba(75,192,192,1)\", borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter', pointBorderColor: \"rgba(75,192,192,1)\", pointBackgroundColor: \"#fff\", pointBorderWidth: 1, pointHoverRadius: 5, pointHoverBackgroundColor: \"rgba(75,192,192,1)\", pointHoverBorderColor: \"rgba(220,220,220,1)\", pointHoverBorderWidth: 2, pointRadius: 1, pointHitRadius: 10} ];\n    self.lineChartLabels = chartLabels\n}\n\ngetExposure(data,self){\n            self.brands_exposure = data.brands_exposure;\n            self.totalExposureTime = data.tot_brand_exposure;\n            self.totalFrameCount = data.frameCount;\n\n            self.topAssetWiseData = [{data: self.getDiffAssetChartValue(data.asset,data.frameCount) , label: 'Top Types'}];\n            self.topAssetWiseLabels = self.getChartLabel(data.asset);\n}\n\nprocessMaplytiksData(data,self){\n           \n            \n            self.brand_exposure = data.brand_exposure;\n            self.topAssetData = [{data: self.getChartValue(data.asset) , label: 'Top Types'}];\n            self.topAssetLabels = self.getChartLabel(data.asset)\n            var data_array = [];\n            var logoData = data.logoElements;\n            logoData = JSON.parse(JSON.stringify(logoData).split('\"key\":').join('\"text\":'));\n            logoData = JSON.parse(JSON.stringify(logoData).split('\"doc_count\":').join('\"weight\":'));\n            logoData.forEach(function (element) {\n            \n                        var objWord = {\n                            text: element.text,\n                            weight: element.weight,\n                            handlers: {\n                                click: function () {\n                                    //console.log(\"it worked for\" + element.text); \n                                    self.logo_ele = element.text;\n                                    self.makeRequest(self);\n                                }\n                            }\n                        };\n                       \n                      data_array.push(objWord);\n                    });\n            jQuery(\"#col1\").jQCloud('update',data_array,{  \n                  autoResize: true  \n            });\n\n           self.allData=  self.getChartValue(data.logoNames);\n           self.allLogoLabels =  self.getChartLabel(data.logoNames);\n          \n          self.topLogoData = [{ data:  self.getTopTenChartValue(self.allData), label: 'Top Logos'}];\n          self.topLogoLabels = self.getTopTenChartLabel(self.allLogoLabels)\n          \n          self.allLineChartData = self.getTimeValue(data.time)\n          self.allLineChartLabels = self.getTimeLabel(data.time)\n          self.lineChartData =[ {data: self.allLineChartData, label: 'Time Interval',fill: false, lineTension: 0.1, backgroundColor: \"rgba(75,192,192,0.4)\", borderColor: \"rgba(75,192,192,1)\", borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter', pointBorderColor: \"rgba(75,192,192,1)\", pointBackgroundColor: \"#fff\", pointBorderWidth: 1, pointHoverRadius: 5, pointHoverBackgroundColor: \"rgba(75,192,192,1)\", pointHoverBorderColor: \"rgba(220,220,220,1)\", pointHoverBorderWidth: 2, pointRadius: 1, pointHitRadius: 10} ];\n          self.lineChartLabels = self.allLineChartLabels\n          \n}\n\n\ngetChartLabel(data){\n var data = data;   \n var label = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            label.push(obj.key);\n        }\n        return label;\n}\n\n\ngetFirstHalfTimeLabel(data){\n var data = data;\n var length = Math.round(data.length/2);\n var label = [];\n        for (var i = 0; i < length; i++) {\n             label.push(data[i]);\n          }\n        return label;\n}\n\n\ngetFirstHalfTimeValue(data){\n\n var data = data;   \n var length = Math.round(data.length/2)\n var value = [];\n        for (var i = 0; i < length; i++) {\n            value.push(data[i]);\n          }\n        return value;\n}\n\ngetSecondHalfTimeLabel(data){\n var data = data;\n var length = Math.floor(data.length/2);\n var label = [];\n        for (var i = length; i < data.length; i++) {\n             label.push(data[i]);\n          }\n        return label;\n}\n\n\ngetSecondHalfTimeValue(data){\n\n var data = data;   \n var length = Math.floor(data.length/2)\n var value = [];\n for (var i = length; i < data.length; i++) {\n            value.push(data[i]);\n }\n        return value;\n}\n\n\ngetTimeLabel(data){\n var data = data;   \n var label = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            var lab =  obj.key_as_string;\n            var res = lab.substring(11, 19);\n           label.push(res);\n          }\n        return label;\n}\n\n\ngetTimeValue(data){\n var data = data;   \n var value = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            value.push(obj.doc_count);\n          }\n        return value;\n}\ngetTopTenChartLabel(data){\n var data = data;   \n  var count =0;\n  if(data.length<=10){\n    \n    count =data.length;\n  }else{\n    count = 10;\n  }\n var label = [];\n        for (var i = 0; i < count; i++) {\n            label.push(data[i]);\n        }\n        return label;\n\n}\ngetTopTenChartValue(data){\n  var data = data;   \n  var count =0;\n  if(data.length<=10){\n    \n    count =data.length;\n  }else{\n    count = 10;\n  }\n \n var label = [];\n        for (var i = 0; i < count; i++) {\n            label.push(data[i]);\n        }\n        return label;\n}\n\ngetLastTenChartLabel(data){\n var data = data;\n var k = data.length;   \n var label = [];\n        for (var i = 0; i < 10; i++) {\n            k = k-1;\n            label.push(data[k]);\n        }\n        return label;\n\n}\ngetLastTenChartValue(data){\n  var data = data;   \n  var k = data.length;   \n var label = [];\n        for (var i = 0; i < 10; i++) {\n            k = k-1;\n            label.push(data[k]);\n        }\n        return label;\n}\n\ngetChartValue(data){\n var data = data;   \n var value = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            value.push(obj.doc_count);\n        }\n        return value;\n}\n\ngetDiffAssetChartValue(data,totalframe){\n   var data = data;   \n var value = [];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            var diff_val =  (obj.doc_count/totalframe)*100;\n            //console.log(diff_val.toFixed(2));\n            value.push(diff_val.toFixed(2));\n        }\n        return value;\n}\n\npublic makeRequest(self){\n   \n if(self.asset_data!==\"\" && self.logo_data!==\"\" && self.logo_ele!==\"\" ){\n    self.requestAssetAndLogoAndElement({\"asset\":self.asset_data,\"logo\":self.logo_data,logo_element:self.logo_ele,match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n  \n  }else if(self.asset_data!==\"\" && self.logo_data!==\"\"){\n    self.requestAssetAndLogoExposure({\"asset\":self.asset_data,\"logo\":self.logo_data,match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n    self.logo_ele ===\"\";\n  }else if(self.logo_data!==\"\" && self.logo_ele!==\"\") {\n   self.requestLogoAndElementExposure({\"logo\":self.logo_data,\"logo_element\":self.logo_data,match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n   self.asset_data===\"\";\n  }else if(self.asset_data!==\"\" && self.logo_ele!==\"\"){\n    self.requestAssetAndElementExposure({\"asset\":self.asset_data,\"logo_element\":self.logo_ele,match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n    self.logo_data===\"\";\n  }else if(self.logo_data!==\"\"){\n    self.requestLogoExposure({\"logo\":self.logo_data,match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n    self.asset_data===\"\"; self.logo_ele ===\"\";\n  }else if(self.logo_ele!==\"\"){\n    self.requestElementExposure({\"logo_element\":self.logo_ele,match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n    self.asset_data===\"\"; self.logo_data===\"\";\n  }else if(self.asset_data!==\"\"){\n    self.requestAssetExposure({\"asset\":self.asset_data,match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n     self.logo_data===\"\";self.logo_ele ===\"\";\n  }else{\n    self.requestBrandExposure({match:self.selected_match,type:self.type,interval:self.selected_interval},self);\n    self.asset_data===\"\"; self.logo_data===\"\";self.logo_ele ===\"\";\n  }\n\n}\n\n\n\n  // events\n  public assetExposureClicked(e:any):void {\n    let self = this;\n    \n    //console.log(self.topAssetLabels[e.active[0]._index]);\n    self.asset_data = self.topAssetLabels[e.active[0]._index];\n    self.makeRequest(self);\n  }\n\n  public logoExposureClicked(e:any):void {\n    let self = this;\n    self.logo_data = e.active[0]._model.label;\n    self.makeRequest(self);\n  }\n   \n  public getBackHome(){\n      let self = this;\n      self.asset_data =\"\";\n      self.logo_ele=\"\";\n      self.logo_data=\"\";\n      self.selected_league = self.dropDownLeague[0].league;\n      self.requestBrandExposure({match:\"SYS vs WBD\",type:\"afl_output_2016\",interval:\"10m\"},self);\n      //self.topTenLogo();\n    \n  }\n\n  public chartHovered(e:any):void {\n    //console.log(e);\n  }\n\n  public chartClicked(e:any):void{\n    //console.log(e);\n  }\n\n public topAssetOptions:any = {\n    scaleShowVerticalLines: false,\n    responsive: true,\n          tooltips: {\n            callbacks: {\n                label: function(tooltipItem, data) {\n                    var allData = data.datasets[tooltipItem.datasetIndex].data;\n                    var tooltipLabel = data.labels[tooltipItem.index];\n                    var tooltipData = allData[tooltipItem.index];\n                    var total = 0;\n                    for (var i in allData) {\n                        total += allData[i];\n                    }\n                    var tooltipPercentage = Math.round((tooltipData / total) * 100);\n                    return tooltipLabel + ': ' + tooltipData + ' (' + tooltipPercentage + '%)';\n                }\n            }\n        }\n };\n \npublic lineChartOptions:any =\n{\n   scaleShowVerticalLines: false,\n   responsive: true,\n   layout: {\n       padding: 75\n   },\n   title: {\n     display: true,\n     padding: 15,\n     text: \"Frames Counts Vs Time \",\n     fontSize: 25,\n     fontColor: \"#36a2eb\"\n   },\n scales: {\n   yAxes: [{\n     scaleLabel: {\n       display: true,\n       labelString: 'Frames Count',\n       fontSize: 18,\n        //fontColor: 'red'\n     },\n     ticks: {\n               fontSize: 13,\n               showLabelBackdrop    : true,\n               fontFamily: \"Verdana\",\n               //fontColor: 'red'\n               backdropPaddingY: 25,\n               backdropPaddingX: 59\n           }              \n   }],\n   xAxes: [{\n     scaleLabel: {\n       display: true,\n       labelString: 'Time',\n       fontSize: 18,\n       //fontColor: 'green'\n     },\n      ticks: {\n               fontSize: 13,\n             fontFamily: \" Helvetica Neue\"\n               //fontColor: 'red'        \n           }\n   }]\n },\nlegend: {\n  display: false,\n  position: 'bottom'\n}\n};\n\n public topAssetWiseOptions:any = {\n    scaleShowVerticalLines: false,\n    responsive: true,\n          tooltips: {\n            callbacks: {\n                label: function(tooltipItem, data) {\n                    var allData = data.datasets[tooltipItem.datasetIndex].data;\n                    var tooltipLabel = data.labels[tooltipItem.index];\n                    var tooltipData = allData[tooltipItem.index];\n                    var total = 0;\n                    for (var i in allData) {\n                        total += allData[i];\n                    }\n                    //var tooltipPercentage = Math.round((tooltipData / total) * 100);\n                    return tooltipLabel + ': ' + ' (' + tooltipData + '%)';\n                }\n            }\n        }\n };\n\n\n\npublic topLogoOptions:any = {\n   scaleShowVerticalLines: false,\n   responsive: true,\n   layout: {\n       padding: 55\n   },\n   title: {\n     display: true,\n     padding: 15,\n     text: \"Frames Counts Vs Brands Detected\",\n     fontSize: 25,\n     fontColor: \"#36a2eb\"\n   },\n scales: {\n   yAxes: [{\n     scaleLabel: {\n       display: true,\n       labelString: 'Frames Count',\n       fontSize: 18,\n        //fontColor: 'red'\n     },\n     ticks: {\n               fontSize: 13,\n               showLabelBackdrop    : true,\n               fontFamily: \"Verdana\",\n               //fontColor: 'red'\n               backdropPaddingY: 25,\n               backdropPaddingX: 59\n           }              \n   }],\n   xAxes: [{\n     scaleLabel: {\n       display: true,\n       labelString: 'Logos',\n       fontSize: 18,\n       //fontColor: 'green'\n     },\n      ticks: {\n               fontSize: 13,\n             fontFamily: \" Helvetica Neue\"\n               //fontColor: 'red'        \n           }\n   }]\n },\nlegend: {\n  position: 'bottom'\n}\n};\n  \n\n  public articleChartOptions:any = {\n    scaleShowVerticalLines: false,\n    scales: {\n           xAxes: [{\n               display: false\n           }]\n       },\n    responsive: true\n  };\n\n  public randomize():void {\n    }\nngAfterViewInit () {\n           !function(d,s,id){\n               var js: any,\n                   fjs=d.getElementsByTagName(s)[0],\n                   p='https';\n               if(!d.getElementById(id)){\n                   js=d.createElement(s);\n                   js.id=id;\n                   js.src=p+\"://platform.twitter.com/widgets.js\";\n                   fjs.parentNode.insertBefore(js,fjs);\n               }\n           }\n           (document,\"script\",\"twitter-wjs\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/components/chartistJs/chartistJs.component.ts","import {Component, ViewEncapsulation, Inject, Input, Output, EventEmitter, ViewChild,ElementRef  } from '@angular/core';\nimport {View} from \"angular2/angular2\";\nimport {HttpServices} from \"../../../../shared/services/httpservice\";\nimport {ChartistJs2Service} from './chartistJs2.service';\nimport {BaThemeConfigProvider, layoutPaths} from '../../../../theme';\nimport { DaterangepickerConfig } from 'ng2-daterangepicker';\nimport * as moment from 'moment';\nimport {BaThemePreloader} from '../../../../theme/services';\n\nimport '../../../../theme/components/baAmChart/baAmChart.loader.ts';\nimport {BaAmChartThemeService} from '../../../../theme/components/baAmChart/baAmChartTheme.service';\n\n\n\n\n@Component({\n  selector: 'chartist-js2',\n  encapsulation: ViewEncapsulation.None,\n  styles: [require('chartist/dist/chartist.css'), require('./chartistJs2.scss')],\n  template: require('./chartistJs2.html'),\n  providers: [BaAmChartThemeService],\n  })\n\n\n\n\nexport class ChartistJs2 {\n \n\n   \n  \nprivate dateInputs: any = [\n       {\n           start: moment(),\n           end: moment().add(5, 'month'),\n       }\n   ];\n\n  data2:any;\n  public mapchartData:Object;\n  private dropDownDate:any[];\n  private selectedDate:any;\n  private dropDownBrand:any[];\n  private selectedBrand:any;\n  private dropDownChannel:any[];\n  private selectedChannel:any;\n  public cloudData:any;\n  public mapData:any[];\n\n  private polarOptions:any;\n\n  public sentimentLabels:string[];\n  public sentimentData:number[] \n  public sentimentChartType:string;\n  private sentimentOptions:any;\n\n  public userClassLabels:string[];\n  public userClassData:number[] \n  public userClassChartType:string;\n  public userClassLegend:boolean = false;\n  \n  public topUserLegend:boolean = true;\n  public topUserLabels:string[];\n  private topUserOptions: any;\n  public topUserData:number[];\n  public topUserChartType:string;\n\n  public topMentionLabels:string[];\n  public topMentionChartType:string;\n  public topMentionLegend:boolean = true;\n  public topMentionData:any[];\n  private topMentionColor:any[];\n  public topDomainLabels:string[];\n  public topDomainChartType:string;\n  public topDomainLegend:boolean = true;\n  public topDomainData:any[];\n  private topDomainColor:any[];\n\n\n  public topReachLabels:string[];\n  public topReachChartType:string;\n  public topReachLegend:boolean = true;\n  public topReachData:any[];\n  private topReachColor:any[];\n\n  public lineChartData:Array<any> = [];\n  public lineChartLabels:Array<any> = [];\n  public lineChartColors:Array<any> = [];\n  public lineChartOptions:any = {\n    animation: false,\n    responsive: true\n  };\n  \n  public lineChartLegend:boolean = true;\n  public lineChartType:string;\n  private url_1:string;\n  private url_2:string;\n  private url_3:string;\n  private url_4:string;\n  private words:any;\n  private start_date:any;\n  private end_date:any;\n\n  public languageLabels:string[];\n  public languageData:any;\n  private languageChartType:string;\n  private languageColor:Array<any> = [];\n \n   private totalarticlesengagement = 0;\n   private totalarticlecount =0;\n   private totalimpact =0;\n   private totalreach =0\n   private totalengagedusers =0;\n   private twitterFeeds:any;\n  //private dateToday:string;\n  //private dateMax:string;\n\n  public polarAreaChartLabels:string[];\n  public polarAreaChartData:number[];\n  public polarAreaLegend:boolean = true;\n  public polarAreaChartType:string;\n   @ViewChild('baAmChart') private _selector:ElementRef;\n\n\n  chartData:Object;\n  scatterChartOptions:any;\n \n\n  constructor(private _chartistJs2Service:ChartistJs2Service,private _baConfig:BaThemeConfigProvider, private _httpService: HttpServices,\n  private daterangepickerOptions: DaterangepickerConfig,\n  private _baAmChartThemeService:BaAmChartThemeService) {\n    this._loadChartsLib();\n    this.daterangepickerOptions.settings = {\n           locale: { format: 'YYYY-MM-DD' },\n           minDate: '2016-11-11',\n           maxDate: '2016-11-30',\n           alwaysShowCalendars: false,\n           ranges: {\n          'Today': [moment(), moment()],\n          'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n           }\n       };\n      \n      \n  }\n\n  private _loadChartsLib():void {\n    BaThemePreloader.registerLoader(new Promise((resolve, reject) => {\n      let amChartsReadyMsg = 'AmCharts ready';\n\n      if (AmCharts.isReady) {\n        resolve(amChartsReadyMsg);\n      } else {\n        AmCharts.ready(function () {\n          resolve(amChartsReadyMsg);\n        });\n      }\n    }));\n  }\n\n\n\n  ngOnInit() {\n   \n   \n    \n    AmCharts.themes.blur = this._baAmChartThemeService.getTheme();\n      \n    let self = this;\n    self.words = [ { text: 'Coca-Cola', weight: 1466 },\n  { text: 'Coca', weight: 1080 },\n  { text: 'Cola', weight: 1024 },\n  { text: 'Christmas', weight: 647 },\n  { text: 'advert', weight: 582 },\n  { text: 'Coke', weight: 417 },\n  { text: 'cola', weight: 372 },\n  { text: 'Zero', weight: 323 },\n  { text: 'way', weight: 322 },\n  { text: 'coca', weight: 322 },\n  { text: 'Diet', weight: 319 },\n  { text: '#MasterTheChoiceIMAXSweepstakes', weight: 313 },\n  { text: 'Rebellion', weight: 313 },\n  { text: 'Empire', weight: 312 },\n  { text: 'Rogue', weight: 303 },\n  { text: 'Either', weight: 302 },\n  { text: '#HolidaysAreComing', weight: 232 }\n   ];\n      jQuery(\"#col1\").jQCloud(self.words,{\n  autoResize: true\n});\n\n\n// jQuery('.autoplay').slick({\n//   slidesToShow: 3,\n//   slidesToScroll: 1,\n//   autoplay: true,\n//   autoplaySpeed: 2000,\n// });\n\n                    //console.log(jQuery().jQCloud);\n  \n                 \n\n  self.twitterFeeds = [\n    {\n      url: \"https://twitter.com/AMAs/status/800378679536676864\",\n    },\n    {\n      url:  \"https://twitter.com/AMAs/status/800458706823561216\",\n    },\n    {\n      url: \"https://twitter.com/AMAs/status/800466263034109952\",\n    },\n    {\n      url: \"https://twitter.com/AMAs/status/800443605223501824\",\n    }\n  ];\n\n    self.sentimentLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    self.sentimentData = [300, 500, 100];\n    self.userClassLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    self.userClassData = [300, 500, 100];\n    self.topUserLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    self.topUserData = [300, 500, 100, 40, 120];\n    self.polarAreaChartData = [300, 500, 100, 40, 120];\n    self.polarAreaChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    \n    //this.chartData = self.getDataWithParam();\n\n   self.polarAreaChartType = 'polarArea';\n\n    self.url_1 =  \"https://twitter.com/AMAs/status/800378679536676864\";\n     self.url_2 =  \"https://twitter.com/AMAs/status/800458706823561216\";\n     self.url_3 =  \"https://twitter.com/AMAs/status/800466263034109952\";\n     self.url_4 =  \"https://twitter.com/AMAs/status/800443605223501824\";\n\n\n    self.sentimentChartType  = 'doughnut';\n    self.sentimentOptions = {\n        tooltips: {\n            callbacks: {\n                label: function(tooltipItem, data) {\n                    var allData = data.datasets[tooltipItem.datasetIndex].data;\n                    var tooltipLabel = data.labels[tooltipItem.index];\n                    var tooltipData = allData[tooltipItem.index];\n                    var total = 0;\n                    for (var i in allData) {\n                        total += allData[i];\n                    }\n                    var tooltipPercentage = Math.round((tooltipData / total) * 100);\n                    return tooltipLabel + ': ' + tooltipData + ' (' + tooltipPercentage + '%)';\n                }\n            }\n        }\n    }\n\n    self.polarOptions =[{scaleShowLabels : false}];\n  \n    self.userClassChartType = 'radar';\n    self.topUserChartType = 'pie';\n    self.topUserOptions = {\n           tooltips: {\n            callbacks: {\n                label: function(tooltipItem, data) {\n                    var allData = data.datasets[tooltipItem.datasetIndex].data;\n                    var tooltipLabel = data.labels[tooltipItem.index];\n                    var tooltipData = allData[tooltipItem.index];\n                    var total = 0;\n                    for (var i in allData) {\n                        total += allData[i];\n                    }\n                    var tooltipPercentage = Math.round((tooltipData / total) * 100);\n                    return tooltipLabel + ': ' + tooltipData + ' (' + tooltipPercentage + '%)';\n                }\n            }\n        }\n    }\n    self.topMentionChartType = 'bar';\n    self.topDomainChartType = 'horizontalBar';\n    self.topReachChartType ='bar';\n    self.topMentionLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topMentionColor = [{\n      backgroundColor:['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n      hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n      borderColor:\"#1EF9A1\",\n      hoverBorderColor:\"#7FFD1F\"\n    }];\n    self.topMentionData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Mentions'}];\n\n    self.topDomainLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topDomainData = [{ label: 'Top Domain',data: [65, 59, 80, 81, 56, 55, 40] }];\n    self.topDomainColor = [{\n      backgroundColor:['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n      hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n      borderColor:\"#1EF9A1\",\n      hoverBorderColor:\"#7FFD1F\"\n    }];\n\n\n    self.topReachLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    self.topReachData = [{ label: 'Top Domain',data: [65, 59, 80, 81, 56, 55, 40] }];\n    self.topReachColor = [{\n      backgroundColor:['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],\n      hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n      borderColor:\"#1EF9A1\",\n      hoverBorderColor:\"#7FFD1F\"\n    }];\n\n\n    self.lineChartData =  [ {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'}];\n     self.lineChartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n      self.lineChartType ='line';\n     self.lineChartColors = [\n    { // grey\n     backgroundColor: 'rgba(54, 162, 235, 0.2)',\n     borderColor: '#00acac',\n     pointBackgroundColor: '#348fe2',\n     pointBorderColor: '#fff',\n     pointHoverBackgroundColor: '#fff',\n     pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n   }\n  ];\n\n\n\n\n\n\n       self.mapData  = [{\"code\":\"BE\",\"name\":\"Belgium\",\"value\":19,\"color\":\"#e7ba08\"},{\"code\":\"BG\",\"name\":\"Bulgaria\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"BA\",\"name\":\"Bosnia and Herzegovina\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"JP\",\"name\":\"Japan\",\"value\":7,\"color\":\"#0091d8\"},{\"code\":\"JM\",\"name\":\"Jamaica\",\"value\":4,\"color\":\"#00abff\"},{\"code\":\"BW\",\"name\":\"Botswana\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"BR\",\"name\":\"Brazil\",\"value\":20,\"color\":\"#8bd22f\"},{\"code\":\"RU\",\"name\":\"Russia\",\"value\":4,\"color\":\"#e7ba08\"},{\"code\":\"RS\",\"name\":\"Serbia\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"RO\",\"name\":\"Romania\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"GT\",\"name\":\"Guatemala\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"GR\",\"name\":\"Greece\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"GB\",\"name\":\"United Kingdom\",\"value\":345,\"color\":\"#e7ba08\"},{\"code\":\"GH\",\"name\":\"Ghana\",\"value\":2,\"color\":\"#f95372\"},{\"code\":\"HR\",\"name\":\"Croatia\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"HT\",\"name\":\"Haiti\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"HU\",\"name\":\"Hungary\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"HK\",\"name\":\"Hong Kong, China\",\"value\":4,\"color\":\"#0091d8\"},{\"code\":\"PT\",\"name\":\"Portugal\",\"value\":5,\"color\":\"#e7ba08\"},{\"code\":\"PA\",\"name\":\"Panama\",\"value\":2,\"color\":\"#00abff\"},{\"code\":\"UY\",\"name\":\"Uruguay\",\"value\":8,\"color\":\"#8bd22f\"},{\"code\":\"PE\",\"name\":\"Peru\",\"value\":2,\"color\":\"#8bd22f\"},{\"code\":\"PK\",\"name\":\"Pakistan\",\"value\":10,\"color\":\"#0091d8\"},{\"code\":\"PH\",\"name\":\"Philippines\",\"value\":8,\"color\":\"#0091d8\"},{\"code\":\"PL\",\"name\":\"Poland\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"EE\",\"name\":\"Estonia\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"EG\",\"name\":\"Egypt\",\"value\":5,\"color\":\"#f95372\"},{\"code\":\"ZA\",\"name\":\"South Africa\",\"value\":25,\"color\":\"#f95372\"},{\"code\":\"EC\",\"name\":\"Ecuador\",\"value\":20,\"color\":\"#8bd22f\"},{\"code\":\"ZW\",\"name\":\"Zimbabwe\",\"value\":2,\"color\":\"#f95372\"},{\"code\":\"ES\",\"name\":\"Spain\",\"value\":19,\"color\":\"#e7ba08\"},{\"code\":\"MA\",\"name\":\"Morocco\",\"value\":43,\"color\":\"#f95372\"},{\"code\":\"MM\",\"name\":\"Myanmar\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"MN\",\"name\":\"Mongolia\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"MK\",\"name\":\"Macedonia, FYR\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"MY\",\"name\":\"Malaysia\",\"value\":5,\"color\":\"#0091d8\"},{\"code\":\"MX\",\"name\":\"Mexico\",\"value\":8,\"color\":\"#00abff\"},{\"code\":\"FR\",\"name\":\"France\",\"value\":6,\"color\":\"#e7ba08\"},{\"code\":\"FI\",\"name\":\"Finland\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"NI\",\"name\":\"Nicaragua\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"NL\",\"name\":\"Netherlands\",\"value\":95,\"color\":\"#e7ba08\"},{\"code\":\"NO\",\"name\":\"Norway\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"NA\",\"name\":\"Namibia\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"NG\",\"name\":\"Nigeria\",\"value\":21,\"color\":\"#f95372\"},{\"code\":\"NZ\",\"name\":\"New Zealand\",\"value\":9,\"color\":\"#c49e06\"},{\"code\":\"CH\",\"name\":\"Switzerland\",\"value\":3,\"color\":\"#e7ba08\"},{\"code\":\"CO\",\"name\":\"Colombia\",\"value\":4,\"color\":\"#8bd22f\"},{\"code\":\"CN\",\"name\":\"China\",\"value\":66,\"color\":\"#0091d8\"},{\"code\":\"CL\",\"name\":\"Chile\",\"value\":2,\"color\":\"#8bd22f\"},{\"code\":\"CA\",\"name\":\"Canada\",\"value\":55,\"color\":\"#00abff\"},{\"code\":\"CR\",\"name\":\"Costa Rica\",\"value\":1,\"color\":\"#00abff\"},{\"code\":\"KE\",\"name\":\"Kenya\",\"value\":16,\"color\":\"#f95372\"},{\"code\":\"KR\",\"name\":\"Korea, Rep.\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"SI\",\"name\":\"Slovenia\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"SO\",\"name\":\"Somalia\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"KW\",\"name\":\"Kuwait\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"SA\",\"name\":\"Saudi Arabia\",\"value\":5,\"color\":\"#0091d8\"},{\"code\":\"SG\",\"name\":\"Singapore\",\"value\":2,\"color\":\"#0091d8\"},{\"code\":\"SE\",\"name\":\"Sweden\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"DO\",\"name\":\"Dominican Rep.\",\"value\":9,\"color\":\"#00abff\"},{\"code\":\"DK\",\"name\":\"Denmark\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"DE\",\"name\":\"Germany\",\"value\":12,\"color\":\"#e7ba08\"},{\"code\":\"US\",\"name\":\"United States\",\"value\":872,\"color\":\"#00abff\"},{\"code\":\"TZ\",\"name\":\"Tanzania\",\"value\":2,\"color\":\"#f95372\"},{\"code\":\"LA\",\"name\":\"Laos\",\"value\":1,\"color\":\"#0091d8\"},{\"code\":\"TR\",\"name\":\"Turkey\",\"value\":2,\"color\":\"#e7ba08\"},{\"code\":\"TN\",\"name\":\"Tunisia\",\"value\":1,\"color\":\"#f95372\"},{\"code\":\"LT\",\"name\":\"Lithuania\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"LU\",\"name\":\"Luxembourg\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"TH\",\"name\":\"Thailand\",\"value\":6,\"color\":\"#0091d8\"},{\"code\":\"AE\",\"name\":\"United Arab Emirates\",\"value\":14,\"color\":\"#0091d8\"},{\"code\":\"VE\",\"name\":\"Venezuela\",\"value\":11,\"color\":\"#8bd22f\"},{\"code\":\"IQ\",\"name\":\"Iraq\",\"value\":3,\"color\":\"#0091d8\"},{\"code\":\"IT\",\"name\":\"Italy\",\"value\":6,\"color\":\"#e7ba08\"},{\"code\":\"VN\",\"name\":\"Vietnam\",\"value\":18,\"color\":\"#0091d8\"},{\"code\":\"AR\",\"name\":\"Argentina\",\"value\":4,\"color\":\"#8bd22f\"},{\"code\":\"AU\",\"name\":\"Australia\",\"value\":22,\"color\":\"#c49e06\"},{\"code\":\"IL\",\"name\":\"Israel\",\"value\":3,\"color\":\"#0091d8\"},{\"code\":\"IN\",\"name\":\"India\",\"value\":38,\"color\":\"#0091d8\"},{\"code\":\"LB\",\"name\":\"Lebanon\",\"value\":2,\"color\":\"#0091d8\"},{\"code\":\"AZ\",\"name\":\"Azerbaijan\",\"value\":1,\"color\":\"#e7ba08\"},{\"code\":\"IE\",\"name\":\"Ireland\",\"value\":42,\"color\":\"#e7ba08\"},{\"code\":\"ID\",\"name\":\"Indonesia\",\"value\":4,\"color\":\"#0091d8\"},{\"code\":\"BD\",\"name\":\"Bangladesh\",\"value\":2,\"color\":\"#0091d8\"}];\n\n       self.transformationLocation(self.mapData,self);\n\n       \n       self.languageChartType = 'doughnut';\n   self.languageLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n   self.languageColor = [{\n     backgroundColor:['rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)','rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)','rgba(0,10,220,0.5)','rgba(220,0,10,0.5)'],\n     hoverBackgroundColor:\"rgba(54, 162, 235, 0.2)\",\n     hoverBorderColor:\"#7FFD1F\"\n   }];\n   self.languageData = [{data: [65, 59, 80, 81, 56, 55, 40], label: 'Top Mentions'}];\n                   \n\n    this._httpService.GetHttp(\"twit-by-date\")\n            .subscribe(\n            (data2) => {\n              self.selectedDate = data2[1];\n              self.transformationDateDropdown(data2, self);\n            },\n            (error) => {\n               console.log(error);\n            }\n            );\n\n\nthis._httpService.GetHttp(\"twit-brand\")\n            .subscribe(\n            (data2) => {\n             self.selectedBrand = data2[0];\n             self.transformationBrandDropdown(data2, self);\n            },\n            (error) => {\n               console.log(error);\n            }\n            \n            );\n\nthis._httpService.GetHttp(\"channel\")\n            .subscribe(\n            (data2) => {\n              self.selectedChannel = data2[0];\n              self.transformationChannalDropdown(data2, self);\n             \n            },\n            (error) => {\n               console.log(error);\n            }\n            );\n\n\n let post_data= {};\n post_data = {\n        channel:\"twitter\",\n        brand:\"coke\",\n        date: \"2016-11-20\"\n    }\n\nthis._httpService.PostHttp(JSON.stringify(post_data),\"twit-by-social\")\n            .subscribe(\n            (data2) => {\n    self.ProcessTwitt_Data(data2,self);\n    },\n       (error) => {\n               console.log(error);\n            }\n    )\n}\n\n   \n\n  \n formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n     \n ProcessTwitt_Data(data2,self){\n   \n\n   var ilabel = data2.impact_score_label;\n    var rlabel = data2.reach_label;  \n\n    self.totalimpact = data2.impact_score;\n    self.totalreach = data2.reach;\n    self.totalengagedusers = data2.engaged_users;\n    self.totalarticlesengagement = data2.articles_engagements;\n    self.totalarticlecount = data2.articles_count;\n\n    self.polarAreaChartData = [ self.totalarticlecount, self.totalarticlesengagement,  self.totalengagedusers,  self.totalreach, self.totalimpact ];\n    self.polarAreaChartLabels = ['Total Articles','Articles Engagement',  'Engaged Users',  rlabel, ilabel];\n\n\n    self.topMentionLabels = data2.mentions_chart_label;\n    var data_mention = data2.mentions_chart_value;\n    self.topMentionData = [{data: data_mention, label: 'Top Mentions'}];\n    \n    self.topDomainLabels = data2.domain_chart_label;\n    var data_domain = data2.domain_chart_value;\n    self.topDomainData = [{data: data_domain, label: 'Top Domain'}];\n    \n    self.sentimentLabels = data2.sentiment_label,\n    self.sentimentData= data2.sentiment_value\n    self.userClassLabels = data2.users_classification_label,\n    self.userClassData = data2.users_classification_value\n    self.topUserLabels = data2.top_users_label,\n    self.topUserData = data2.top_users_value\n\n    self.languageLabels = data2.language_label;\n   var data_language = data2.language_value;\n   self.languageData = [{data: data_language, label: 'Languages'}];\n    //var hastag_value = self.makeHasTagInput(data2.hastags_chart_value);\n    //var hastag_label = self.makeHasTagInput(data2.hastags_chart_label);\n    \n\n    //self.lineChartData =  [ {data: hastag_value, label: 'HashTag'}];\n    //self.lineChartLabels = hastag_label;\n   //self.words = []; \n   self.words=data2.hastag_result;\n   //console.log(JSON.stringify(self.words));\n\n  jQuery(\"#col1\").jQCloud('update',self.words,{  \n        autoResize: true\n      });\n\n\n\n\n\n\n\n    \n    \n    \n    if(data2.hasOwnProperty(\"top_articles\")){\n     self.url_1 =  \"https://twitter.com/AMAs/status/800378679536676864\";\n     self.url_2 =  \"https://twitter.com/AMAs/status/800458706823561216\";\n     self.url_3 =  \"https://twitter.com/AMAs/status/800466263034109952\";\n     self.url_4 =  \"https://twitter.com/AMAs/status/800443605223501824\";\n\nself.mapData = self.getMapLocationData(data2.article_locations,self);\n      self.transformationLocation(self.mapData,self);\n};\n   \n  }\n  \n\n\n  getResponsive(padding, offset) {\n    return this._chartistJs2Service.getResponsive(padding, offset);\n  }\n\n\n\n\n  OnChangeDate() {\n    let self = this;\n    let post_data= {};\n    if(self.start_date === self.end_date) {\n      console.log('strat Date');\n       \n      post_data = { channel:this.selectedChannel,brand:this.selectedBrand, date: self.start_date } \n      self.twitBySameDateAPI(post_data,self);\n    } else {\n      console.log('called diff');\n       \n      post_data = { channel:this.selectedChannel,brand:this.selectedBrand, start_date: self.start_date,end_date: self.end_date }\n      self.twitByDiffDateAPI(post_data,self);\n    }\n}\n\ntwitBySameDateAPI(post_data,self){\n  self._httpService.PostHttp(JSON.stringify(post_data),\"twit-by-social\")\n            .subscribe(\n            (data2) => {\n     self.ProcessTwitt_Data(data2,self)\n  \n\n    },\n            (error) => {\n               console.log(error);\n            }\n  );\n}\n\ntwitByDiffDateAPI(post_data,self){\n  self._httpService.PostHttp(JSON.stringify(post_data),\"twit-bydate-social\")\n            .subscribe(\n            (data2) => {\n     self.ProcessTwitt_Data(data2,self)\n  \n\n    },\n            (error) => {\n               console.log(error);\n            }\n  );\n}\n\n\n\n\n\n   private selectDate(value: any, dateInput: any) {\n      let self = this;\n       dateInput.start = value.start;\n       dateInput.end = value.end;\n       self.start_date = this.formatDate(dateInput.start);\n       self.end_date = this.formatDate(dateInput.end);\n       self.OnChangeDate()\n       \n\n       }\n       \n\n       \n   \n\n\n  OnChangeBrand() {\n     let self = this;\n     self.OnChangeDate();\n  }\n\n\n\n  OnChangeChannel() {\n    let self = this;\n    self.OnChangeDate();\n\n  }\n\n  // events\n  public chartClicked(e:any):void {\n    //console.log(e);\n  }\n\n  public chartHovered(e:any):void {\n    //console.log(e);\n  }\n\n public barChartOptions:any = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  public articleChartOptions:any = {\n    scaleShowVerticalLines: false,\n    scales: {\n           xAxes: [{\n               display: false\n           }]\n       },\n    responsive: true\n  };\n\n  public randomize():void {\n    // Only Change 3 values\n    let data = [\n      Math.round(Math.random() * 100),\n      59,\n      80,\n      (Math.random() * 100),\n      56,\n      (Math.random() * 100),\n      40];\n    let clone = JSON.parse(JSON.stringify(this.topMentionData));\n    clone[0].data = data;\n    this.topMentionData = clone;\n    /**\n     * (My guess), for Angular to recognize the change in the dataset\n     * it has to change the dataset variable directly,\n     * so one way around it, is to clone the data, change it and then\n     * assign it;\n     */\n\n    let _lineChartData:Array<any> = new Array(this.lineChartData.length);\n    for (let i = 0; i < this.lineChartData.length; i++) {\n      _lineChartData[i] = {data: new Array(this.lineChartData[i].data.length), label: this.lineChartData[i].label};\n      for (let j = 0; j < this.lineChartData[i].data.length; j++) {\n        _lineChartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n      }\n    }\n    this.lineChartData = _lineChartData;\n\n  }\n\n\n\n\ngetMapLocationData(result,self){\n\n\n   var mapResult = [];\n\n    for (var key in result) {\n            if (key !== \"\") {\n                var data = self.getMapData(key,result[key]);\n                mapResult.push(data);\n            }\n\n  }\n  \nreturn mapResult;\n\n  \n  }\n\n\n\nngAfterViewInit () {\n           !function(d,s,id){\n               var js: any,\n                   fjs=d.getElementsByTagName(s)[0],\n                   p='https';\n               if(!d.getElementById(id)){\n                   js=d.createElement(s);\n                   js.id=id;\n                   js.src=p+\"://platform.twitter.com/widgets.js\";\n                   fjs.parentNode.insertBefore(js,fjs);\n               }\n           }\n           (document,\"script\",\"twitter-wjs\");\n\n\n\n\n   }\n\ngetMapData(key,value){\n   var layoutColors = this._baConfig.get().colors;\n   var mapData = [\n      {'code': 'AF', 'name': 'Afghanistan', 'value': 32358260, 'color': layoutColors.primaryDark},\n      {'code': 'AL', 'name': 'Albania', 'value': 3215988, 'color': layoutColors.warning},\n      {'code': 'DZ', 'name': 'Algeria', 'value': 35980193, 'color': layoutColors.danger},\n      {'code': 'AO', 'name': 'Angola', 'value': 19618432, 'color': layoutColors.danger},\n      {'code': 'AR', 'name': 'Argentina', 'value': 40764561, 'color': layoutColors.success},\n      {'code': 'AM', 'name': 'Armenia', 'value': 3100236, 'color': layoutColors.warning},\n      {'code': 'AU', 'name': 'Australia', 'value': 22605732, 'color': layoutColors.warningDark},\n      {'code': 'AT', 'name': 'Austria', 'value': 8413429, 'color': layoutColors.warning},\n      {'code': 'AZ', 'name': 'Azerbaijan', 'value': 9306023, 'color': layoutColors.warning},\n      {'code': 'BH', 'name': 'Bahrain', 'value': 1323535, 'color': layoutColors.primaryDark},\n      {'code': 'BD', 'name': 'Bangladesh', 'value': 150493658, 'color': layoutColors.primaryDark},\n      {'code': 'BY', 'name': 'Belarus', 'value': 9559441, 'color': layoutColors.warning},\n      {'code': 'BE', 'name': 'Belgium', 'value': 10754056, 'color': layoutColors.warning},\n      {'code': 'BJ', 'name': 'Benin', 'value': 9099922, 'color': layoutColors.danger},\n      {'code': 'BT', 'name': 'Bhutan', 'value': 738267, 'color': layoutColors.primaryDark},\n      {'code': 'BO', 'name': 'Bolivia', 'value': 10088108, 'color': layoutColors.success},\n      {'code': 'BA', 'name': 'Bosnia and Herzegovina', 'value': 3752228, 'color': layoutColors.warning},\n      {'code': 'BW', 'name': 'Botswana', 'value': 2030738, 'color': layoutColors.danger},\n      {'code': 'BR', 'name': 'Brazil', 'value': 196655014, 'color': layoutColors.success},\n      {'code': 'BN', 'name': 'Brunei', 'value': 405938, 'color': layoutColors.primaryDark},\n      {'code': 'BG', 'name': 'Bulgaria', 'value': 7446135, 'color': layoutColors.warning},\n      {'code': 'BF', 'name': 'Burkina Faso', 'value': 16967845, 'color': layoutColors.danger},\n      {'code': 'BI', 'name': 'Burundi', 'value': 8575172, 'color': layoutColors.danger},\n      {'code': 'KH', 'name': 'Cambodia', 'value': 14305183, 'color': layoutColors.primaryDark},\n      {'code': 'CM', 'name': 'Cameroon', 'value': 20030362, 'color': layoutColors.danger},\n      {'code': 'CA', 'name': 'Canada', 'value': 34349561, 'color': layoutColors.primary},\n      {'code': 'CV', 'name': 'Cape Verde', 'value': 500585, 'color': layoutColors.danger},\n      {'code': 'CF', 'name': 'Central African Rep.', 'value': 4486837, 'color': layoutColors.danger},\n      {'code': 'TD', 'name': 'Chad', 'value': 11525496, 'color': layoutColors.danger},\n      {'code': 'CL', 'name': 'Chile', 'value': 17269525, 'color': layoutColors.success},\n      {'code': 'CN', 'name': 'China', 'value': 1347565324, 'color': layoutColors.primaryDark},\n      {'code': 'CO', 'name': 'Colombia', 'value': 46927125, 'color': layoutColors.success},\n      {'code': 'KM', 'name': 'Comoros', 'value': 753943, 'color': layoutColors.danger},\n      {'code': 'CD', 'name': 'Congo, Dem. Rep.', 'value': 67757577, 'color': layoutColors.danger},\n      {'code': 'CG', 'name': 'Congo, Rep.', 'value': 4139748, 'color': layoutColors.danger},\n      {'code': 'CR', 'name': 'Costa Rica', 'value': 4726575, 'color': layoutColors.primary},\n      {'code': 'CI', 'name': 'Cote d\\'Ivoire', 'value': 20152894, 'color': layoutColors.danger},\n      {'code': 'HR', 'name': 'Croatia', 'value': 4395560, 'color': layoutColors.warning},\n      {'code': 'CU', 'name': 'Cuba', 'value': 11253665, 'color': layoutColors.primary},\n      {'code': 'CY', 'name': 'Cyprus', 'value': 1116564, 'color': layoutColors.warning},\n      {'code': 'CZ', 'name': 'Czech Rep.', 'value': 10534293, 'color': layoutColors.warning},\n      {'code': 'DK', 'name': 'Denmark', 'value': 5572594, 'color': layoutColors.warning},\n      {'code': 'DJ', 'name': 'Djibouti', 'value': 905564, 'color': layoutColors.danger},\n      {'code': 'DO', 'name': 'Dominican Rep.', 'value': 10056181, 'color': layoutColors.primary},\n      {'code': 'EC', 'name': 'Ecuador', 'value': 14666055, 'color': layoutColors.success},\n      {'code': 'EG', 'name': 'Egypt', 'value': 82536770, 'color': layoutColors.danger},\n      {'code': 'SV', 'name': 'El Salvador', 'value': 6227491, 'color': layoutColors.primary},\n      {'code': 'GQ', 'name': 'Equatorial Guinea', 'value': 720213, 'color': layoutColors.danger},\n      {'code': 'ER', 'name': 'Eritrea', 'value': 5415280, 'color': layoutColors.danger},\n      {'code': 'EE', 'name': 'Estonia', 'value': 1340537, 'color': layoutColors.warning},\n      {'code': 'ET', 'name': 'Ethiopia', 'value': 84734262, 'color': layoutColors.danger},\n      {'code': 'FJ', 'name': 'Fiji', 'value': 868406, 'color': layoutColors.warningDark},\n      {'code': 'FI', 'name': 'Finland', 'value': 5384770, 'color': layoutColors.warning},\n      {'code': 'FR', 'name': 'France', 'value': 63125894, 'color': layoutColors.warning},\n      {'code': 'GA', 'name': 'Gabon', 'value': 1534262, 'color': layoutColors.danger},\n      {'code': 'GM', 'name': 'Gambia', 'value': 1776103, 'color': layoutColors.danger},\n      {'code': 'GE', 'name': 'Georgia', 'value': 4329026, 'color': layoutColors.warning},\n      {'code': 'DE', 'name': 'Germany', 'value': 82162512, 'color': layoutColors.warning},\n      {'code': 'GH', 'name': 'Ghana', 'value': 24965816, 'color': layoutColors.danger},\n      {'code': 'GR', 'name': 'Greece', 'value': 11390031, 'color': layoutColors.warning},\n      {'code': 'GT', 'name': 'Guatemala', 'value': 14757316, 'color': layoutColors.primary},\n      {'code': 'GN', 'name': 'Guinea', 'value': 10221808, 'color': layoutColors.danger},\n      {'code': 'GW', 'name': 'Guinea-Bissau', 'value': 1547061, 'color': layoutColors.danger},\n      {'code': 'GY', 'name': 'Guyana', 'value': 756040, 'color': layoutColors.success},\n      {'code': 'HT', 'name': 'Haiti', 'value': 10123787, 'color': layoutColors.primary},\n      {'code': 'HN', 'name': 'Honduras', 'value': 7754687, 'color': layoutColors.primary},\n      {'code': 'HK', 'name': 'Hong Kong, China', 'value': 7122187, 'color': layoutColors.primaryDark},\n      {'code': 'HU', 'name': 'Hungary', 'value': 9966116, 'color': layoutColors.warning},\n      {'code': 'IS', 'name': 'Iceland', 'value': 324366, 'color': layoutColors.warning},\n      {'code': 'IN', 'name': 'India', 'value': 1241491960, 'color': layoutColors.primaryDark},\n      {'code': 'ID', 'name': 'Indonesia', 'value': 242325638, 'color': layoutColors.primaryDark},\n      {'code': 'IR', 'name': 'Iran', 'value': 74798599, 'color': layoutColors.primaryDark},\n      {'code': 'IQ', 'name': 'Iraq', 'value': 32664942, 'color': layoutColors.primaryDark},\n      {'code': 'IE', 'name': 'Ireland', 'value': 4525802, 'color': layoutColors.warning},\n      {'code': 'IL', 'name': 'Israel', 'value': 7562194, 'color': layoutColors.primaryDark},\n      {'code': 'IT', 'name': 'Italy', 'value': 60788694, 'color': layoutColors.warning},\n      {'code': 'JM', 'name': 'Jamaica', 'value': 2751273, 'color': layoutColors.primary},\n      {'code': 'JP', 'name': 'Japan', 'value': 126497241, 'color': layoutColors.primaryDark},\n      {'code': 'JO', 'name': 'Jordan', 'value': 6330169, 'color': layoutColors.primaryDark},\n      {'code': 'KZ', 'name': 'Kazakhstan', 'value': 16206750, 'color': layoutColors.primaryDark},\n      {'code': 'KE', 'name': 'Kenya', 'value': 41609728, 'color': layoutColors.danger},\n      {'code': 'KP', 'name': 'Korea, Dem. Rep.', 'value': 24451285, 'color': layoutColors.primaryDark},\n      {'code': 'KR', 'name': 'Korea, Rep.', 'value': 48391343, 'color': layoutColors.primaryDark},\n      {'code': 'KW', 'name': 'Kuwait', 'value': 2818042, 'color': layoutColors.primaryDark},\n      {'code': 'KG', 'name': 'Kyrgyzstan', 'value': 5392580, 'color': layoutColors.primaryDark},\n      {'code': 'LA', 'name': 'Laos', 'value': 6288037, 'color': layoutColors.primaryDark},\n      {'code': 'LV', 'name': 'Latvia', 'value': 2243142, 'color': layoutColors.warning},\n      {'code': 'LB', 'name': 'Lebanon', 'value': 4259405, 'color': layoutColors.primaryDark},\n      {'code': 'LS', 'name': 'Lesotho', 'value': 2193843, 'color': layoutColors.danger},\n      {'code': 'LR', 'name': 'Liberia', 'value': 4128572, 'color': layoutColors.danger},\n      {'code': 'LY', 'name': 'Libya', 'value': 6422772, 'color': layoutColors.danger},\n      {'code': 'LT', 'name': 'Lithuania', 'value': 3307481, 'color': layoutColors.warning},\n      {'code': 'LU', 'name': 'Luxembourg', 'value': 515941, 'color': layoutColors.warning},\n      {'code': 'MK', 'name': 'Macedonia, FYR', 'value': 2063893, 'color': layoutColors.warning},\n      {'code': 'MG', 'name': 'Madagascar', 'value': 21315135, 'color': layoutColors.danger},\n      {'code': 'MW', 'name': 'Malawi', 'value': 15380888, 'color': layoutColors.danger},\n      {'code': 'MY', 'name': 'Malaysia', 'value': 28859154, 'color': layoutColors.primaryDark},\n      {'code': 'ML', 'name': 'Mali', 'value': 15839538, 'color': layoutColors.danger},\n      {'code': 'MR', 'name': 'Mauritania', 'value': 3541540, 'color': layoutColors.danger},\n      {'code': 'MU', 'name': 'Mauritius', 'value': 1306593, 'color': layoutColors.danger},\n      {'code': 'MX', 'name': 'Mexico', 'value': 114793341, 'color': layoutColors.primary},\n      {'code': 'MD', 'name': 'Moldova', 'value': 3544864, 'color': layoutColors.warning},\n      {'code': 'MN', 'name': 'Mongolia', 'value': 2800114, 'color': layoutColors.primaryDark},\n      {'code': 'ME', 'name': 'Montenegro', 'value': 632261, 'color': layoutColors.warning},\n      {'code': 'MA', 'name': 'Morocco', 'value': 32272974, 'color': layoutColors.danger},\n      {'code': 'MZ', 'name': 'Mozambique', 'value': 23929708, 'color': layoutColors.danger},\n      {'code': 'MM', 'name': 'Myanmar', 'value': 48336763, 'color': layoutColors.primaryDark},\n      {'code': 'NA', 'name': 'Namibia', 'value': 2324004, 'color': layoutColors.danger},\n      {'code': 'NP', 'name': 'Nepal', 'value': 30485798, 'color': layoutColors.primaryDark},\n      {'code': 'NL', 'name': 'Netherlands', 'value': 16664746, 'color': layoutColors.warning},\n      {'code': 'NZ', 'name': 'New Zealand', 'value': 4414509, 'color': layoutColors.warningDark},\n      {'code': 'NI', 'name': 'Nicaragua', 'value': 5869859, 'color': layoutColors.primary},\n      {'code': 'NE', 'name': 'Niger', 'value': 16068994, 'color': layoutColors.danger},\n      {'code': 'NG', 'name': 'Nigeria', 'value': 162470737, 'color': layoutColors.danger},\n      {'code': 'NO', 'name': 'Norway', 'value': 4924848, 'color': layoutColors.warning},\n      {'code': 'OM', 'name': 'Oman', 'value': 2846145, 'color': layoutColors.primaryDark},\n      {'code': 'PK', 'name': 'Pakistan', 'value': 176745364, 'color': layoutColors.primaryDark},\n      {'code': 'PA', 'name': 'Panama', 'value': 3571185, 'color': layoutColors.primary},\n      {'code': 'PG', 'name': 'Papua New Guinea', 'value': 7013829, 'color': layoutColors.warningDark},\n      {'code': 'PY', 'name': 'Paraguay', 'value': 6568290, 'color': layoutColors.success},\n      {'code': 'PE', 'name': 'Peru', 'value': 29399817, 'color': layoutColors.success},\n      {'code': 'PH', 'name': 'Philippines', 'value': 94852030, 'color': layoutColors.primaryDark},\n      {'code': 'PL', 'name': 'Poland', 'value': 38298949, 'color': layoutColors.warning},\n      {'code': 'PT', 'name': 'Portugal', 'value': 10689663, 'color': layoutColors.warning},\n      {'code': 'PR', 'name': 'Puerto Rico', 'value': 3745526, 'color': layoutColors.primary},\n      {'code': 'QA', 'name': 'Qatar', 'value': 1870041, 'color': layoutColors.primaryDark},\n      {'code': 'RO', 'name': 'Romania', 'value': 21436495, 'color': layoutColors.warning},\n      {'code': 'RU', 'name': 'Russia', 'value': 142835555, 'color': layoutColors.warning},\n      {'code': 'RW', 'name': 'Rwanda', 'value': 10942950, 'color': layoutColors.danger},\n      {'code': 'SA', 'name': 'Saudi Arabia', 'value': 28082541, 'color': layoutColors.primaryDark},\n      {'code': 'SN', 'name': 'Senegal', 'value': 12767556, 'color': layoutColors.danger},\n      {'code': 'RS', 'name': 'Serbia', 'value': 9853969, 'color': layoutColors.warning},\n      {'code': 'SL', 'name': 'Sierra Leone', 'value': 5997486, 'color': layoutColors.danger},\n      {'code': 'SG', 'name': 'Singapore', 'value': 5187933, 'color': layoutColors.primaryDark},\n      {'code': 'SK', 'name': 'Slovak Republic', 'value': 5471502, 'color': layoutColors.warning},\n      {'code': 'SI', 'name': 'Slovenia', 'value': 2035012, 'color': layoutColors.warning},\n      {'code': 'SB', 'name': 'Solomon Islands', 'value': 552267, 'color': layoutColors.warningDark},\n      {'code': 'SO', 'name': 'Somalia', 'value': 9556873, 'color': layoutColors.danger},\n      {'code': 'ZA', 'name': 'South Africa', 'value': 50459978, 'color': layoutColors.danger},\n      {'code': 'ES', 'name': 'Spain', 'value': 46454895, 'color': layoutColors.warning},\n      {'code': 'LK', 'name': 'Sri Lanka', 'value': 21045394, 'color': layoutColors.primaryDark},\n      {'code': 'SD', 'name': 'Sudan', 'value': 34735288, 'color': layoutColors.danger},\n      {'code': 'SR', 'name': 'Suriname', 'value': 529419, 'color': layoutColors.success},\n      {'code': 'SZ', 'name': 'Swaziland', 'value': 1203330, 'color': layoutColors.danger},\n      {'code': 'SE', 'name': 'Sweden', 'value': 9440747, 'color': layoutColors.warning},\n      {'code': 'CH', 'name': 'Switzerland', 'value': 7701690, 'color': layoutColors.warning},\n      {'code': 'SY', 'name': 'Syria', 'value': 20766037, 'color': layoutColors.primaryDark},\n      {'code': 'TW', 'name': 'Taiwan', 'value': 23072000, 'color': layoutColors.primaryDark},\n      {'code': 'TJ', 'name': 'Tajikistan', 'value': 6976958, 'color': layoutColors.primaryDark},\n      {'code': 'TZ', 'name': 'Tanzania', 'value': 46218486, 'color': layoutColors.danger},\n      {'code': 'TH', 'name': 'Thailand', 'value': 69518555, 'color': layoutColors.primaryDark},\n      {'code': 'TG', 'name': 'Togo', 'value': 6154813, 'color': layoutColors.danger},\n      {'code': 'TT', 'name': 'Trinidad and Tobago', 'value': 1346350, 'color': layoutColors.primary},\n      {'code': 'TN', 'name': 'Tunisia', 'value': 10594057, 'color': layoutColors.danger},\n      {'code': 'TR', 'name': 'Turkey', 'value': 73639596, 'color': layoutColors.warning},\n      {'code': 'TM', 'name': 'Turkmenistan', 'value': 5105301, 'color': layoutColors.primaryDark},\n      {'code': 'UG', 'name': 'Uganda', 'value': 34509205, 'color': layoutColors.danger},\n      {'code': 'UA', 'name': 'Ukraine', 'value': 45190180, 'color': layoutColors.warning},\n      {'code': 'AE', 'name': 'United Arab Emirates', 'value': 7890924, 'color': layoutColors.primaryDark},\n      {'code': 'GB', 'name': 'United Kingdom', 'value': 62417431, 'color': layoutColors.warning},\n      {'code': 'US', 'name': 'United States', 'value': 313085380, 'color': layoutColors.primary},\n      {'code': 'UY', 'name': 'Uruguay', 'value': 3380008, 'color': layoutColors.success},\n      {'code': 'UZ', 'name': 'Uzbekistan', 'value': 27760267, 'color': layoutColors.primaryDark},\n      {'code': 'VE', 'name': 'Venezuela', 'value': 29436891, 'color': layoutColors.success},\n      {'code': 'PS', 'name': 'West Bank and Gaza', 'value': 4152369, 'color': layoutColors.primaryDark},\n      {'code': 'VN', 'name': 'Vietnam', 'value': 88791996, 'color': layoutColors.primaryDark},\n      {'code': 'YE', 'name': 'Yemen, Rep.', 'value': 24799880, 'color': layoutColors.primaryDark},\n      {'code': 'ZM', 'name': 'Zambia', 'value': 13474959, 'color': layoutColors.danger},\n      {'code': 'ZW', 'name': 'Zimbabwe', 'value': 12754378, 'color': layoutColors.danger}\n    ];\n\n    \n\n    for (var i = 0; i < mapData.length; i++) {\n            var obj = mapData[i];\n            if(obj.code === key && key!= \"\"){\n              var data = {}; \n              data['code'] = key;\n              data['name'] = obj.name;\n              data['value'] = value;\n              data['color'] = obj.color;\n              return data;\n            }\n           \n        }\n        \n       \n\n}\n\n\ntransformationLocation(mapdata,self){\n   self.inputdata = mapdata;\n   self.chartData = self.getDataWithParam(self.inputdata);\n   let chart = AmCharts.makeChart(this._selector.nativeElement, self.chartData);\n}\ntransformationHashTag(result,self){\n  self.cloudData = result;\n}\n\ntransformationDateDropdown(result,self){\n    var sampleObject =[];\n    result.forEach(function(element){\n      var sO={\n        name: element,\n        date: element\n      };\n      sampleObject.push(sO);\n    });\n    \n\n    self.dropDownDate = sampleObject;\n\n}\n\n\n\ntransformationChannalDropdown(result,self){\n    var sampleObject =[];\n    var c_name;\n    result.forEach(function(element){\n      \n\n      if(element ==='reddit'){ c_name ='Reddit'; }\n      if(element ==='facebook'){ c_name ='Facebook'; }\n      if(element ==='tumblr'){ c_name ='Tumblr'; }\n      if(element ==='flickr'){ c_name ='Flickr'; }\n      if(element ==='news'){ c_name ='News'; }\n      if(element ==='all_media_stat'){ c_name ='All'; }\n      if(element ==='twitter'){ c_name ='Twitter'; }\n      if(element ==='Plus'){ c_name ='Plus'; }\n      if(element ==='blogs'){ c_name ='Blogs'; }\n     \n      \n      var sO={\n        name: c_name,\n        channel: element\n      };\n      sampleObject.push(sO);\n    });\n    \n\n    self.dropDownChannel = sampleObject;\n}\n\n\n\ntransformationBrandDropdown(result,self){\n    var sampleObject =[];\n    result.forEach(function(element){\n      var sO={\n        name: element,\n        brand: element\n      };\n      sampleObject.push(sO);\n    });\n   \n\n    self.dropDownBrand = sampleObject;\n}\n\n// mentionChart\ntransformationmentionsChart(result,self){\n    self.simpleBarData= result;\n\n    self.simpleBarOptions= {\n      fullWidth: true,\n      height: '400px',\n      horizontalBars: true,\n      //chartPadding: 60,\n      showLabel: true,\n     \n  axisX: {\n    showGrid: true,\n    showLabel: true,\n    offset: 0\n  },\n\n  axisY: {\n    offset: 110,\n   \n  },    \n    };\n\n  }\n\n\n  transformationdomainChart(result,self){\n    self.domainBarData= result;\n\n    self.domianBarOptions= {\n      fullWidth: true,\n      height: '400px',\n      horizontalBars: true,\n      //chartPadding: 60,\n      showLabel: true,\n     \n  axisX: {\n    showGrid: true,\n    showLabel: true,\n    offset: 0\n  },\n\n  axisY: {\n    offset: 100,\n   \n  },    \n    };\n\n  }\n\n\n\n\n\n\ntransformationsentimentsChart(result,self){\n    self.simpleDonutData= result;\n\n   self.simpleDonutOptions = {\n      fullWidth: true,\n      donut: true,\n      height: '300px',\n      weight: '300px',\n      labelDirection: 'explode',\n      labelInterpolationFnc: function (value) {\n        return value[0];\n      }\n    }\n}\n\n\n\ntransformationuserclassChart(result,self){\n    self.labelsPieData= result;\n    self.labelsPieOptions = {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelDirection: 'explode',\n      labelOffset: 80,\n      // chartPadding: 50,\n      labelInterpolationFnc: function (value) {\n        return value;\n      }\n    }\n}\n\n\ntransformationttopusersChart(result,self){\n    self.simplePieData= result;\n \n    self.simplePieOptions = {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelInterpolationFnc: function (value) {\n        return Math.round(value / 12 * 100) + '%';\n      }\n    }\n\n  }\n\n\nmakeHasTagInput(result){\n  \n  var cloud =[];\nfor (var i = 0; i < 10; i++) { \n  var data_lb = result[i];\n  \n    cloud.push(data_lb);\n}\nreturn cloud;\n}\n\nmakeReachInput(result){\n  \n  var cloud =[];\nfor (var i = 0; i < 20; i++) { \n  var data_lb = result[i];\n  \n    cloud.push(data_lb);\n}\nreturn cloud;\n}\n\ntransformationtotaltweets(result,self){\n    self.totalimpact= result;\n}\n\ntransformationtotalreach(result, self){\n    self.totalreach= result;\n \n\n}\n\ntransformationtotalengagement(result, self){\n    self.totalarticlesengagement= result;\n \n\n}\n\n\ntransformationtotalarticles(result, self){\n    self.totalarticlecount= result;\n}\n\ntransformationilabel(result, self){\n    self.ilabel= result;\n}\ntransformationrlabel(result, self){\n    self.rlabel= result;\n}\n       \n\n\n\n\n\n\n\n\ngetDataWithParam(mapdata,self){\n\n  \n   let layoutColors = this._baConfig.get().colors;\n   let latlong = {};\n    latlong['AD'] = {'latitude': 42.5, 'longitude': 1.5};\n    latlong['AE'] = {'latitude': 24, 'longitude': 54};\n    latlong['AF'] = {'latitude': 33, 'longitude': 65};\n    latlong['AG'] = {'latitude': 17.05, 'longitude': -61.8};\n    latlong['AI'] = {'latitude': 18.25, 'longitude': -63.1667};\n    latlong['AL'] = {'latitude': 41, 'longitude': 20};\n    latlong['AM'] = {'latitude': 40, 'longitude': 45};\n    latlong['AN'] = {'latitude': 12.25, 'longitude': -68.75};\n    latlong['AO'] = {'latitude': -12.5, 'longitude': 18.5};\n    latlong['AP'] = {'latitude': 35, 'longitude': 105};\n    latlong['AQ'] = {'latitude': -90, 'longitude': 0};\n    latlong['AR'] = {'latitude': -34, 'longitude': -64};\n    latlong['AS'] = {'latitude': -14.3333, 'longitude': -170};\n    latlong['AT'] = {'latitude': 47.3333, 'longitude': 13.3333};\n    latlong['AU'] = {'latitude': -27, 'longitude': 133};\n    latlong['AW'] = {'latitude': 12.5, 'longitude': -69.9667};\n    latlong['AZ'] = {'latitude': 40.5, 'longitude': 47.5};\n    latlong['BA'] = {'latitude': 44, 'longitude': 18};\n    latlong['BB'] = {'latitude': 13.1667, 'longitude': -59.5333};\n    latlong['BD'] = {'latitude': 24, 'longitude': 90};\n    latlong['BE'] = {'latitude': 50.8333, 'longitude': 4};\n    latlong['BF'] = {'latitude': 13, 'longitude': -2};\n    latlong['BG'] = {'latitude': 43, 'longitude': 25};\n    latlong['BH'] = {'latitude': 26, 'longitude': 50.55};\n    latlong['BI'] = {'latitude': -3.5, 'longitude': 30};\n    latlong['BJ'] = {'latitude': 9.5, 'longitude': 2.25};\n    latlong['BM'] = {'latitude': 32.3333, 'longitude': -64.75};\n    latlong['BN'] = {'latitude': 4.5, 'longitude': 114.6667};\n    latlong['BO'] = {'latitude': -17, 'longitude': -65};\n    latlong['BR'] = {'latitude': -10, 'longitude': -55};\n    latlong['BS'] = {'latitude': 24.25, 'longitude': -76};\n    latlong['BT'] = {'latitude': 27.5, 'longitude': 90.5};\n    latlong['BV'] = {'latitude': -54.4333, 'longitude': 3.4};\n    latlong['BW'] = {'latitude': -22, 'longitude': 24};\n    latlong['BY'] = {'latitude': 53, 'longitude': 28};\n    latlong['BZ'] = {'latitude': 17.25, 'longitude': -88.75};\n    latlong['CA'] = {'latitude': 54, 'longitude': -100};\n    latlong['CC'] = {'latitude': -12.5, 'longitude': 96.8333};\n    latlong['CD'] = {'latitude': 0, 'longitude': 25};\n    latlong['CF'] = {'latitude': 7, 'longitude': 21};\n    latlong['CG'] = {'latitude': -1, 'longitude': 15};\n    latlong['CH'] = {'latitude': 47, 'longitude': 8};\n    latlong['CI'] = {'latitude': 8, 'longitude': -5};\n    latlong['CK'] = {'latitude': -21.2333, 'longitude': -159.7667};\n    latlong['CL'] = {'latitude': -30, 'longitude': -71};\n    latlong['CM'] = {'latitude': 6, 'longitude': 12};\n    latlong['CN'] = {'latitude': 35, 'longitude': 105};\n    latlong['CO'] = {'latitude': 4, 'longitude': -72};\n    latlong['CR'] = {'latitude': 10, 'longitude': -84};\n    latlong['CU'] = {'latitude': 21.5, 'longitude': -80};\n    latlong['CV'] = {'latitude': 16, 'longitude': -24};\n    latlong['CX'] = {'latitude': -10.5, 'longitude': 105.6667};\n    latlong['CY'] = {'latitude': 35, 'longitude': 33};\n    latlong['CZ'] = {'latitude': 49.75, 'longitude': 15.5};\n    latlong['DE'] = {'latitude': 51, 'longitude': 9};\n    latlong['DJ'] = {'latitude': 11.5, 'longitude': 43};\n    latlong['DK'] = {'latitude': 56, 'longitude': 10};\n    latlong['DM'] = {'latitude': 15.4167, 'longitude': -61.3333};\n    latlong['DO'] = {'latitude': 19, 'longitude': -70.6667};\n    latlong['DZ'] = {'latitude': 28, 'longitude': 3};\n    latlong['EC'] = {'latitude': -2, 'longitude': -77.5};\n    latlong['EE'] = {'latitude': 59, 'longitude': 26};\n    latlong['EG'] = {'latitude': 27, 'longitude': 30};\n    latlong['EH'] = {'latitude': 24.5, 'longitude': -13};\n    latlong['ER'] = {'latitude': 15, 'longitude': 39};\n    latlong['ES'] = {'latitude': 40, 'longitude': -4};\n    latlong['ET'] = {'latitude': 8, 'longitude': 38};\n    latlong['EU'] = {'latitude': 47, 'longitude': 8};\n    latlong['FI'] = {'latitude': 62, 'longitude': 26};\n    latlong['FJ'] = {'latitude': -18, 'longitude': 175};\n    latlong['FK'] = {'latitude': -51.75, 'longitude': -59};\n    latlong['FM'] = {'latitude': 6.9167, 'longitude': 158.25};\n    latlong['FO'] = {'latitude': 62, 'longitude': -7};\n    latlong['FR'] = {'latitude': 46, 'longitude': 2};\n    latlong['GA'] = {'latitude': -1, 'longitude': 11.75};\n    latlong['GB'] = {'latitude': 54, 'longitude': -2};\n    latlong['GD'] = {'latitude': 12.1167, 'longitude': -61.6667};\n    latlong['GE'] = {'latitude': 42, 'longitude': 43.5};\n    latlong['GF'] = {'latitude': 4, 'longitude': -53};\n    latlong['GH'] = {'latitude': 8, 'longitude': -2};\n    latlong['GI'] = {'latitude': 36.1833, 'longitude': -5.3667};\n    latlong['GL'] = {'latitude': 72, 'longitude': -40};\n    latlong['GM'] = {'latitude': 13.4667, 'longitude': -16.5667};\n    latlong['GN'] = {'latitude': 11, 'longitude': -10};\n    latlong['GP'] = {'latitude': 16.25, 'longitude': -61.5833};\n    latlong['GQ'] = {'latitude': 2, 'longitude': 10};\n    latlong['GR'] = {'latitude': 39, 'longitude': 22};\n    latlong['GS'] = {'latitude': -54.5, 'longitude': -37};\n    latlong['GT'] = {'latitude': 15.5, 'longitude': -90.25};\n    latlong['GU'] = {'latitude': 13.4667, 'longitude': 144.7833};\n    latlong['GW'] = {'latitude': 12, 'longitude': -15};\n    latlong['GY'] = {'latitude': 5, 'longitude': -59};\n    latlong['HK'] = {'latitude': 22.25, 'longitude': 114.1667};\n    latlong['HM'] = {'latitude': -53.1, 'longitude': 72.5167};\n    latlong['HN'] = {'latitude': 15, 'longitude': -86.5};\n    latlong['HR'] = {'latitude': 45.1667, 'longitude': 15.5};\n    latlong['HT'] = {'latitude': 19, 'longitude': -72.4167};\n    latlong['HU'] = {'latitude': 47, 'longitude': 20};\n    latlong['ID'] = {'latitude': -5, 'longitude': 120};\n    latlong['IE'] = {'latitude': 53, 'longitude': -8};\n    latlong['IL'] = {'latitude': 31.5, 'longitude': 34.75};\n    latlong['IN'] = {'latitude': 20, 'longitude': 77};\n    latlong['IO'] = {'latitude': -6, 'longitude': 71.5};\n    latlong['IQ'] = {'latitude': 33, 'longitude': 44};\n    latlong['IR'] = {'latitude': 32, 'longitude': 53};\n    latlong['IS'] = {'latitude': 65, 'longitude': -18};\n    latlong['IT'] = {'latitude': 42.8333, 'longitude': 12.8333};\n    latlong['JM'] = {'latitude': 18.25, 'longitude': -77.5};\n    latlong['JO'] = {'latitude': 31, 'longitude': 36};\n    latlong['JP'] = {'latitude': 36, 'longitude': 138};\n    latlong['KE'] = {'latitude': 1, 'longitude': 38};\n    latlong['KG'] = {'latitude': 41, 'longitude': 75};\n    latlong['KH'] = {'latitude': 13, 'longitude': 105};\n    latlong['KI'] = {'latitude': 1.4167, 'longitude': 173};\n    latlong['KM'] = {'latitude': -12.1667, 'longitude': 44.25};\n    latlong['KN'] = {'latitude': 17.3333, 'longitude': -62.75};\n    latlong['KP'] = {'latitude': 40, 'longitude': 127};\n    latlong['KR'] = {'latitude': 37, 'longitude': 127.5};\n    latlong['KW'] = {'latitude': 29.3375, 'longitude': 47.6581};\n    latlong['KY'] = {'latitude': 19.5, 'longitude': -80.5};\n    latlong['KZ'] = {'latitude': 48, 'longitude': 68};\n    latlong['LA'] = {'latitude': 18, 'longitude': 105};\n    latlong['LB'] = {'latitude': 33.8333, 'longitude': 35.8333};\n    latlong['LC'] = {'latitude': 13.8833, 'longitude': -61.1333};\n    latlong['LI'] = {'latitude': 47.1667, 'longitude': 9.5333};\n    latlong['LK'] = {'latitude': 7, 'longitude': 81};\n    latlong['LR'] = {'latitude': 6.5, 'longitude': -9.5};\n    latlong['LS'] = {'latitude': -29.5, 'longitude': 28.5};\n    latlong['LT'] = {'latitude': 55, 'longitude': 24};\n    latlong['LU'] = {'latitude': 49.75, 'longitude': 6};\n    latlong['LV'] = {'latitude': 57, 'longitude': 25};\n    latlong['LY'] = {'latitude': 25, 'longitude': 17};\n    latlong['MA'] = {'latitude': 32, 'longitude': -5};\n    latlong['MC'] = {'latitude': 43.7333, 'longitude': 7.4};\n    latlong['MD'] = {'latitude': 47, 'longitude': 29};\n    latlong['ME'] = {'latitude': 42.5, 'longitude': 19.4};\n    latlong['MG'] = {'latitude': -20, 'longitude': 47};\n    latlong['MH'] = {'latitude': 9, 'longitude': 168};\n    latlong['MK'] = {'latitude': 41.8333, 'longitude': 22};\n    latlong['ML'] = {'latitude': 17, 'longitude': -4};\n    latlong['MM'] = {'latitude': 22, 'longitude': 98};\n    latlong['MN'] = {'latitude': 46, 'longitude': 105};\n    latlong['MO'] = {'latitude': 22.1667, 'longitude': 113.55};\n    latlong['MP'] = {'latitude': 15.2, 'longitude': 145.75};\n    latlong['MQ'] = {'latitude': 14.6667, 'longitude': -61};\n    latlong['MR'] = {'latitude': 20, 'longitude': -12};\n    latlong['MS'] = {'latitude': 16.75, 'longitude': -62.2};\n    latlong['MT'] = {'latitude': 35.8333, 'longitude': 14.5833};\n    latlong['MU'] = {'latitude': -20.2833, 'longitude': 57.55};\n    latlong['MV'] = {'latitude': 3.25, 'longitude': 73};\n    latlong['MW'] = {'latitude': -13.5, 'longitude': 34};\n    latlong['MX'] = {'latitude': 23, 'longitude': -102};\n    latlong['MY'] = {'latitude': 2.5, 'longitude': 112.5};\n    latlong['MZ'] = {'latitude': -18.25, 'longitude': 35};\n    latlong['NA'] = {'latitude': -22, 'longitude': 17};\n    latlong['NC'] = {'latitude': -21.5, 'longitude': 165.5};\n    latlong['NE'] = {'latitude': 16, 'longitude': 8};\n    latlong['NF'] = {'latitude': -29.0333, 'longitude': 167.95};\n    latlong['NG'] = {'latitude': 10, 'longitude': 8};\n    latlong['NI'] = {'latitude': 13, 'longitude': -85};\n    latlong['NL'] = {'latitude': 52.5, 'longitude': 5.75};\n    latlong['NO'] = {'latitude': 62, 'longitude': 10};\n    latlong['NP'] = {'latitude': 28, 'longitude': 84};\n    latlong['NR'] = {'latitude': -0.5333, 'longitude': 166.9167};\n    latlong['NU'] = {'latitude': -19.0333, 'longitude': -169.8667};\n    latlong['NZ'] = {'latitude': -41, 'longitude': 174};\n    latlong['OM'] = {'latitude': 21, 'longitude': 57};\n    latlong['PA'] = {'latitude': 9, 'longitude': -80};\n    latlong['PE'] = {'latitude': -10, 'longitude': -76};\n    latlong['PF'] = {'latitude': -15, 'longitude': -140};\n    latlong['PG'] = {'latitude': -6, 'longitude': 147};\n    latlong['PH'] = {'latitude': 13, 'longitude': 122};\n    latlong['PK'] = {'latitude': 30, 'longitude': 70};\n    latlong['PL'] = {'latitude': 52, 'longitude': 20};\n    latlong['PM'] = {'latitude': 46.8333, 'longitude': -56.3333};\n    latlong['PR'] = {'latitude': 18.25, 'longitude': -66.5};\n    latlong['PS'] = {'latitude': 32, 'longitude': 35.25};\n    latlong['PT'] = {'latitude': 39.5, 'longitude': -8};\n    latlong['PW'] = {'latitude': 7.5, 'longitude': 134.5};\n    latlong['PY'] = {'latitude': -23, 'longitude': -58};\n    latlong['QA'] = {'latitude': 25.5, 'longitude': 51.25};\n    latlong['RE'] = {'latitude': -21.1, 'longitude': 55.6};\n    latlong['RO'] = {'latitude': 46, 'longitude': 25};\n    latlong['RS'] = {'latitude': 44, 'longitude': 21};\n    latlong['RU'] = {'latitude': 60, 'longitude': 100};\n    latlong['RW'] = {'latitude': -2, 'longitude': 30};\n    latlong['SA'] = {'latitude': 25, 'longitude': 45};\n    latlong['SB'] = {'latitude': -8, 'longitude': 159};\n    latlong['SC'] = {'latitude': -4.5833, 'longitude': 55.6667};\n    latlong['SD'] = {'latitude': 15, 'longitude': 30};\n    latlong['SE'] = {'latitude': 62, 'longitude': 15};\n    latlong['SG'] = {'latitude': 1.3667, 'longitude': 103.8};\n    latlong['SH'] = {'latitude': -15.9333, 'longitude': -5.7};\n    latlong['SI'] = {'latitude': 46, 'longitude': 15};\n    latlong['SJ'] = {'latitude': 78, 'longitude': 20};\n    latlong['SK'] = {'latitude': 48.6667, 'longitude': 19.5};\n    latlong['SL'] = {'latitude': 8.5, 'longitude': -11.5};\n    latlong['SM'] = {'latitude': 43.7667, 'longitude': 12.4167};\n    latlong['SN'] = {'latitude': 14, 'longitude': -14};\n    latlong['SO'] = {'latitude': 10, 'longitude': 49};\n    latlong['SR'] = {'latitude': 4, 'longitude': -56};\n    latlong['ST'] = {'latitude': 1, 'longitude': 7};\n    latlong['SV'] = {'latitude': 13.8333, 'longitude': -88.9167};\n    latlong['SY'] = {'latitude': 35, 'longitude': 38};\n    latlong['SZ'] = {'latitude': -26.5, 'longitude': 31.5};\n    latlong['TC'] = {'latitude': 21.75, 'longitude': -71.5833};\n    latlong['TD'] = {'latitude': 15, 'longitude': 19};\n    latlong['TF'] = {'latitude': -43, 'longitude': 67};\n    latlong['TG'] = {'latitude': 8, 'longitude': 1.1667};\n    latlong['TH'] = {'latitude': 15, 'longitude': 100};\n    latlong['TJ'] = {'latitude': 39, 'longitude': 71};\n    latlong['TK'] = {'latitude': -9, 'longitude': -172};\n    latlong['TM'] = {'latitude': 40, 'longitude': 60};\n    latlong['TN'] = {'latitude': 34, 'longitude': 9};\n    latlong['TO'] = {'latitude': -20, 'longitude': -175};\n    latlong['TR'] = {'latitude': 39, 'longitude': 35};\n    latlong['TT'] = {'latitude': 11, 'longitude': -61};\n    latlong['TV'] = {'latitude': -8, 'longitude': 178};\n    latlong['TW'] = {'latitude': 23.5, 'longitude': 121};\n    latlong['TZ'] = {'latitude': -6, 'longitude': 35};\n    latlong['UA'] = {'latitude': 49, 'longitude': 32};\n    latlong['UG'] = {'latitude': 1, 'longitude': 32};\n    latlong['UM'] = {'latitude': 19.2833, 'longitude': 166.6};\n    latlong['US'] = {'latitude': 38, 'longitude': -97};\n    latlong['UY'] = {'latitude': -33, 'longitude': -56};\n    latlong['UZ'] = {'latitude': 41, 'longitude': 64};\n    latlong['VA'] = {'latitude': 41.9, 'longitude': 12.45};\n    latlong['VC'] = {'latitude': 13.25, 'longitude': -61.2};\n    latlong['VE'] = {'latitude': 8, 'longitude': -66};\n    latlong['VG'] = {'latitude': 18.5, 'longitude': -64.5};\n    latlong['VI'] = {'latitude': 18.3333, 'longitude': -64.8333};\n    latlong['VN'] = {'latitude': 16, 'longitude': 106};\n    latlong['VU'] = {'latitude': -16, 'longitude': 167};\n    latlong['WF'] = {'latitude': -13.3, 'longitude': -176.2};\n    latlong['WS'] = {'latitude': -13.5833, 'longitude': -172.3333};\n    latlong['YE'] = {'latitude': 15, 'longitude': 48};\n    latlong['YT'] = {'latitude': -12.8333, 'longitude': 45.1667};\n    latlong['ZA'] = {'latitude': -29, 'longitude': 24};\n    latlong['ZM'] = {'latitude': -15, 'longitude': 30};\n    latlong['ZW'] = {'latitude': -20, 'longitude': 30};\n   \n    let oldData = mapdata;\n    let mapData= []\n    for (var key in oldData) {\n        if (oldData[key] === \"\" || oldData[key] === null || oldData[key] === undefined){\n          delete oldData[key];\n          \n        }else{\n          mapData.push(oldData[key]);\n            \n        }\n    }\n   \n    //console.log(JSON.stringify(mapData));\n    let minBulletSize = 3\n      , maxBulletSize = 70\n      , min = Infinity\n      , max = -Infinity;\n\n    // get min and max values\n    for (let i = 0; i < mapData.length; i++) {\n      \n      var value = mapData[i].value;\n      if (value < min) {\n        min = value;\n      }\n      if (value > max) {\n        max = value;\n      }\n    \n\n    }\n\n\n    let dataProvider = {\n      mapVar: AmCharts.maps.worldLow,\n      images: []\n    };\n\n    var maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI;\n    var minSquare = minBulletSize * minBulletSize * 2 * Math.PI;\n\n    // create circle for each country\n    for (let i = 0; i < mapData.length; i++) {\n      let dataItem = mapData[i];\n      let value = dataItem.value;\n      // calculate size of a bubble\n      let square = (value - min) / (max - min) * (maxSquare - minSquare) + minSquare;\n      if (square < minSquare) {\n        square = minSquare;\n      }\n      let size = Math.sqrt(square / (Math.PI * 2));\n      let id = dataItem.code;\n\n\n\n      dataProvider.images.push({\n        type: 'circle',\n        width: size,\n        height: size,\n        color: dataItem.color,\n        longitude: latlong[id].longitude,\n        latitude: latlong[id].latitude,\n        title: dataItem.name,\n        value: value\n      });\n    }\n\n    return {\n      type: 'map',\n      theme: 'blur',\n      titles: [\n        {text: 'Reach around the world', size: 14},\n        {text: 'source: Twitter', size: 11}\n      ],\n      dataProvider: dataProvider,\n\n      areasSettings: {\n        unlistedAreasColor: '#000000',\n        unlistedAreasAlpha: 0.1\n      },\n\n      imagesSettings: {\n        balloonText: '<span style=\"font-size:14px;\"><b>[[title]]</b>: [[value]]</span>'\n      },\n\n      export: {\n        enabled: true\n      },\n      pathToImages: layoutPaths.images.amMap\n    };\n}\n\n\n}\n\n\n\n \n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/components/chartistJs2/chartistJs2.component.ts","import {Injectable} from '@angular/core';\n\nimport {BaThemeConfigProvider} from '../../../../theme';\n\n@Injectable()\nexport class ChartistJs2Service {\n\n  private _data = {\n       simplePieData: {\n      labels: ['<100', '100-1k', '1k-10k', '10k>'],\n      series: [12,12,21,3]\n    },\n    simplePieOptions: {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelInterpolationFnc: function (value) {\n        return Math.round(value / 12 * 100) + '%';\n      }\n    },\n         scatterChartOptions :{\n    chartType: 'ScatterChart',\n    dataTable: [\n      ['Age', 'Weight'],\n      [ 8,      12],\n      [ 4,      5.5],\n      [ 11,     14],\n      [ 4,      5],\n      [ 3,      3.5],\n      [ 6.5,    7]\n    ],\n    options: {\n      title: 'HasTag  and Count',\n      hAxis: {title: 'HashTag'},\n      vAxis: {title: 'Count'},\n      legend: 'none'\n    }\n},\n\n\n    labelsPieData: {\n      labels: ['fr', 'en', 'pt', 'tl', 'ja', 'es'],\n      series: [3, 34, 1, 2, 14, 1]\n    },\n    labelsPieOptions: {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelDirection: 'explode',\n      labelInterpolationFnc: function (value) {\n        return value;\n      }\n    },\n    simpleDonutData: {\n      labels: ['neutral', 'positive', 'negative'],\n      series: [20, 34, 5]\n    },\n    simpleDonutOptions: {\n      fullWidth: true,\n      donut: true,\n      height: '100px',\n      weight: '100px',\n      labelDirection: 'explode',\n      labelInterpolationFnc: function (value) {\n        return value[0];\n      }\n    },\n    simpleLineOptions: {\n      color: this._baConfig.get().colors.defaultText,\n      fullWidth: true,\n      height: '300px',\n      chartPadding: {\n        right: 40\n      }\n    },\n    simpleLineData: {\n      labels: ['2016-11-09', '2016-11-10', '2016-11-11', '2016-11-12', '2016-11-13', '2016-11-14'],\n      series: [\n        [173, 127, 54, 176, 117 ,187],\n        [48, 52, 39, 93, 54, 55],\n        [53, 46, 9, 33, 43, 76]\n      ]\n    },\n    areaLineData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8],\n      series: [\n        [5, 9, 7, 8, 5, 3, 5, 4]\n      ]\n    },\n    areaLineOptions: {\n      fullWidth: true,\n      height: '300px',\n      low: 0,\n      showArea: true\n    },\n    biLineData: {\n      labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      series: [\n        [1, 2, 3, 1, -2, 0, 1],\n        [-2, -1, -2, -1, -2.5, -1, -2],\n        [0, 0, 0, 1, 2, 2.5, 2],\n        [2.5, 2, 1, 0.5, 1, 0.5, -1]\n      ]\n    },\n\n    biLineOptions: {\n      height: '300px',\n      high: 3,\n      low: -3,\n      showArea: true,\n      showLine: false,\n      showPoint: false,\n      fullWidth: true,\n      axisX: {\n        showGrid: false\n      }\n    },\n    // simpleBarData: {\n    //   labels: ['@iptl', '@IndianAces', '@rogerfederer', '@naterzzzz', '@geniebouchard', '@IPTL', '@jakedavi5', '@MattBarbarin', '@MirzaSania', '@hotdog6969'],\n    //   series: [\n    //     [4, 2, 2, 1, 1, 1, 1,1, 1,1]\n        \n    //   ]\n    // },\n    // simpleBarOptions: {\n    //   fullWidth: true,\n    //   height: '300px'\n    // },\n    multiBarData: {\n      labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\n      series: [\n        [5, 4, 3, 7],\n        [3, 2, 9, 5],\n        [1, 5, 8, 4],\n        [2, 3, 4, 6],\n        [4, 1, 2, 1]\n      ]\n    },\n    multiBarOptions: {\n      fullWidth: true,\n      height: '300px',\n      stackBars: true,\n      axisX: {\n        labelInterpolationFnc: function (value) {\n          return value.split(/\\s+/).map(function (word) {\n            return word[0];\n          }).join('');\n        }\n      },\n      axisY: {\n        offset: 20\n      }\n    },\n    multiBarResponsive: [\n      ['screen and (min-width: 400px)', {\n        reverseData: true,\n        horizontalBars: true,\n        axisX: {\n          labelInterpolationFnc: (n) => n\n        },\n        axisY: {\n          offset: 60\n        }\n      }],\n      ['screen and (min-width: 700px)', {\n        stackBars: false,\n        reverseData: false,\n        horizontalBars: false,\n        seriesBarDistance: 15\n      }]\n    ],\n    stackedBarData: {\n      labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\n      series: [\n        [800000, 1200000, 1400000, 1300000],\n        [200000, 400000, 500000, 300000],\n        [100000, 200000, 400000, 600000]\n      ]\n    },\n    stackedBarOptions: {\n      fullWidth: true,\n      height: '300px',\n      stackBars: true,\n      axisY: {\n        labelInterpolationFnc: function (value) {\n          return (value / 1000) + 'k';\n        }\n      }\n    }\n \n  };\n\n  constructor(private _baConfig:BaThemeConfigProvider) {\n  }\n\n  public getAll() {\n    return this._data;\n  }\n\n  public getResponsive(padding, offset) {\n    return [\n      ['screen and (min-width: 1550px)', {\n        chartPadding: padding,\n        labelOffset: offset,\n        labelDirection: 'explode',\n        labelInterpolationFnc: function (value) {\n          return value;\n        }\n      }],\n      ['screen and (max-width: 1200px)', {\n        chartPadding: padding,\n        labelOffset: offset,\n        labelDirection: 'explode',\n        labelInterpolationFnc: function (value) {\n          return value;\n        }\n      }],\n      ['screen and (max-width: 600px)', {\n        chartPadding: 0,\n        labelOffset: 0,\n        \n        labelInterpolationFnc: function (value) {\n          return value[0];\n        }\n      }]\n    ];\n  }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/components/chartistJs2/chartistJs2.service.ts","\"use strict\";\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar TagCloudComponent = (function () {\n    function TagCloudComponent(el, renderer, sanitizer) {\n        this.el = el;\n        this.renderer = renderer;\n        this.sanitizer = sanitizer;\n        this.width = 500;\n        this.height = 300;\n        this.removeOverflow = false;\n        this.alreadyPlacedWords = [];\n    }\n    TagCloudComponent.prototype.ngOnInit = function () {\n        if (!this.data) {\n            console.error('angular-tag-cloud: No data passed. Please pass tags data as json');\n            return;\n        }\n        this.options = {\n            step: 2.0,\n            aspectRatio: (this.width / this.height),\n            width: this.width,\n            height: this.height,\n            center: {\n                x: (this.width / 2.0),\n                y: (this.height / 2.0)\n            },\n            removeOverflow: this.removeOverflow\n        };\n        this.renderer.setElementStyle(this.el.nativeElement, 'width', this.options.width + 'px');\n        this.renderer.setElementStyle(this.el.nativeElement, 'height', this.options.height + 'px');\n        this.drawWordCloud();\n    };\n    TagCloudComponent.prototype.drawWordCloud = function () {\n        var _this = this;\n        // Sort this.data from the word with the highest weight to the one with the lowest\n        this.data.sort(function (a, b) {\n            if (a.weight < b.weight) {\n                return 1;\n            }\n            else if (a.weight > b.weight) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        });\n        this.data.forEach(function (elem, index) {\n            _this.drawWord(index, elem);\n        });\n    };\n    // Helper function to test if an element overlaps others\n    TagCloudComponent.prototype.hitTest = function (currentEl, otherEl) {\n        // Check elements for overlap one by one, stop and return false as soon as an overlap is found\n        for (var i = 0; i < otherEl.length; i++) {\n            if (this.overlapping(currentEl, otherEl[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // Pairwise overlap detection\n    TagCloudComponent.prototype.overlapping = function (a, b) {\n        return (Math.abs(2.0 * a.offsetLeft + a.offsetWidth - 2.0 * b.offsetLeft - b.offsetWidth) < a.offsetWidth + b.offsetWidth &&\n            Math.abs(2.0 * a.offsetTop + a.offsetHeight - 2.0 * b.offsetTop - b.offsetHeight) < a.offsetHeight + b.offsetHeight)\n            ? true : false;\n    };\n    ;\n    // Function to draw a word, by moving it in spiral until it finds a suitable empty place. This will be iterated on each word.\n    TagCloudComponent.prototype.drawWord = function (index, word) {\n        // Define the ID attribute of the span that will wrap the word\n        var angle = 6.28 * Math.random(), radius = 0.0, weight = 5, wordSpan;\n        // Check if min(weight) > max(weight) otherwise use default\n        if (this.data[0].weight > this.data[this.data.length - 1].weight) {\n            // Linearly map the original weight to a discrete scale from 1 to 10\n            weight = Math.round((word.weight - this.data[this.data.length - 1].weight) /\n                (this.data[0].weight - this.data[this.data.length - 1].weight) * 9.0) + 1;\n        }\n        // Create a new span and insert node.\n        wordSpan = this.renderer.createElement(this.el.nativeElement, 'span');\n        wordSpan.className = 'w' + weight;\n        var node = this.renderer.createText(this.el.nativeElement, word.text);\n        // Append href if there's a link alongwith the tag\n        if (word.link !== undefined && word.link !== '') {\n            var wordLink = this.renderer.createElement(this.el.nativeElement, 'a');\n            wordLink.href = word.link;\n            if (word.external !== undefined && word.external) {\n                wordLink.target = '_blank';\n            }\n            wordLink.appendChild(node);\n            node = wordLink;\n        }\n        if (word.color !== undefined && word.color !== '') {\n            this.renderer.setElementStyle(node, 'color', word.color);\n        }\n        wordSpan.appendChild(node);\n        var width = wordSpan.offsetWidth, height = wordSpan.offsetHeight, left = this.options.center.x, top = this.options.center.y;\n        // Save a reference to the style property, for better performance\n        var wordStyle = wordSpan.style;\n        wordStyle.position = 'absolute';\n        // place the first word\n        wordStyle.left = left + 'px';\n        wordStyle.top = top + 'px';\n        while (this.hitTest(wordSpan, this.alreadyPlacedWords)) {\n            radius += this.options.step;\n            angle += (index % 2 === 0 ? 1 : -1) * this.options.step;\n            left = this.options.center.x - (width / 2.0) + (radius * Math.cos(angle)) * this.options.aspectRatio;\n            top = this.options.center.y + radius * Math.sin(angle) - (height / 2.0);\n            wordStyle.left = left + 'px';\n            wordStyle.top = top + 'px';\n        }\n        // Don't render word if part of it would be outside the container\n        if (this.options.removeOverflow && (left < 0 || top < 0 || (left + width) > this.options.width || (top + height) > this.options.height)) {\n            wordSpan.remove();\n            return;\n        }\n        this.alreadyPlacedWords.push(wordSpan);\n    };\n    ;\n    TagCloudComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'angular-tag-cloud',\n                    template: '',\n                    styles: [\"\\n    /* fonts */\\n    :host {\\n      font-family: \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\\n      font-size: 10px;\\n      line-height: normal;\\n    }\\n    :host /deep/ a:host {\\n      font-size: inherit;\\n      text-decoration: none;\\n    }\\n    :host /deep/ span.w10 { font-size: 550%; }\\n    :host /deep/ span.w9 { font-size: 500%; }\\n    :host /deep/ span.w8 { font-size: 450%; }\\n    :host /deep/ span.w7 { font-size: 400%; }\\n    :host /deep/ span.w6 { font-size: 350%; }\\n    :host /deep/ span.w5 { font-size: 300%; }\\n    :host /deep/ span.w4 { font-size: 250%; }\\n    :host /deep/ span.w3 { font-size: 200%; }\\n    :host /deep/ span.w2 { font-size: 150%; }\\n    :host /deep/ span.w1 { font-size: 100%; }\\n\\n    /* colors */\\n    :host /deep/ a { color: inherit; }\\n    :host /deep/ a:hover { color: #0df; }\\n    :host /deep/ a:hover { color: #0cf; }\\n    :host /deep/ span.w10 { color: #0cf; }\\n    :host /deep/ span.w9 { color: #0cf; }\\n    :host /deep/ span.w8 { color: #0cf; }\\n    :host /deep/ span.w7 { color: #39d; }\\n    :host /deep/ span.w6 { color: #90c5f0; }\\n    :host /deep/ span.w5 { color: #90a0dd; }\\n    :host /deep/ span.w4 { color: #90c5f0; }\\n    :host /deep/ span.w3 { color: #a0ddff; }\\n    :host /deep/ span.w2 { color: #99ccee; }\\n    :host /deep/ span.w1 { color: #aab5f0; }\\n\\n    /* layout */\\n    :host {\\n      color: #09f;\\n      overflow: hidden;\\n      position: relative;\\n      display: block;\\n    }\\n    :host /deep/ span { padding: 0; }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    TagCloudComponent.ctorParameters = [\n        { type: core_1.ElementRef, },\n        { type: core_1.Renderer, },\n        { type: platform_browser_1.DomSanitizer, },\n    ];\n    TagCloudComponent.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'width': [{ type: core_1.Input },],\n        'height': [{ type: core_1.Input },],\n        'removeOverflow': [{ type: core_1.Input },],\n    };\n    return TagCloudComponent;\n}());\nexports.TagCloudComponent = TagCloudComponent;\n//# sourceMappingURL=tag-cloud.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-tag-cloud-module/tag-cloud.component.js\n// module id = 1358\n// module chunks = 1","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar google_charts_loader_service_1 = require('../google-charts-loader.service');\nvar GoogleChartComponent = (function () {\n    function GoogleChartComponent(el, loaderService) {\n        this.el = el;\n        this.loaderService = loaderService;\n    }\n    GoogleChartComponent.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (changes['data']) {\n            if (this.data === null) {\n                return;\n            }\n            this.loaderService.load(this.data.chartType).then(function () {\n                if (_this.wrapper === undefined) {\n                    _this.wrapper = new google.visualization.ChartWrapper(_this.data);\n                }\n                else {\n                    _this.wrapper.setDataTable(_this.data.dataTable);\n                    _this.wrapper.setOptions(_this.data.options);\n                }\n                _this.wrapper.draw(_this.el.nativeElement.querySelector('div'));\n            });\n        }\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], GoogleChartComponent.prototype, \"data\", void 0);\n    GoogleChartComponent = __decorate([\n        core_1.Component({\n            selector: 'google-chart',\n            template: '<div></div>',\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\n        }), \n        __metadata('design:paramtypes', [core_1.ElementRef, google_charts_loader_service_1.GoogleChartsLoaderService])\n    ], GoogleChartComponent);\n    return GoogleChartComponent;\n}());\nexports.GoogleChartComponent = GoogleChartComponent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-google-charts/build/src/google-chart/google-chart.component.js\n// module id = 1359\n// module chunks = 1","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar GoogleChartsLoaderService = (function () {\n    function GoogleChartsLoaderService() {\n        this.chartPackage = {\n            'AnnotationChart': 'annotationchart',\n            'AreaChart': 'corechart',\n            'Bar': 'bar',\n            'BarChart': 'corechart',\n            'BubbleChart': 'corechart',\n            'Calendar': 'calendar',\n            'CandlestickChart': 'corechart',\n            'ColumnChart': 'corechart',\n            'ComboChart': 'corechart',\n            'PieChart': 'corechart',\n            'Gantt': 'gantt',\n            'Gauge': 'gauge',\n            'GeoChart': 'geochart',\n            'Histogram': 'corechart',\n            'Line': 'line',\n            'LineChart': 'corechart',\n            'Map': 'map',\n            'OrgChart': 'orgChart',\n            'Sankey': 'sankey',\n            'Scatter': 'scatter',\n            'ScatterChart': 'corechart',\n            'SteppedAreaChart': 'corechart',\n            'Table': 'table',\n            'Timeline': 'timeline',\n            'TreeMap': 'treemap',\n            'WordTree': 'wordtree',\n        };\n    }\n    GoogleChartsLoaderService.prototype.load = function (chartType) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            google.charts.load('45', {\n                'packages': [_this.chartPackage[chartType]],\n                'callback': resolve\n            });\n        });\n    };\n    GoogleChartsLoaderService = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [])\n    ], GoogleChartsLoaderService);\n    return GoogleChartsLoaderService;\n}());\nexports.GoogleChartsLoaderService = GoogleChartsLoaderService;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-google-charts/build/src/google-charts-loader.service.js\n// module id = 1360\n// module chunks = 1","import { NgModule } from '@angular/core';\r\nimport { DaterangePickerComponent } from './daterangepicker.component';\r\nimport { DaterangepickerConfig } from './config.service';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    declarations: [DaterangePickerComponent],\r\n    providers: [DaterangepickerConfig],\r\n    exports: [DaterangePickerComponent]\r\n\r\n})\r\nexport class Daterangepicker { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/ng2-daterangepicker/src/app/daterangepicker/daterangepicker.module.ts","import { Routes, RouterModule }  from '@angular/router';\n\nimport { Charts } from './charts.component';\nimport { ChartistJs } from './components/chartistJs/chartistJs.component';\nimport { ChartistJs2 } from './components/chartistJs2/chartistJs2.component';\nimport { BubbleMaps } from '../maps/components/bubbleMaps/bubbleMaps.component';\nimport { BrandLeague } from './components/brand_league/brand_league.components';\n//import { Maps } from '../maps/maps.component';\n\n\n// noinspection TypeScriptValidateTypes\nconst routes: Routes = [\n  {\n    path: '',\n    component: Charts,\n    children: [\n      { path: 'chartist-js', component: ChartistJs },\n      { path: 'chartist-js2', component: ChartistJs2 },\n      { path: 'brand_league', component: BrandLeague},\n     { path: 'bubblemaps', component: BubbleMaps}\n    ]\n  }\n];\n\nexport const routing = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/charts.routing.ts","import {Injectable} from '@angular/core';\n\nimport {BaThemeConfigProvider} from '../../../../theme';\n\n@Injectable()\nexport class ChartistJsService {\n\n  private _data = {\n       simplePieData: {\n      labels: ['<100', '100-1k', '1k-10k', '10k>'],\n      series: [12,12,21,3]\n    },\n    simplePieOptions: {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelInterpolationFnc: function (value) {\n        return Math.round(value / 12 * 100) + '%';\n      }\n    },\n         scatterChartOptions :{\n    chartType: 'ScatterChart',\n    dataTable: [\n      ['Age', 'Weight'],\n      [ 8,      12],\n      [ 4,      5.5],\n      [ 11,     14],\n      [ 4,      5],\n      [ 3,      3.5],\n      [ 6.5,    7]\n    ],\n    options: {\n      title: 'HasTag  and Count',\n      hAxis: {title: 'HashTag'},\n      vAxis: {title: 'Count'},\n      legend: 'none'\n    }\n},\n\n\n    labelsPieData: {\n      labels: ['fr', 'en', 'pt', 'tl', 'ja', 'es'],\n      series: [3, 34, 1, 2, 14, 1]\n    },\n    labelsPieOptions: {\n      fullWidth: true,\n      height: '300px',\n      weight: '300px',\n      labelDirection: 'explode',\n      labelInterpolationFnc: function (value) {\n        return value;\n      }\n    },\n    simpleDonutData: {\n      labels: ['neutral', 'positive', 'negative'],\n      series: [20, 34, 5]\n    },\n    simpleDonutOptions: {\n      fullWidth: true,\n      donut: true,\n      height: '100px',\n      weight: '100px',\n      labelDirection: 'explode',\n      labelInterpolationFnc: function (value) {\n        return value[0];\n      }\n    },\n    simpleLineOptions: {\n      color: this._baConfig.get().colors.defaultText,\n      fullWidth: true,\n      height: '300px',\n      chartPadding: {\n        right: 40\n      }\n    },\n    simpleLineData: {\n      labels: ['2016-11-09', '2016-11-10', '2016-11-11', '2016-11-12', '2016-11-13', '2016-11-14'],\n      series: [\n        [173, 127, 54, 176, 117 ,187],\n        [48, 52, 39, 93, 54, 55],\n        [53, 46, 9, 33, 43, 76]\n      ]\n    },\n    areaLineData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8],\n      series: [\n        [5, 9, 7, 8, 5, 3, 5, 4]\n      ]\n    },\n    areaLineOptions: {\n      fullWidth: true,\n      height: '300px',\n      low: 0,\n      showArea: true\n    },\n    biLineData: {\n      labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      series: [\n        [1, 2, 3, 1, -2, 0, 1],\n        [-2, -1, -2, -1, -2.5, -1, -2],\n        [0, 0, 0, 1, 2, 2.5, 2],\n        [2.5, 2, 1, 0.5, 1, 0.5, -1]\n      ]\n    },\n\n    biLineOptions: {\n      height: '300px',\n      high: 3,\n      low: -3,\n      showArea: true,\n      showLine: false,\n      showPoint: false,\n      fullWidth: true,\n      axisX: {\n        showGrid: false\n      }\n    },\n    // simpleBarData: {\n    //   labels: ['@iptl', '@IndianAces', '@rogerfederer', '@naterzzzz', '@geniebouchard', '@IPTL', '@jakedavi5', '@MattBarbarin', '@MirzaSania', '@hotdog6969'],\n    //   series: [\n    //     [4, 2, 2, 1, 1, 1, 1,1, 1,1]\n        \n    //   ]\n    // },\n    // simpleBarOptions: {\n    //   fullWidth: true,\n    //   height: '300px'\n    // },\n    multiBarData: {\n      labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\n      series: [\n        [5, 4, 3, 7],\n        [3, 2, 9, 5],\n        [1, 5, 8, 4],\n        [2, 3, 4, 6],\n        [4, 1, 2, 1]\n      ]\n    },\n    multiBarOptions: {\n      fullWidth: true,\n      height: '300px',\n      stackBars: true,\n      axisX: {\n        labelInterpolationFnc: function (value) {\n          return value.split(/\\s+/).map(function (word) {\n            return word[0];\n          }).join('');\n        }\n      },\n      axisY: {\n        offset: 20\n      }\n    },\n    multiBarResponsive: [\n      ['screen and (min-width: 400px)', {\n        reverseData: true,\n        horizontalBars: true,\n        axisX: {\n          labelInterpolationFnc: (n) => n\n        },\n        axisY: {\n          offset: 60\n        }\n      }],\n      ['screen and (min-width: 700px)', {\n        stackBars: false,\n        reverseData: false,\n        horizontalBars: false,\n        seriesBarDistance: 15\n      }]\n    ],\n    stackedBarData: {\n      labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\n      series: [\n        [800000, 1200000, 1400000, 1300000],\n        [200000, 400000, 500000, 300000],\n        [100000, 200000, 400000, 600000]\n      ]\n    },\n    stackedBarOptions: {\n      fullWidth: true,\n      height: '300px',\n      stackBars: true,\n      axisY: {\n        labelInterpolationFnc: function (value) {\n          return (value / 1000) + 'k';\n        }\n      }\n    }\n \n  };\n\n  constructor(private _baConfig:BaThemeConfigProvider) {\n  }\n\n  public getAll() {\n    return this._data;\n  }\n\n  public getResponsive(padding, offset) {\n    return [\n      ['screen and (min-width: 1550px)', {\n        chartPadding: padding,\n        labelOffset: offset,\n        labelDirection: 'explode',\n        labelInterpolationFnc: function (value) {\n          return value;\n        }\n      }],\n      ['screen and (max-width: 1200px)', {\n        chartPadding: padding,\n        labelOffset: offset,\n        labelDirection: 'explode',\n        labelInterpolationFnc: function (value) {\n          return value;\n        }\n      }],\n      ['screen and (max-width: 600px)', {\n        chartPadding: 0,\n        labelOffset: 0,\n        \n        labelInterpolationFnc: function (value) {\n          return value[0];\n        }\n      }]\n    ];\n  }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/charts/components/chartistJs/chartistJs.service.ts","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./tag-cloud.module'));\n__export(require('./tag-cloud.component'));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-tag-cloud-module/index.js\n// module id = 1392\n// module chunks = 1","\"use strict\";\nvar core_1 = require('@angular/core');\nvar tag_cloud_component_1 = require('./tag-cloud.component');\nvar TagCloudModule = (function () {\n    function TagCloudModule() {\n    }\n    TagCloudModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [tag_cloud_component_1.TagCloudComponent],\n                    exports: [tag_cloud_component_1.TagCloudComponent]\n                },] },\n    ];\n    /** @nocollapse */\n    TagCloudModule.ctorParameters = [];\n    return TagCloudModule;\n}());\nexports.TagCloudModule = TagCloudModule;\n//# sourceMappingURL=tag-cloud.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-tag-cloud-module/tag-cloud.module.js\n// module id = 1393\n// module chunks = 1","/**\r\n* @version: 2.1.24\r\n* @author: Dan Grossman http://www.dangrossman.info/\r\n* @copyright: Copyright (c) 2012-2016 Dan Grossman. All rights reserved.\r\n* @license: Licensed under the MIT license. See http://www.opensource.org/licenses/mit-license.php\r\n* @website: https://www.improvely.com/\r\n*/\r\n// Follow the UMD template https://github.com/umdjs/umd/blob/master/templates/returnExportsGlobal.js\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Make globaly available as well\r\n        define(['moment', 'jquery'], function (moment, jquery) {\r\n            return (root.daterangepicker = factory(moment, jquery));\r\n        });\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node / Browserify\r\n        //isomorphic issue\r\n        var jQuery = (typeof window != 'undefined') ? window.jQuery : undefined;\r\n        if (!jQuery) {\r\n            jQuery = require('jquery');\r\n            if (!jQuery.fn) jQuery.fn = {};\r\n        }\r\n        module.exports = factory(require('moment'), jQuery);\r\n    } else {\r\n        // Browser globals\r\n        root.daterangepicker = factory(root.moment, root.jQuery);\r\n    }\r\n}(this, function(moment, $) {\r\n    var DateRangePicker = function(element, options, cb) {\r\n\r\n        //default settings for options\r\n        this.parentEl = 'body';\r\n        this.element = $(element);\r\n        this.startDate = moment().startOf('day');\r\n        this.endDate = moment().endOf('day');\r\n        this.minDate = false;\r\n        this.maxDate = false;\r\n        this.dateLimit = false;\r\n        this.autoApply = false;\r\n        this.singleDatePicker = false;\r\n        this.showDropdowns = false;\r\n        this.showWeekNumbers = false;\r\n        this.showISOWeekNumbers = false;\r\n        this.showCustomRangeLabel = true;\r\n        this.timePicker = false;\r\n        this.timePicker24Hour = false;\r\n        this.timePickerIncrement = 1;\r\n        this.timePickerSeconds = false;\r\n        this.linkedCalendars = true;\r\n        this.autoUpdateInput = true;\r\n        this.alwaysShowCalendars = false;\r\n        this.ranges = {};\r\n\r\n        this.opens = 'right';\r\n        if (this.element.hasClass('pull-right'))\r\n            this.opens = 'left';\r\n\r\n        this.drops = 'down';\r\n        if (this.element.hasClass('dropup'))\r\n            this.drops = 'up';\r\n\r\n        this.buttonClasses = 'btn btn-sm';\r\n        this.applyClass = 'btn-success';\r\n        this.cancelClass = 'btn-default';\r\n\r\n        this.locale = {\r\n            direction: 'ltr',\r\n            format: 'MM/DD/YYYY',\r\n            separator: ' - ',\r\n            applyLabel: 'Apply',\r\n            cancelLabel: 'Cancel',\r\n            weekLabel: 'W',\r\n            customRangeLabel: 'Custom Range',\r\n            daysOfWeek: moment.weekdaysMin(),\r\n            monthNames: moment.monthsShort(),\r\n            firstDay: moment.localeData().firstDayOfWeek()\r\n        };\r\n\r\n        this.callback = function() { };\r\n\r\n        //some state information\r\n        this.isShowing = false;\r\n        this.leftCalendar = {};\r\n        this.rightCalendar = {};\r\n\r\n        //custom options from user\r\n        if (typeof options !== 'object' || options === null)\r\n            options = {};\r\n\r\n        //allow setting options with data attributes\r\n        //data-api options will be overwritten with custom javascript options\r\n        options = $.extend(this.element.data(), options);\r\n\r\n        //html template for the picker UI\r\n        if (typeof options.template !== 'string' && !(options.template instanceof $))\r\n            options.template = '<div class=\"daterangepicker dropdown-menu\">' +\r\n                '<div class=\"calendar left\">' +\r\n                    '<div class=\"daterangepicker_input\">' +\r\n                      '<input class=\"input-mini form-control\" type=\"text\" name=\"daterangepicker_start\" value=\"\" />' +\r\n                      '<i class=\"fa fa-calendar glyphicon glyphicon-calendar\"></i>' +\r\n                      '<div class=\"calendar-time\">' +\r\n                        '<div></div>' +\r\n                        '<i class=\"fa fa-clock-o glyphicon glyphicon-time\"></i>' +\r\n                      '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"calendar-table\"></div>' +\r\n                '</div>' +\r\n                '<div class=\"calendar right\">' +\r\n                    '<div class=\"daterangepicker_input\">' +\r\n                      '<input class=\"input-mini form-control\" type=\"text\" name=\"daterangepicker_end\" value=\"\" />' +\r\n                      '<i class=\"fa fa-calendar glyphicon glyphicon-calendar\"></i>' +\r\n                      '<div class=\"calendar-time\">' +\r\n                        '<div></div>' +\r\n                        '<i class=\"fa fa-clock-o glyphicon glyphicon-time\"></i>' +\r\n                      '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"calendar-table\"></div>' +\r\n                '</div>' +\r\n                '<div class=\"ranges\">' +\r\n                    '<div class=\"range_inputs\">' +\r\n                        '<button class=\"applyBtn\" disabled=\"disabled\" type=\"button\"></button> ' +\r\n                        '<button class=\"cancelBtn\" type=\"button\"></button>' +\r\n                    '</div>' +\r\n                '</div>' +\r\n            '</div>';\r\n\r\n        this.parentEl = (options.parentEl && $(options.parentEl).length) ? $(options.parentEl) : $(this.parentEl);\r\n        this.container = $(options.template).appendTo(this.parentEl);\r\n\r\n        //\r\n        // handle all the possible options overriding defaults\r\n        //\r\n\r\n        if (typeof options.locale === 'object') {\r\n\r\n            if (typeof options.locale.direction === 'string')\r\n                this.locale.direction = options.locale.direction;\r\n\r\n            if (typeof options.locale.format === 'string')\r\n                this.locale.format = options.locale.format;\r\n\r\n            if (typeof options.locale.separator === 'string')\r\n                this.locale.separator = options.locale.separator;\r\n\r\n            if (typeof options.locale.daysOfWeek === 'object')\r\n                this.locale.daysOfWeek = options.locale.daysOfWeek.slice();\r\n\r\n            if (typeof options.locale.monthNames === 'object')\r\n              this.locale.monthNames = options.locale.monthNames.slice();\r\n\r\n            if (typeof options.locale.firstDay === 'number')\r\n              this.locale.firstDay = options.locale.firstDay;\r\n\r\n            if (typeof options.locale.applyLabel === 'string')\r\n              this.locale.applyLabel = options.locale.applyLabel;\r\n\r\n            if (typeof options.locale.cancelLabel === 'string')\r\n              this.locale.cancelLabel = options.locale.cancelLabel;\r\n\r\n            if (typeof options.locale.weekLabel === 'string')\r\n              this.locale.weekLabel = options.locale.weekLabel;\r\n\r\n            if (typeof options.locale.customRangeLabel === 'string')\r\n              this.locale.customRangeLabel = options.locale.customRangeLabel;\r\n\r\n        }\r\n        this.container.addClass(this.locale.direction);\r\n\r\n        if (typeof options.startDate === 'string')\r\n            this.startDate = moment(options.startDate, this.locale.format);\r\n\r\n        if (typeof options.endDate === 'string')\r\n            this.endDate = moment(options.endDate, this.locale.format);\r\n\r\n        if (typeof options.minDate === 'string')\r\n            this.minDate = moment(options.minDate, this.locale.format);\r\n\r\n        if (typeof options.maxDate === 'string')\r\n            this.maxDate = moment(options.maxDate, this.locale.format);\r\n\r\n        if (typeof options.startDate === 'object')\r\n            this.startDate = moment(options.startDate);\r\n\r\n        if (typeof options.endDate === 'object')\r\n            this.endDate = moment(options.endDate);\r\n\r\n        if (typeof options.minDate === 'object')\r\n            this.minDate = moment(options.minDate);\r\n\r\n        if (typeof options.maxDate === 'object')\r\n            this.maxDate = moment(options.maxDate);\r\n\r\n        // sanity check for bad options\r\n        if (this.minDate && this.startDate.isBefore(this.minDate))\r\n            this.startDate = this.minDate.clone();\r\n\r\n        // sanity check for bad options\r\n        if (this.maxDate && this.endDate.isAfter(this.maxDate))\r\n            this.endDate = this.maxDate.clone();\r\n\r\n        if (typeof options.applyClass === 'string')\r\n            this.applyClass = options.applyClass;\r\n\r\n        if (typeof options.cancelClass === 'string')\r\n            this.cancelClass = options.cancelClass;\r\n\r\n        if (typeof options.dateLimit === 'object')\r\n            this.dateLimit = options.dateLimit;\r\n\r\n        if (typeof options.opens === 'string')\r\n            this.opens = options.opens;\r\n\r\n        if (typeof options.drops === 'string')\r\n            this.drops = options.drops;\r\n\r\n        if (typeof options.showWeekNumbers === 'boolean')\r\n            this.showWeekNumbers = options.showWeekNumbers;\r\n\r\n        if (typeof options.showISOWeekNumbers === 'boolean')\r\n            this.showISOWeekNumbers = options.showISOWeekNumbers;\r\n\r\n        if (typeof options.buttonClasses === 'string')\r\n            this.buttonClasses = options.buttonClasses;\r\n\r\n        if (typeof options.buttonClasses === 'object')\r\n            this.buttonClasses = options.buttonClasses.join(' ');\r\n\r\n        if (typeof options.showDropdowns === 'boolean')\r\n            this.showDropdowns = options.showDropdowns;\r\n\r\n        if (typeof options.showCustomRangeLabel === 'boolean')\r\n            this.showCustomRangeLabel = options.showCustomRangeLabel;\r\n\r\n        if (typeof options.singleDatePicker === 'boolean') {\r\n            this.singleDatePicker = options.singleDatePicker;\r\n            if (this.singleDatePicker)\r\n                this.endDate = this.startDate.clone();\r\n        }\r\n\r\n        if (typeof options.timePicker === 'boolean')\r\n            this.timePicker = options.timePicker;\r\n\r\n        if (typeof options.timePickerSeconds === 'boolean')\r\n            this.timePickerSeconds = options.timePickerSeconds;\r\n\r\n        if (typeof options.timePickerIncrement === 'number')\r\n            this.timePickerIncrement = options.timePickerIncrement;\r\n\r\n        if (typeof options.timePicker24Hour === 'boolean')\r\n            this.timePicker24Hour = options.timePicker24Hour;\r\n\r\n        if (typeof options.autoApply === 'boolean')\r\n            this.autoApply = options.autoApply;\r\n\r\n        if (typeof options.autoUpdateInput === 'boolean')\r\n            this.autoUpdateInput = options.autoUpdateInput;\r\n\r\n        if (typeof options.linkedCalendars === 'boolean')\r\n            this.linkedCalendars = options.linkedCalendars;\r\n\r\n        if (typeof options.isInvalidDate === 'function')\r\n            this.isInvalidDate = options.isInvalidDate;\r\n\r\n        if (typeof options.isCustomDate === 'function')\r\n            this.isCustomDate = options.isCustomDate;\r\n\r\n        if (typeof options.alwaysShowCalendars === 'boolean')\r\n            this.alwaysShowCalendars = options.alwaysShowCalendars;\r\n\r\n        // update day names order to firstDay\r\n        if (this.locale.firstDay != 0) {\r\n            var iterator = this.locale.firstDay;\r\n            while (iterator > 0) {\r\n                this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift());\r\n                iterator--;\r\n            }\r\n        }\r\n\r\n        var start, end, range;\r\n\r\n        //if no start/end dates set, check if an input element contains initial values\r\n        if (typeof options.startDate === 'undefined' && typeof options.endDate === 'undefined') {\r\n            if ($(this.element).is('input[type=text]')) {\r\n                var val = $(this.element).val(),\r\n                    split = val.split(this.locale.separator);\r\n\r\n                start = end = null;\r\n\r\n                if (split.length == 2) {\r\n                    start = moment(split[0], this.locale.format);\r\n                    end = moment(split[1], this.locale.format);\r\n                } else if (this.singleDatePicker && val !== \"\") {\r\n                    start = moment(val, this.locale.format);\r\n                    end = moment(val, this.locale.format);\r\n                }\r\n                if (start !== null && end !== null) {\r\n                    this.setStartDate(start);\r\n                    this.setEndDate(end);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof options.ranges === 'object') {\r\n            for (range in options.ranges) {\r\n\r\n                if (typeof options.ranges[range][0] === 'string')\r\n                    start = moment(options.ranges[range][0], this.locale.format);\r\n                else\r\n                    start = moment(options.ranges[range][0]);\r\n\r\n                if (typeof options.ranges[range][1] === 'string')\r\n                    end = moment(options.ranges[range][1], this.locale.format);\r\n                else\r\n                    end = moment(options.ranges[range][1]);\r\n\r\n                // If the start or end date exceed those allowed by the minDate or dateLimit\r\n                // options, shorten the range to the allowable period.\r\n                if (this.minDate && start.isBefore(this.minDate))\r\n                    start = this.minDate.clone();\r\n\r\n                var maxDate = this.maxDate;\r\n                if (this.dateLimit && maxDate && start.clone().add(this.dateLimit).isAfter(maxDate))\r\n                    maxDate = start.clone().add(this.dateLimit);\r\n                if (maxDate && end.isAfter(maxDate))\r\n                    end = maxDate.clone();\r\n\r\n                // If the end of the range is before the minimum or the start of the range is\r\n                // after the maximum, don't display this range option at all.\r\n                if ((this.minDate && end.isBefore(this.minDate, this.timepicker ? 'minute' : 'day')) \r\n                  || (maxDate && start.isAfter(maxDate, this.timepicker ? 'minute' : 'day')))\r\n                    continue;\r\n\r\n                //Support unicode chars in the range names.\r\n                var elem = document.createElement('textarea');\r\n                elem.innerHTML = range;\r\n                var rangeHtml = elem.value;\r\n\r\n                this.ranges[rangeHtml] = [start, end];\r\n            }\r\n\r\n            var list = '<ul>';\r\n            for (range in this.ranges) {\r\n                list += '<li data-range-key=\"' + range + '\">' + range + '</li>';\r\n            }\r\n            if (this.showCustomRangeLabel) {\r\n                list += '<li data-range-key=\"' + this.locale.customRangeLabel + '\">' + this.locale.customRangeLabel + '</li>';\r\n            }\r\n            list += '</ul>';\r\n            this.container.find('.ranges').prepend(list);\r\n        }\r\n\r\n        if (typeof cb === 'function') {\r\n            this.callback = cb;\r\n        }\r\n\r\n        if (!this.timePicker) {\r\n            this.startDate = this.startDate.startOf('day');\r\n            this.endDate = this.endDate.endOf('day');\r\n            this.container.find('.calendar-time').hide();\r\n        }\r\n\r\n        //can't be used together for now\r\n        if (this.timePicker && this.autoApply)\r\n            this.autoApply = false;\r\n\r\n        if (this.autoApply && typeof options.ranges !== 'object') {\r\n            this.container.find('.ranges').hide();\r\n        } else if (this.autoApply) {\r\n            this.container.find('.applyBtn, .cancelBtn').addClass('hide');\r\n        }\r\n\r\n        if (this.singleDatePicker) {\r\n            this.container.addClass('single');\r\n            this.container.find('.calendar.left').addClass('single');\r\n            this.container.find('.calendar.left').show();\r\n            this.container.find('.calendar.right').hide();\r\n            this.container.find('.daterangepicker_input input, .daterangepicker_input > i').hide();\r\n            if (this.timePicker) {\r\n                this.container.find('.ranges ul').hide();\r\n            } else {\r\n                this.container.find('.ranges').hide();\r\n            }\r\n        }\r\n\r\n        if ((typeof options.ranges === 'undefined' && !this.singleDatePicker) || this.alwaysShowCalendars) {\r\n            this.container.addClass('show-calendar');\r\n        }\r\n\r\n        this.container.addClass('opens' + this.opens);\r\n\r\n        //swap the position of the predefined ranges if opens right\r\n        if (typeof options.ranges !== 'undefined' && this.opens == 'right') {\r\n            this.container.find('.ranges').prependTo( this.container.find('.calendar.left').parent() );\r\n        }\r\n\r\n        //apply CSS classes and labels to buttons\r\n        this.container.find('.applyBtn, .cancelBtn').addClass(this.buttonClasses);\r\n        if (this.applyClass.length)\r\n            this.container.find('.applyBtn').addClass(this.applyClass);\r\n        if (this.cancelClass.length)\r\n            this.container.find('.cancelBtn').addClass(this.cancelClass);\r\n        this.container.find('.applyBtn').html(this.locale.applyLabel);\r\n        this.container.find('.cancelBtn').html(this.locale.cancelLabel);\r\n\r\n        //\r\n        // event listeners\r\n        //\r\n\r\n        this.container.find('.calendar')\r\n            .on('click.daterangepicker', '.prev', $.proxy(this.clickPrev, this))\r\n            .on('click.daterangepicker', '.next', $.proxy(this.clickNext, this))\r\n            .on('mousedown.daterangepicker', 'td.available', $.proxy(this.clickDate, this))\r\n            .on('mouseenter.daterangepicker', 'td.available', $.proxy(this.hoverDate, this))\r\n            .on('mouseleave.daterangepicker', 'td.available', $.proxy(this.updateFormInputs, this))\r\n            .on('change.daterangepicker', 'select.yearselect', $.proxy(this.monthOrYearChanged, this))\r\n            .on('change.daterangepicker', 'select.monthselect', $.proxy(this.monthOrYearChanged, this))\r\n            .on('change.daterangepicker', 'select.hourselect,select.minuteselect,select.secondselect,select.ampmselect', $.proxy(this.timeChanged, this))\r\n            .on('click.daterangepicker', '.daterangepicker_input input', $.proxy(this.showCalendars, this))\r\n            .on('focus.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsFocused, this))\r\n            .on('blur.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsBlurred, this))\r\n            .on('change.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsChanged, this));\r\n\r\n        this.container.find('.ranges')\r\n            .on('click.daterangepicker', 'button.applyBtn', $.proxy(this.clickApply, this))\r\n            .on('click.daterangepicker', 'button.cancelBtn', $.proxy(this.clickCancel, this))\r\n            .on('click.daterangepicker', 'li', $.proxy(this.clickRange, this))\r\n            .on('mouseenter.daterangepicker', 'li', $.proxy(this.hoverRange, this))\r\n            .on('mouseleave.daterangepicker', 'li', $.proxy(this.updateFormInputs, this));\r\n\r\n        if (this.element.is('input') || this.element.is('button')) {\r\n            this.element.on({\r\n                'click.daterangepicker': $.proxy(this.show, this),\r\n                'focus.daterangepicker': $.proxy(this.show, this),\r\n                'keyup.daterangepicker': $.proxy(this.elementChanged, this),\r\n                'keydown.daterangepicker': $.proxy(this.keydown, this)\r\n            });\r\n        } else {\r\n            this.element.on('click.daterangepicker', $.proxy(this.toggle, this));\r\n        }\r\n\r\n        //\r\n        // if attached to a text input, set the initial value\r\n        //\r\n\r\n        if (this.element.is('input') && !this.singleDatePicker && this.autoUpdateInput) {\r\n            this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format));\r\n            this.element.trigger('change');\r\n        } else if (this.element.is('input') && this.autoUpdateInput) {\r\n            this.element.val(this.startDate.format(this.locale.format));\r\n            this.element.trigger('change');\r\n        }\r\n\r\n    };\r\n\r\n    DateRangePicker.prototype = {\r\n\r\n        constructor: DateRangePicker,\r\n\r\n        setStartDate: function(startDate) {\r\n            if (typeof startDate === 'string')\r\n                this.startDate = moment(startDate, this.locale.format);\r\n\r\n            if (typeof startDate === 'object')\r\n                this.startDate = moment(startDate);\r\n\r\n            if (!this.timePicker)\r\n                this.startDate = this.startDate.startOf('day');\r\n\r\n            if (this.timePicker && this.timePickerIncrement)\r\n                this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\r\n\r\n            if (this.minDate && this.startDate.isBefore(this.minDate)) {\r\n                this.startDate = this.minDate;\r\n                if (this.timePicker && this.timePickerIncrement)\r\n                    this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\r\n            }\r\n\r\n            if (this.maxDate && this.startDate.isAfter(this.maxDate)) {\r\n                this.startDate = this.maxDate;\r\n                if (this.timePicker && this.timePickerIncrement)\r\n                    this.startDate.minute(Math.floor(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\r\n            }\r\n\r\n            if (!this.isShowing)\r\n                this.updateElement();\r\n\r\n            this.updateMonthsInView();\r\n        },\r\n\r\n        setEndDate: function(endDate) {\r\n            if (typeof endDate === 'string')\r\n                this.endDate = moment(endDate, this.locale.format);\r\n\r\n            if (typeof endDate === 'object')\r\n                this.endDate = moment(endDate);\r\n\r\n            if (!this.timePicker)\r\n                this.endDate = this.endDate.endOf('day');\r\n\r\n            if (this.timePicker && this.timePickerIncrement)\r\n                this.endDate.minute(Math.round(this.endDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\r\n\r\n            if (this.endDate.isBefore(this.startDate))\r\n                this.endDate = this.startDate.clone();\r\n\r\n            if (this.maxDate && this.endDate.isAfter(this.maxDate))\r\n                this.endDate = this.maxDate;\r\n\r\n            if (this.dateLimit && this.startDate.clone().add(this.dateLimit).isBefore(this.endDate))\r\n                this.endDate = this.startDate.clone().add(this.dateLimit);\r\n\r\n            this.previousRightTime = this.endDate.clone();\r\n\r\n            if (!this.isShowing)\r\n                this.updateElement();\r\n\r\n            this.updateMonthsInView();\r\n        },\r\n\r\n        isInvalidDate: function() {\r\n            return false;\r\n        },\r\n\r\n        isCustomDate: function() {\r\n            return false;\r\n        },\r\n\r\n        updateView: function() {\r\n            if (this.timePicker) {\r\n                this.renderTimePicker('left');\r\n                this.renderTimePicker('right');\r\n                if (!this.endDate) {\r\n                    this.container.find('.right .calendar-time select').attr('disabled', 'disabled').addClass('disabled');\r\n                } else {\r\n                    this.container.find('.right .calendar-time select').removeAttr('disabled').removeClass('disabled');\r\n                }\r\n            }\r\n            if (this.endDate) {\r\n                this.container.find('input[name=\"daterangepicker_end\"]').removeClass('active');\r\n                this.container.find('input[name=\"daterangepicker_start\"]').addClass('active');\r\n            } else {\r\n                this.container.find('input[name=\"daterangepicker_end\"]').addClass('active');\r\n                this.container.find('input[name=\"daterangepicker_start\"]').removeClass('active');\r\n            }\r\n            this.updateMonthsInView();\r\n            this.updateCalendars();\r\n            this.updateFormInputs();\r\n        },\r\n\r\n        updateMonthsInView: function() {\r\n            if (this.endDate) {\r\n\r\n                //if both dates are visible already, do nothing\r\n                if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month &&\r\n                    (this.startDate.format('YYYY-MM') == this.leftCalendar.month.format('YYYY-MM') || this.startDate.format('YYYY-MM') == this.rightCalendar.month.format('YYYY-MM'))\r\n                    &&\r\n                    (this.endDate.format('YYYY-MM') == this.leftCalendar.month.format('YYYY-MM') || this.endDate.format('YYYY-MM') == this.rightCalendar.month.format('YYYY-MM'))\r\n                    ) {\r\n                    return;\r\n                }\r\n\r\n                this.leftCalendar.month = this.startDate.clone().date(2);\r\n                if (!this.linkedCalendars && (this.endDate.month() != this.startDate.month() || this.endDate.year() != this.startDate.year())) {\r\n                    this.rightCalendar.month = this.endDate.clone().date(2);\r\n                } else {\r\n                    this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');\r\n                }\r\n\r\n            } else {\r\n                if (this.leftCalendar.month.format('YYYY-MM') != this.startDate.format('YYYY-MM') && this.rightCalendar.month.format('YYYY-MM') != this.startDate.format('YYYY-MM')) {\r\n                    this.leftCalendar.month = this.startDate.clone().date(2);\r\n                    this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');\r\n                }\r\n            }\r\n            if (this.maxDate && this.linkedCalendars && !this.singleDatePicker && this.rightCalendar.month > this.maxDate) {\r\n              this.rightCalendar.month = this.maxDate.clone().date(2);\r\n              this.leftCalendar.month = this.maxDate.clone().date(2).subtract(1, 'month');\r\n            }\r\n        },\r\n\r\n        updateCalendars: function() {\r\n\r\n            if (this.timePicker) {\r\n                var hour, minute, second;\r\n                if (this.endDate) {\r\n                    hour = parseInt(this.container.find('.left .hourselect').val(), 10);\r\n                    minute = parseInt(this.container.find('.left .minuteselect').val(), 10);\r\n                    second = this.timePickerSeconds ? parseInt(this.container.find('.left .secondselect').val(), 10) : 0;\r\n                    if (!this.timePicker24Hour) {\r\n                        var ampm = this.container.find('.left .ampmselect').val();\r\n                        if (ampm === 'PM' && hour < 12)\r\n                            hour += 12;\r\n                        if (ampm === 'AM' && hour === 12)\r\n                            hour = 0;\r\n                    }\r\n                } else {\r\n                    hour = parseInt(this.container.find('.right .hourselect').val(), 10);\r\n                    minute = parseInt(this.container.find('.right .minuteselect').val(), 10);\r\n                    second = this.timePickerSeconds ? parseInt(this.container.find('.right .secondselect').val(), 10) : 0;\r\n                    if (!this.timePicker24Hour) {\r\n                        var ampm = this.container.find('.right .ampmselect').val();\r\n                        if (ampm === 'PM' && hour < 12)\r\n                            hour += 12;\r\n                        if (ampm === 'AM' && hour === 12)\r\n                            hour = 0;\r\n                    }\r\n                }\r\n                this.leftCalendar.month.hour(hour).minute(minute).second(second);\r\n                this.rightCalendar.month.hour(hour).minute(minute).second(second);\r\n            }\r\n\r\n            this.renderCalendar('left');\r\n            this.renderCalendar('right');\r\n\r\n            //highlight any predefined range matching the current start and end dates\r\n            this.container.find('.ranges li').removeClass('active');\r\n            if (this.endDate == null) return;\r\n\r\n            this.calculateChosenLabel();\r\n        },\r\n\r\n        renderCalendar: function(side) {\r\n\r\n            //\r\n            // Build the matrix of dates that will populate the calendar\r\n            //\r\n\r\n            var calendar = side == 'left' ? this.leftCalendar : this.rightCalendar;\r\n            var month = calendar.month.month();\r\n            var year = calendar.month.year();\r\n            var hour = calendar.month.hour();\r\n            var minute = calendar.month.minute();\r\n            var second = calendar.month.second();\r\n            var daysInMonth = moment([year, month]).daysInMonth();\r\n            var firstDay = moment([year, month, 1]);\r\n            var lastDay = moment([year, month, daysInMonth]);\r\n            var lastMonth = moment(firstDay).subtract(1, 'month').month();\r\n            var lastYear = moment(firstDay).subtract(1, 'month').year();\r\n            var daysInLastMonth = moment([lastYear, lastMonth]).daysInMonth();\r\n            var dayOfWeek = firstDay.day();\r\n\r\n            //initialize a 6 rows x 7 columns array for the calendar\r\n            var calendar = [];\r\n            calendar.firstDay = firstDay;\r\n            calendar.lastDay = lastDay;\r\n\r\n            for (var i = 0; i < 6; i++) {\r\n                calendar[i] = [];\r\n            }\r\n\r\n            //populate the calendar with date objects\r\n            var startDay = daysInLastMonth - dayOfWeek + this.locale.firstDay + 1;\r\n            if (startDay > daysInLastMonth)\r\n                startDay -= 7;\r\n\r\n            if (dayOfWeek == this.locale.firstDay)\r\n                startDay = daysInLastMonth - 6;\r\n\r\n            var curDate = moment([lastYear, lastMonth, startDay, 12, minute, second]);\r\n\r\n            var col, row;\r\n            for (var i = 0, col = 0, row = 0; i < 42; i++, col++, curDate = moment(curDate).add(24, 'hour')) {\r\n                if (i > 0 && col % 7 === 0) {\r\n                    col = 0;\r\n                    row++;\r\n                }\r\n                calendar[row][col] = curDate.clone().hour(hour).minute(minute).second(second);\r\n                curDate.hour(12);\r\n\r\n                if (this.minDate && calendar[row][col].format('YYYY-MM-DD') == this.minDate.format('YYYY-MM-DD') && calendar[row][col].isBefore(this.minDate) && side == 'left') {\r\n                    calendar[row][col] = this.minDate.clone();\r\n                }\r\n\r\n                if (this.maxDate && calendar[row][col].format('YYYY-MM-DD') == this.maxDate.format('YYYY-MM-DD') && calendar[row][col].isAfter(this.maxDate) && side == 'right') {\r\n                    calendar[row][col] = this.maxDate.clone();\r\n                }\r\n\r\n            }\r\n\r\n            //make the calendar object available to hoverDate/clickDate\r\n            if (side == 'left') {\r\n                this.leftCalendar.calendar = calendar;\r\n            } else {\r\n                this.rightCalendar.calendar = calendar;\r\n            }\r\n\r\n            //\r\n            // Display the calendar\r\n            //\r\n\r\n            var minDate = side == 'left' ? this.minDate : this.startDate;\r\n            var maxDate = this.maxDate;\r\n            var selected = side == 'left' ? this.startDate : this.endDate;\r\n            var arrow = this.locale.direction == 'ltr' ? {left: 'chevron-left', right: 'chevron-right'} : {left: 'chevron-right', right: 'chevron-left'};\r\n\r\n            var html = '<table class=\"table-condensed\">';\r\n            html += '<thead>';\r\n            html += '<tr>';\r\n\r\n            // add empty cell for week number\r\n            if (this.showWeekNumbers || this.showISOWeekNumbers)\r\n                html += '<th></th>';\r\n\r\n            if ((!minDate || minDate.isBefore(calendar.firstDay)) && (!this.linkedCalendars || side == 'left')) {\r\n                html += '<th class=\"prev available\"><i class=\"fa fa-' + arrow.left + ' glyphicon glyphicon-' + arrow.left + '\"></i></th>';\r\n            } else {\r\n                html += '<th></th>';\r\n            }\r\n\r\n            var dateHtml = this.locale.monthNames[calendar[1][1].month()] + calendar[1][1].format(\" YYYY\");\r\n\r\n            if (this.showDropdowns) {\r\n                var currentMonth = calendar[1][1].month();\r\n                var currentYear = calendar[1][1].year();\r\n                var maxYear = (maxDate && maxDate.year()) || (currentYear + 5);\r\n                var minYear = (minDate && minDate.year()) || (currentYear - 50);\r\n                var inMinYear = currentYear == minYear;\r\n                var inMaxYear = currentYear == maxYear;\r\n\r\n                var monthHtml = '<select class=\"monthselect\">';\r\n                for (var m = 0; m < 12; m++) {\r\n                    if ((!inMinYear || m >= minDate.month()) && (!inMaxYear || m <= maxDate.month())) {\r\n                        monthHtml += \"<option value='\" + m + \"'\" +\r\n                            (m === currentMonth ? \" selected='selected'\" : \"\") +\r\n                            \">\" + this.locale.monthNames[m] + \"</option>\";\r\n                    } else {\r\n                        monthHtml += \"<option value='\" + m + \"'\" +\r\n                            (m === currentMonth ? \" selected='selected'\" : \"\") +\r\n                            \" disabled='disabled'>\" + this.locale.monthNames[m] + \"</option>\";\r\n                    }\r\n                }\r\n                monthHtml += \"</select>\";\r\n\r\n                var yearHtml = '<select class=\"yearselect\">';\r\n                for (var y = minYear; y <= maxYear; y++) {\r\n                    yearHtml += '<option value=\"' + y + '\"' +\r\n                        (y === currentYear ? ' selected=\"selected\"' : '') +\r\n                        '>' + y + '</option>';\r\n                }\r\n                yearHtml += '</select>';\r\n\r\n                dateHtml = monthHtml + yearHtml;\r\n            }\r\n\r\n            html += '<th colspan=\"5\" class=\"month\">' + dateHtml + '</th>';\r\n            if ((!maxDate || maxDate.isAfter(calendar.lastDay)) && (!this.linkedCalendars || side == 'right' || this.singleDatePicker)) {\r\n                html += '<th class=\"next available\"><i class=\"fa fa-' + arrow.right + ' glyphicon glyphicon-' + arrow.right + '\"></i></th>';\r\n            } else {\r\n                html += '<th></th>';\r\n            }\r\n\r\n            html += '</tr>';\r\n            html += '<tr>';\r\n\r\n            // add week number label\r\n            if (this.showWeekNumbers || this.showISOWeekNumbers)\r\n                html += '<th class=\"week\">' + this.locale.weekLabel + '</th>';\r\n\r\n            $.each(this.locale.daysOfWeek, function(index, dayOfWeek) {\r\n                html += '<th>' + dayOfWeek + '</th>';\r\n            });\r\n\r\n            html += '</tr>';\r\n            html += '</thead>';\r\n            html += '<tbody>';\r\n\r\n            //adjust maxDate to reflect the dateLimit setting in order to\r\n            //grey out end dates beyond the dateLimit\r\n            if (this.endDate == null && this.dateLimit) {\r\n                var maxLimit = this.startDate.clone().add(this.dateLimit).endOf('day');\r\n                if (!maxDate || maxLimit.isBefore(maxDate)) {\r\n                    maxDate = maxLimit;\r\n                }\r\n            }\r\n\r\n            for (var row = 0; row < 6; row++) {\r\n                html += '<tr>';\r\n\r\n                // add week number\r\n                if (this.showWeekNumbers)\r\n                    html += '<td class=\"week\">' + calendar[row][0].week() + '</td>';\r\n                else if (this.showISOWeekNumbers)\r\n                    html += '<td class=\"week\">' + calendar[row][0].isoWeek() + '</td>';\r\n\r\n                for (var col = 0; col < 7; col++) {\r\n\r\n                    var classes = [];\r\n\r\n                    //highlight today's date\r\n                    if (calendar[row][col].isSame(new Date(), \"day\"))\r\n                        classes.push('today');\r\n\r\n                    //highlight weekends\r\n                    if (calendar[row][col].isoWeekday() > 5)\r\n                        classes.push('weekend');\r\n\r\n                    //grey out the dates in other months displayed at beginning and end of this calendar\r\n                    if (calendar[row][col].month() != calendar[1][1].month())\r\n                        classes.push('off');\r\n\r\n                    //don't allow selection of dates before the minimum date\r\n                    if (this.minDate && calendar[row][col].isBefore(this.minDate, 'day'))\r\n                        classes.push('off', 'disabled');\r\n\r\n                    //don't allow selection of dates after the maximum date\r\n                    if (maxDate && calendar[row][col].isAfter(maxDate, 'day'))\r\n                        classes.push('off', 'disabled');\r\n\r\n                    //don't allow selection of date if a custom function decides it's invalid\r\n                    if (this.isInvalidDate(calendar[row][col]))\r\n                        classes.push('off', 'disabled');\r\n\r\n                    //highlight the currently selected start date\r\n                    if (calendar[row][col].format('YYYY-MM-DD') == this.startDate.format('YYYY-MM-DD'))\r\n                        classes.push('active', 'start-date');\r\n\r\n                    //highlight the currently selected end date\r\n                    if (this.endDate != null && calendar[row][col].format('YYYY-MM-DD') == this.endDate.format('YYYY-MM-DD'))\r\n                        classes.push('active', 'end-date');\r\n\r\n                    //highlight dates in-between the selected dates\r\n                    if (this.endDate != null && calendar[row][col] > this.startDate && calendar[row][col] < this.endDate)\r\n                        classes.push('in-range');\r\n\r\n                    //apply custom classes for this date\r\n                    var isCustom = this.isCustomDate(calendar[row][col]);\r\n                    if (isCustom !== false) {\r\n                        if (typeof isCustom === 'string')\r\n                            classes.push(isCustom);\r\n                        else\r\n                            Array.prototype.push.apply(classes, isCustom);\r\n                    }\r\n\r\n                    var cname = '', disabled = false;\r\n                    for (var i = 0; i < classes.length; i++) {\r\n                        cname += classes[i] + ' ';\r\n                        if (classes[i] == 'disabled')\r\n                            disabled = true;\r\n                    }\r\n                    if (!disabled)\r\n                        cname += 'available';\r\n\r\n                    html += '<td class=\"' + cname.replace(/^\\s+|\\s+$/g, '') + '\" data-title=\"' + 'r' + row + 'c' + col + '\">' + calendar[row][col].date() + '</td>';\r\n\r\n                }\r\n                html += '</tr>';\r\n            }\r\n\r\n            html += '</tbody>';\r\n            html += '</table>';\r\n\r\n            this.container.find('.calendar.' + side + ' .calendar-table').html(html);\r\n\r\n        },\r\n\r\n        renderTimePicker: function(side) {\r\n\r\n            // Don't bother updating the time picker if it's currently disabled\r\n            // because an end date hasn't been clicked yet\r\n            if (side == 'right' && !this.endDate) return;\r\n\r\n            var html, selected, minDate, maxDate = this.maxDate;\r\n\r\n            if (this.dateLimit && (!this.maxDate || this.startDate.clone().add(this.dateLimit).isAfter(this.maxDate)))\r\n                maxDate = this.startDate.clone().add(this.dateLimit);\r\n\r\n            if (side == 'left') {\r\n                selected = this.startDate.clone();\r\n                minDate = this.minDate;\r\n            } else if (side == 'right') {\r\n                selected = this.endDate.clone();\r\n                minDate = this.startDate;\r\n\r\n                //Preserve the time already selected\r\n                var timeSelector = this.container.find('.calendar.right .calendar-time div');\r\n                if (!this.endDate && timeSelector.html() != '') {\r\n\r\n                    selected.hour(timeSelector.find('.hourselect option:selected').val() || selected.hour());\r\n                    selected.minute(timeSelector.find('.minuteselect option:selected').val() || selected.minute());\r\n                    selected.second(timeSelector.find('.secondselect option:selected').val() || selected.second());\r\n\r\n                    if (!this.timePicker24Hour) {\r\n                        var ampm = timeSelector.find('.ampmselect option:selected').val();\r\n                        if (ampm === 'PM' && selected.hour() < 12)\r\n                            selected.hour(selected.hour() + 12);\r\n                        if (ampm === 'AM' && selected.hour() === 12)\r\n                            selected.hour(0);\r\n                    }\r\n\r\n                }\r\n\r\n                if (selected.isBefore(this.startDate))\r\n                    selected = this.startDate.clone();\r\n\r\n                if (maxDate && selected.isAfter(maxDate))\r\n                    selected = maxDate.clone();\r\n\r\n            }\r\n\r\n            //\r\n            // hours\r\n            //\r\n\r\n            html = '<select class=\"hourselect\">';\r\n\r\n            var start = this.timePicker24Hour ? 0 : 1;\r\n            var end = this.timePicker24Hour ? 23 : 12;\r\n\r\n            for (var i = start; i <= end; i++) {\r\n                var i_in_24 = i;\r\n                if (!this.timePicker24Hour)\r\n                    i_in_24 = selected.hour() >= 12 ? (i == 12 ? 12 : i + 12) : (i == 12 ? 0 : i);\r\n\r\n                var time = selected.clone().hour(i_in_24);\r\n                var disabled = false;\r\n                if (minDate && time.minute(59).isBefore(minDate))\r\n                    disabled = true;\r\n                if (maxDate && time.minute(0).isAfter(maxDate))\r\n                    disabled = true;\r\n\r\n                if (i_in_24 == selected.hour() && !disabled) {\r\n                    html += '<option value=\"' + i + '\" selected=\"selected\">' + i + '</option>';\r\n                } else if (disabled) {\r\n                    html += '<option value=\"' + i + '\" disabled=\"disabled\" class=\"disabled\">' + i + '</option>';\r\n                } else {\r\n                    html += '<option value=\"' + i + '\">' + i + '</option>';\r\n                }\r\n            }\r\n\r\n            html += '</select> ';\r\n\r\n            //\r\n            // minutes\r\n            //\r\n\r\n            html += ': <select class=\"minuteselect\">';\r\n\r\n            for (var i = 0; i < 60; i += this.timePickerIncrement) {\r\n                var padded = i < 10 ? '0' + i : i;\r\n                var time = selected.clone().minute(i);\r\n\r\n                var disabled = false;\r\n                if (minDate && time.second(59).isBefore(minDate))\r\n                    disabled = true;\r\n                if (maxDate && time.second(0).isAfter(maxDate))\r\n                    disabled = true;\r\n\r\n                if (selected.minute() == i && !disabled) {\r\n                    html += '<option value=\"' + i + '\" selected=\"selected\">' + padded + '</option>';\r\n                } else if (disabled) {\r\n                    html += '<option value=\"' + i + '\" disabled=\"disabled\" class=\"disabled\">' + padded + '</option>';\r\n                } else {\r\n                    html += '<option value=\"' + i + '\">' + padded + '</option>';\r\n                }\r\n            }\r\n\r\n            html += '</select> ';\r\n\r\n            //\r\n            // seconds\r\n            //\r\n\r\n            if (this.timePickerSeconds) {\r\n                html += ': <select class=\"secondselect\">';\r\n\r\n                for (var i = 0; i < 60; i++) {\r\n                    var padded = i < 10 ? '0' + i : i;\r\n                    var time = selected.clone().second(i);\r\n\r\n                    var disabled = false;\r\n                    if (minDate && time.isBefore(minDate))\r\n                        disabled = true;\r\n                    if (maxDate && time.isAfter(maxDate))\r\n                        disabled = true;\r\n\r\n                    if (selected.second() == i && !disabled) {\r\n                        html += '<option value=\"' + i + '\" selected=\"selected\">' + padded + '</option>';\r\n                    } else if (disabled) {\r\n                        html += '<option value=\"' + i + '\" disabled=\"disabled\" class=\"disabled\">' + padded + '</option>';\r\n                    } else {\r\n                        html += '<option value=\"' + i + '\">' + padded + '</option>';\r\n                    }\r\n                }\r\n\r\n                html += '</select> ';\r\n            }\r\n\r\n            //\r\n            // AM/PM\r\n            //\r\n\r\n            if (!this.timePicker24Hour) {\r\n                html += '<select class=\"ampmselect\">';\r\n\r\n                var am_html = '';\r\n                var pm_html = '';\r\n\r\n                if (minDate && selected.clone().hour(12).minute(0).second(0).isBefore(minDate))\r\n                    am_html = ' disabled=\"disabled\" class=\"disabled\"';\r\n\r\n                if (maxDate && selected.clone().hour(0).minute(0).second(0).isAfter(maxDate))\r\n                    pm_html = ' disabled=\"disabled\" class=\"disabled\"';\r\n\r\n                if (selected.hour() >= 12) {\r\n                    html += '<option value=\"AM\"' + am_html + '>AM</option><option value=\"PM\" selected=\"selected\"' + pm_html + '>PM</option>';\r\n                } else {\r\n                    html += '<option value=\"AM\" selected=\"selected\"' + am_html + '>AM</option><option value=\"PM\"' + pm_html + '>PM</option>';\r\n                }\r\n\r\n                html += '</select>';\r\n            }\r\n\r\n            this.container.find('.calendar.' + side + ' .calendar-time div').html(html);\r\n\r\n        },\r\n\r\n        updateFormInputs: function() {\r\n\r\n            //ignore mouse movements while an above-calendar text input has focus\r\n            if (this.container.find('input[name=daterangepicker_start]').is(\":focus\") || this.container.find('input[name=daterangepicker_end]').is(\":focus\"))\r\n                return;\r\n\r\n            this.container.find('input[name=daterangepicker_start]').val(this.startDate.format(this.locale.format));\r\n            if (this.endDate)\r\n                this.container.find('input[name=daterangepicker_end]').val(this.endDate.format(this.locale.format));\r\n\r\n            if (this.singleDatePicker || (this.endDate && (this.startDate.isBefore(this.endDate) || this.startDate.isSame(this.endDate)))) {\r\n                this.container.find('button.applyBtn').removeAttr('disabled');\r\n            } else {\r\n                this.container.find('button.applyBtn').attr('disabled', 'disabled');\r\n            }\r\n\r\n        },\r\n\r\n        move: function() {\r\n            var parentOffset = { top: 0, left: 0 },\r\n                containerTop;\r\n            var parentRightEdge = $(window).width();\r\n            if (!this.parentEl.is('body')) {\r\n                parentOffset = {\r\n                    top: this.parentEl.offset().top - this.parentEl.scrollTop(),\r\n                    left: this.parentEl.offset().left - this.parentEl.scrollLeft()\r\n                };\r\n                parentRightEdge = this.parentEl[0].clientWidth + this.parentEl.offset().left;\r\n            }\r\n\r\n            if (this.drops == 'up')\r\n                containerTop = this.element.offset().top - this.container.outerHeight() - parentOffset.top;\r\n            else\r\n                containerTop = this.element.offset().top + this.element.outerHeight() - parentOffset.top;\r\n            this.container[this.drops == 'up' ? 'addClass' : 'removeClass']('dropup');\r\n\r\n            if (this.opens == 'left') {\r\n                this.container.css({\r\n                    top: containerTop,\r\n                    right: parentRightEdge - this.element.offset().left - this.element.outerWidth(),\r\n                    left: 'auto'\r\n                });\r\n                if (this.container.offset().left < 0) {\r\n                    this.container.css({\r\n                        right: 'auto',\r\n                        left: 9\r\n                    });\r\n                }\r\n            } else if (this.opens == 'center') {\r\n                this.container.css({\r\n                    top: containerTop,\r\n                    left: this.element.offset().left - parentOffset.left + this.element.outerWidth() / 2\r\n                            - this.container.outerWidth() / 2,\r\n                    right: 'auto'\r\n                });\r\n                if (this.container.offset().left < 0) {\r\n                    this.container.css({\r\n                        right: 'auto',\r\n                        left: 9\r\n                    });\r\n                }\r\n            } else {\r\n                this.container.css({\r\n                    top: containerTop,\r\n                    left: this.element.offset().left - parentOffset.left,\r\n                    right: 'auto'\r\n                });\r\n                if (this.container.offset().left + this.container.outerWidth() > $(window).width()) {\r\n                    this.container.css({\r\n                        left: 'auto',\r\n                        right: 0\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        show: function(e) {\r\n            if (this.isShowing) return;\r\n\r\n            // Create a click proxy that is private to this instance of datepicker, for unbinding\r\n            this._outsideClickProxy = $.proxy(function(e) { this.outsideClick(e); }, this);\r\n\r\n            // Bind global datepicker mousedown for hiding and\r\n            $(document)\r\n              .on('mousedown.daterangepicker', this._outsideClickProxy)\r\n              // also support mobile devices\r\n              .on('touchend.daterangepicker', this._outsideClickProxy)\r\n              // also explicitly play nice with Bootstrap dropdowns, which stopPropagation when clicking them\r\n              .on('click.daterangepicker', '[data-toggle=dropdown]', this._outsideClickProxy)\r\n              // and also close when focus changes to outside the picker (eg. tabbing between controls)\r\n              .on('focusin.daterangepicker', this._outsideClickProxy);\r\n\r\n            // Reposition the picker if the window is resized while it's open\r\n            $(window).on('resize.daterangepicker', $.proxy(function(e) { this.move(e); }, this));\r\n\r\n            this.oldStartDate = this.startDate.clone();\r\n            this.oldEndDate = this.endDate.clone();\r\n            this.previousRightTime = this.endDate.clone();\r\n\r\n            this.updateView();\r\n            this.container.show();\r\n            this.move();\r\n            this.element.trigger('show.daterangepicker', this);\r\n            this.isShowing = true;\r\n        },\r\n\r\n        hide: function(e) {\r\n            if (!this.isShowing) return;\r\n\r\n            //incomplete date selection, revert to last values\r\n            if (!this.endDate) {\r\n                this.startDate = this.oldStartDate.clone();\r\n                this.endDate = this.oldEndDate.clone();\r\n            }\r\n\r\n            //if a new date range was selected, invoke the user callback function\r\n            if (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate))\r\n                this.callback(this.startDate, this.endDate, this.chosenLabel);\r\n\r\n            //if picker is attached to a text input, update it\r\n            this.updateElement();\r\n\r\n            $(document).off('.daterangepicker');\r\n            $(window).off('.daterangepicker');\r\n            this.container.hide();\r\n            this.element.trigger('hide.daterangepicker', this);\r\n            this.isShowing = false;\r\n        },\r\n\r\n        toggle: function(e) {\r\n            if (this.isShowing) {\r\n                this.hide();\r\n            } else {\r\n                this.show();\r\n            }\r\n        },\r\n\r\n        outsideClick: function(e) {\r\n            var target = $(e.target);\r\n            // if the page is clicked anywhere except within the daterangerpicker/button\r\n            // itself then call this.hide()\r\n            if (\r\n                // ie modal dialog fix\r\n                e.type == \"focusin\" ||\r\n                target.closest(this.element).length ||\r\n                target.closest(this.container).length ||\r\n                target.closest('.calendar-table').length\r\n                ) return;\r\n            this.hide();\r\n            this.element.trigger('outsideClick.daterangepicker', this);\r\n        },\r\n\r\n        showCalendars: function() {\r\n            this.container.addClass('show-calendar');\r\n            this.move();\r\n            this.element.trigger('showCalendar.daterangepicker', this);\r\n        },\r\n\r\n        hideCalendars: function() {\r\n            this.container.removeClass('show-calendar');\r\n            this.element.trigger('hideCalendar.daterangepicker', this);\r\n        },\r\n\r\n        hoverRange: function(e) {\r\n\r\n            //ignore mouse movements while an above-calendar text input has focus\r\n            if (this.container.find('input[name=daterangepicker_start]').is(\":focus\") || this.container.find('input[name=daterangepicker_end]').is(\":focus\"))\r\n                return;\r\n\r\n            var label = e.target.getAttribute('data-range-key');\r\n\r\n            if (label == this.locale.customRangeLabel) {\r\n                this.updateView();\r\n            } else {\r\n                var dates = this.ranges[label];\r\n                this.container.find('input[name=daterangepicker_start]').val(dates[0].format(this.locale.format));\r\n                this.container.find('input[name=daterangepicker_end]').val(dates[1].format(this.locale.format));\r\n            }\r\n\r\n        },\r\n\r\n        clickRange: function(e) {\r\n            var label = e.target.getAttribute('data-range-key');\r\n            this.chosenLabel = label;\r\n            if (label == this.locale.customRangeLabel) {\r\n                this.showCalendars();\r\n            } else {\r\n                var dates = this.ranges[label];\r\n                this.startDate = dates[0];\r\n                this.endDate = dates[1];\r\n\r\n                if (!this.timePicker) {\r\n                    this.startDate.startOf('day');\r\n                    this.endDate.endOf('day');\r\n                }\r\n\r\n                if (!this.alwaysShowCalendars)\r\n                    this.hideCalendars();\r\n                this.clickApply();\r\n            }\r\n        },\r\n\r\n        clickPrev: function(e) {\r\n            var cal = $(e.target).parents('.calendar');\r\n            if (cal.hasClass('left')) {\r\n                this.leftCalendar.month.subtract(1, 'month');\r\n                if (this.linkedCalendars)\r\n                    this.rightCalendar.month.subtract(1, 'month');\r\n            } else {\r\n                this.rightCalendar.month.subtract(1, 'month');\r\n            }\r\n            this.updateCalendars();\r\n        },\r\n\r\n        clickNext: function(e) {\r\n            var cal = $(e.target).parents('.calendar');\r\n            if (cal.hasClass('left')) {\r\n                this.leftCalendar.month.add(1, 'month');\r\n            } else {\r\n                this.rightCalendar.month.add(1, 'month');\r\n                if (this.linkedCalendars)\r\n                    this.leftCalendar.month.add(1, 'month');\r\n            }\r\n            this.updateCalendars();\r\n        },\r\n\r\n        hoverDate: function(e) {\r\n\r\n            //ignore mouse movements while an above-calendar text input has focus\r\n            //if (this.container.find('input[name=daterangepicker_start]').is(\":focus\") || this.container.find('input[name=daterangepicker_end]').is(\":focus\"))\r\n            //    return;\r\n\r\n            //ignore dates that can't be selected\r\n            if (!$(e.target).hasClass('available')) return;\r\n\r\n            //have the text inputs above calendars reflect the date being hovered over\r\n            var title = $(e.target).attr('data-title');\r\n            var row = title.substr(1, 1);\r\n            var col = title.substr(3, 1);\r\n            var cal = $(e.target).parents('.calendar');\r\n            var date = cal.hasClass('left') ? this.leftCalendar.calendar[row][col] : this.rightCalendar.calendar[row][col];\r\n\r\n            if (this.endDate && !this.container.find('input[name=daterangepicker_start]').is(\":focus\")) {\r\n                this.container.find('input[name=daterangepicker_start]').val(date.format(this.locale.format));\r\n            } else if (!this.endDate && !this.container.find('input[name=daterangepicker_end]').is(\":focus\")) {\r\n                this.container.find('input[name=daterangepicker_end]').val(date.format(this.locale.format));\r\n            }\r\n\r\n            //highlight the dates between the start date and the date being hovered as a potential end date\r\n            var leftCalendar = this.leftCalendar;\r\n            var rightCalendar = this.rightCalendar;\r\n            var startDate = this.startDate;\r\n            if (!this.endDate) {\r\n                this.container.find('.calendar td').each(function(index, el) {\r\n\r\n                    //skip week numbers, only look at dates\r\n                    if ($(el).hasClass('week')) return;\r\n\r\n                    var title = $(el).attr('data-title');\r\n                    var row = title.substr(1, 1);\r\n                    var col = title.substr(3, 1);\r\n                    var cal = $(el).parents('.calendar');\r\n                    var dt = cal.hasClass('left') ? leftCalendar.calendar[row][col] : rightCalendar.calendar[row][col];\r\n\r\n                    if ((dt.isAfter(startDate) && dt.isBefore(date)) || dt.isSame(date, 'day')) {\r\n                        $(el).addClass('in-range');\r\n                    } else {\r\n                        $(el).removeClass('in-range');\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        },\r\n\r\n        clickDate: function(e) {\r\n\r\n            if (!$(e.target).hasClass('available')) return;\r\n\r\n            var title = $(e.target).attr('data-title');\r\n            var row = title.substr(1, 1);\r\n            var col = title.substr(3, 1);\r\n            var cal = $(e.target).parents('.calendar');\r\n            var date = cal.hasClass('left') ? this.leftCalendar.calendar[row][col] : this.rightCalendar.calendar[row][col];\r\n\r\n            //\r\n            // this function needs to do a few things:\r\n            // * alternate between selecting a start and end date for the range,\r\n            // * if the time picker is enabled, apply the hour/minute/second from the select boxes to the clicked date\r\n            // * if autoapply is enabled, and an end date was chosen, apply the selection\r\n            // * if single date picker mode, and time picker isn't enabled, apply the selection immediately\r\n            // * if one of the inputs above the calendars was focused, cancel that manual input\r\n            //\r\n\r\n            if (this.endDate || date.isBefore(this.startDate, 'day')) { //picking start\r\n                if (this.timePicker) {\r\n                    var hour = parseInt(this.container.find('.left .hourselect').val(), 10);\r\n                    if (!this.timePicker24Hour) {\r\n                        var ampm = this.container.find('.left .ampmselect').val();\r\n                        if (ampm === 'PM' && hour < 12)\r\n                            hour += 12;\r\n                        if (ampm === 'AM' && hour === 12)\r\n                            hour = 0;\r\n                    }\r\n                    var minute = parseInt(this.container.find('.left .minuteselect').val(), 10);\r\n                    var second = this.timePickerSeconds ? parseInt(this.container.find('.left .secondselect').val(), 10) : 0;\r\n                    date = date.clone().hour(hour).minute(minute).second(second);\r\n                }\r\n                this.endDate = null;\r\n                this.setStartDate(date.clone());\r\n            } else if (!this.endDate && date.isBefore(this.startDate)) {\r\n                //special case: clicking the same date for start/end,\r\n                //but the time of the end date is before the start date\r\n                this.setEndDate(this.startDate.clone());\r\n            } else { // picking end\r\n                if (this.timePicker) {\r\n                    var hour = parseInt(this.container.find('.right .hourselect').val(), 10);\r\n                    if (!this.timePicker24Hour) {\r\n                        var ampm = this.container.find('.right .ampmselect').val();\r\n                        if (ampm === 'PM' && hour < 12)\r\n                            hour += 12;\r\n                        if (ampm === 'AM' && hour === 12)\r\n                            hour = 0;\r\n                    }\r\n                    var minute = parseInt(this.container.find('.right .minuteselect').val(), 10);\r\n                    var second = this.timePickerSeconds ? parseInt(this.container.find('.right .secondselect').val(), 10) : 0;\r\n                    date = date.clone().hour(hour).minute(minute).second(second);\r\n                }\r\n                this.setEndDate(date.clone());\r\n                if (this.autoApply) {\r\n                  this.calculateChosenLabel();\r\n                  this.clickApply();\r\n                }\r\n            }\r\n\r\n            if (this.singleDatePicker) {\r\n                this.setEndDate(this.startDate);\r\n                if (!this.timePicker)\r\n                    this.clickApply();\r\n            }\r\n\r\n            this.updateView();\r\n\r\n            //This is to cancel the blur event handler if the mouse was in one of the inputs\r\n            e.stopPropagation();\r\n\r\n        },\r\n\r\n        calculateChosenLabel: function() {\r\n          var customRange = true;\r\n          var i = 0;\r\n          for (var range in this.ranges) {\r\n              if (this.timePicker) {\r\n                  if (this.startDate.isSame(this.ranges[range][0]) && this.endDate.isSame(this.ranges[range][1])) {\r\n                      customRange = false;\r\n                      this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')').addClass('active').html();\r\n                      break;\r\n                  }\r\n              } else {\r\n                  //ignore times when comparing dates if time picker is not enabled\r\n                  if (this.startDate.format('YYYY-MM-DD') == this.ranges[range][0].format('YYYY-MM-DD') && this.endDate.format('YYYY-MM-DD') == this.ranges[range][1].format('YYYY-MM-DD')) {\r\n                      customRange = false;\r\n                      this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')').addClass('active').html();\r\n                      break;\r\n                  }\r\n              }\r\n              i++;\r\n          }\r\n          if (customRange && this.showCustomRangeLabel) {\r\n              this.chosenLabel = this.container.find('.ranges li:last').addClass('active').html();\r\n              this.showCalendars();\r\n          }\r\n        },\r\n\r\n        clickApply: function(e) {\r\n            this.hide();\r\n            this.element.trigger('apply.daterangepicker', this);\r\n        },\r\n\r\n        clickCancel: function(e) {\r\n            this.startDate = this.oldStartDate;\r\n            this.endDate = this.oldEndDate;\r\n            this.hide();\r\n            this.element.trigger('cancel.daterangepicker', this);\r\n        },\r\n\r\n        monthOrYearChanged: function(e) {\r\n            var isLeft = $(e.target).closest('.calendar').hasClass('left'),\r\n                leftOrRight = isLeft ? 'left' : 'right',\r\n                cal = this.container.find('.calendar.'+leftOrRight);\r\n\r\n            // Month must be Number for new moment versions\r\n            var month = parseInt(cal.find('.monthselect').val(), 10);\r\n            var year = cal.find('.yearselect').val();\r\n\r\n            if (!isLeft) {\r\n                if (year < this.startDate.year() || (year == this.startDate.year() && month < this.startDate.month())) {\r\n                    month = this.startDate.month();\r\n                    year = this.startDate.year();\r\n                }\r\n            }\r\n\r\n            if (this.minDate) {\r\n                if (year < this.minDate.year() || (year == this.minDate.year() && month < this.minDate.month())) {\r\n                    month = this.minDate.month();\r\n                    year = this.minDate.year();\r\n                }\r\n            }\r\n\r\n            if (this.maxDate) {\r\n                if (year > this.maxDate.year() || (year == this.maxDate.year() && month > this.maxDate.month())) {\r\n                    month = this.maxDate.month();\r\n                    year = this.maxDate.year();\r\n                }\r\n            }\r\n\r\n            if (isLeft) {\r\n                this.leftCalendar.month.month(month).year(year);\r\n                if (this.linkedCalendars)\r\n                    this.rightCalendar.month = this.leftCalendar.month.clone().add(1, 'month');\r\n            } else {\r\n                this.rightCalendar.month.month(month).year(year);\r\n                if (this.linkedCalendars)\r\n                    this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, 'month');\r\n            }\r\n            this.updateCalendars();\r\n        },\r\n\r\n        timeChanged: function(e) {\r\n\r\n            var cal = $(e.target).closest('.calendar'),\r\n                isLeft = cal.hasClass('left');\r\n\r\n            var hour = parseInt(cal.find('.hourselect').val(), 10);\r\n            var minute = parseInt(cal.find('.minuteselect').val(), 10);\r\n            var second = this.timePickerSeconds ? parseInt(cal.find('.secondselect').val(), 10) : 0;\r\n\r\n            if (!this.timePicker24Hour) {\r\n                var ampm = cal.find('.ampmselect').val();\r\n                if (ampm === 'PM' && hour < 12)\r\n                    hour += 12;\r\n                if (ampm === 'AM' && hour === 12)\r\n                    hour = 0;\r\n            }\r\n\r\n            if (isLeft) {\r\n                var start = this.startDate.clone();\r\n                start.hour(hour);\r\n                start.minute(minute);\r\n                start.second(second);\r\n                this.setStartDate(start);\r\n                if (this.singleDatePicker) {\r\n                    this.endDate = this.startDate.clone();\r\n                } else if (this.endDate && this.endDate.format('YYYY-MM-DD') == start.format('YYYY-MM-DD') && this.endDate.isBefore(start)) {\r\n                    this.setEndDate(start.clone());\r\n                }\r\n            } else if (this.endDate) {\r\n                var end = this.endDate.clone();\r\n                end.hour(hour);\r\n                end.minute(minute);\r\n                end.second(second);\r\n                this.setEndDate(end);\r\n            }\r\n\r\n            //update the calendars so all clickable dates reflect the new time component\r\n            this.updateCalendars();\r\n\r\n            //update the form inputs above the calendars with the new time\r\n            this.updateFormInputs();\r\n\r\n            //re-render the time pickers because changing one selection can affect what's enabled in another\r\n            this.renderTimePicker('left');\r\n            this.renderTimePicker('right');\r\n\r\n        },\r\n\r\n        formInputsChanged: function(e) {\r\n            var isRight = $(e.target).closest('.calendar').hasClass('right');\r\n            var start = moment(this.container.find('input[name=\"daterangepicker_start\"]').val(), this.locale.format);\r\n            var end = moment(this.container.find('input[name=\"daterangepicker_end\"]').val(), this.locale.format);\r\n\r\n            if (start.isValid() && end.isValid()) {\r\n\r\n                if (isRight && end.isBefore(start))\r\n                    start = end.clone();\r\n\r\n                this.setStartDate(start);\r\n                this.setEndDate(end);\r\n\r\n                if (isRight) {\r\n                    this.container.find('input[name=\"daterangepicker_start\"]').val(this.startDate.format(this.locale.format));\r\n                } else {\r\n                    this.container.find('input[name=\"daterangepicker_end\"]').val(this.endDate.format(this.locale.format));\r\n                }\r\n\r\n            }\r\n\r\n            this.updateView();\r\n        },\r\n\r\n        formInputsFocused: function(e) {\r\n\r\n            // Highlight the focused input\r\n            this.container.find('input[name=\"daterangepicker_start\"], input[name=\"daterangepicker_end\"]').removeClass('active');\r\n            $(e.target).addClass('active');\r\n\r\n            // Set the state such that if the user goes back to using a mouse, \r\n            // the calendars are aware we're selecting the end of the range, not\r\n            // the start. This allows someone to edit the end of a date range without\r\n            // re-selecting the beginning, by clicking on the end date input then\r\n            // using the calendar.\r\n            var isRight = $(e.target).closest('.calendar').hasClass('right');\r\n            if (isRight) {\r\n                this.endDate = null;\r\n                this.setStartDate(this.startDate.clone());\r\n                this.updateView();\r\n            }\r\n\r\n        },\r\n\r\n        formInputsBlurred: function(e) {\r\n\r\n            // this function has one purpose right now: if you tab from the first\r\n            // text input to the second in the UI, the endDate is nulled so that\r\n            // you can click another, but if you tab out without clicking anything\r\n            // or changing the input value, the old endDate should be retained\r\n\r\n            if (!this.endDate) {\r\n                var val = this.container.find('input[name=\"daterangepicker_end\"]').val();\r\n                var end = moment(val, this.locale.format);\r\n                if (end.isValid()) {\r\n                    this.setEndDate(end);\r\n                    this.updateView();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        elementChanged: function() {\r\n            if (!this.element.is('input')) return;\r\n            if (!this.element.val().length) return;\r\n            if (this.element.val().length < this.locale.format.length) return;\r\n\r\n            var dateString = this.element.val().split(this.locale.separator),\r\n                start = null,\r\n                end = null;\r\n\r\n            if (dateString.length === 2) {\r\n                start = moment(dateString[0], this.locale.format);\r\n                end = moment(dateString[1], this.locale.format);\r\n            }\r\n\r\n            if (this.singleDatePicker || start === null || end === null) {\r\n                start = moment(this.element.val(), this.locale.format);\r\n                end = start;\r\n            }\r\n\r\n            if (!start.isValid() || !end.isValid()) return;\r\n\r\n            this.setStartDate(start);\r\n            this.setEndDate(end);\r\n            this.updateView();\r\n        },\r\n\r\n        keydown: function(e) {\r\n            //hide on tab or enter\r\n            if ((e.keyCode === 9) || (e.keyCode === 13)) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        updateElement: function() {\r\n            if (this.element.is('input') && !this.singleDatePicker && this.autoUpdateInput) {\r\n                this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format));\r\n                this.element.trigger('change');\r\n            } else if (this.element.is('input') && this.autoUpdateInput) {\r\n                this.element.val(this.startDate.format(this.locale.format));\r\n                this.element.trigger('change');\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            this.container.remove();\r\n            this.element.off('.daterangepicker');\r\n            this.element.removeData();\r\n        }\r\n\r\n    };\r\n\r\n    $.fn.daterangepicker = function(options, callback) {\r\n        this.each(function() {\r\n            var el = $(this);\r\n            if (el.data('daterangepicker'))\r\n                el.data('daterangepicker').remove();\r\n            el.data('daterangepicker', new DateRangePicker(el, options, callback));\r\n        });\r\n        return this;\r\n    };\r\n\r\n    return DateRangePicker;\r\n\r\n}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bootstrap-daterangepicker/daterangepicker.js\n// module id = 1394\n// module chunks = 1","\"use strict\";\nvar core_1 = require('@angular/core');\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets') || changes.hasOwnProperty('labels')) {\n                this.chart.data.datasets = this.getDatasets();\n                this.chart.data.labels = this.labels;\n                this.chart.update();\n            }\n            else {\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        if (typeof Chart === 'undefined') {\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n        }\n        return new Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error,\\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    BaseChartDirective.defaultColors = [\n        [255, 99, 132],\n        [54, 162, 235],\n        [255, 206, 86],\n        [231, 233, 237],\n        [75, 192, 192],\n        [151, 187, 205],\n        [220, 220, 220],\n        [247, 70, 74],\n        [70, 191, 189],\n        [253, 180, 92],\n        [148, 159, 177],\n        [77, 83, 96]\n    ];\n    BaseChartDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]', exportAs: 'base-chart' },] },\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = [\n        { type: core_1.ElementRef, },\n    ];\n    BaseChartDirective.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'datasets': [{ type: core_1.Input },],\n        'labels': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'chartType': [{ type: core_1.Input },],\n        'colors': [{ type: core_1.Input },],\n        'legend': [{ type: core_1.Input },],\n        'chartClick': [{ type: core_1.Output },],\n        'chartHover': [{ type: core_1.Output },],\n    };\n    return BaseChartDirective;\n}());\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    exports: [\n                        BaseChartDirective\n                    ],\n                    imports: []\n                },] },\n    ];\n    /** @nocollapse */\n    ChartsModule.ctorParameters = [];\n    return ChartsModule;\n}());\nexports.ChartsModule = ChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/components/charts/charts.js\n// module id = 1399\n// module chunks = 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./components/charts/charts'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/ng2-charts.js\n// module id = 1400\n// module chunks = 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./src/google-chart/google-chart.component'));\nvar google_charts_module_1 = require('./src/google-charts.module');\nexports.Ng2GoogleChartsModule = google_charts_module_1.Ng2GoogleChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-google-charts/build/ng2-google-charts.js\n// module id = 1401\n// module chunks = 1","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar google_chart_component_1 = require(\"./google-chart/google-chart.component\");\nvar google_charts_loader_service_1 = require(\"./google-charts-loader.service\");\nvar Ng2GoogleChartsModule = (function () {\n    function Ng2GoogleChartsModule() {\n    }\n    Ng2GoogleChartsModule = __decorate([\n        core_1.NgModule({\n            declarations: [\n                google_chart_component_1.GoogleChartComponent,\n            ],\n            providers: [\n                google_charts_loader_service_1.GoogleChartsLoaderService,\n            ],\n            exports: [\n                google_chart_component_1.GoogleChartComponent,\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], Ng2GoogleChartsModule);\n    return Ng2GoogleChartsModule;\n}());\nexports.Ng2GoogleChartsModule = Ng2GoogleChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-google-charts/build/src/google-charts.module.js\n// module id = 1402\n// module chunks = 1","module.exports = \".daterangepicker {\\r\\n  position: absolute;\\r\\n  color: #111;\\r\\n  background: #fff;\\r\\n  border-radius: 4px;\\r\\n  width: 278px;\\r\\n  padding: 4px;\\r\\n  margin-top: 1px;\\r\\n  top: 100px;\\r\\n  left: 20px;\\r\\n  /* Calendars */ }\\r\\n  .daterangepicker:before, .daterangepicker:after {\\r\\n    position: absolute;\\r\\n    display: inline-block;\\r\\n    border-bottom-color: rgba(0, 0, 0, 0.2);\\r\\n    content: ''; }\\r\\n  .daterangepicker:before {\\r\\n    top: -7px;\\r\\n    border-right: 7px solid transparent;\\r\\n    border-left: 7px solid transparent;\\r\\n    border-bottom: 7px solid #ccc; }\\r\\n  .daterangepicker:after {\\r\\n    top: -6px;\\r\\n    border-right: 6px solid transparent;\\r\\n    border-bottom: 6px solid #fff;\\r\\n    border-left: 6px solid transparent; }\\r\\n  .daterangepicker.opensleft:before {\\r\\n    right: 9px; }\\r\\n  .daterangepicker.opensleft:after {\\r\\n    right: 10px; }\\r\\n  .daterangepicker.openscenter:before {\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    width: 0;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto; }\\r\\n  .daterangepicker.openscenter:after {\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    width: 0;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto; }\\r\\n  .daterangepicker.opensright:before {\\r\\n    left: 9px; }\\r\\n  .daterangepicker.opensright:after {\\r\\n    left: 10px; }\\r\\n  .daterangepicker.dropup {\\r\\n    margin-top: -5px; }\\r\\n    .daterangepicker.dropup:before {\\r\\n      top: initial;\\r\\n      bottom: -7px;\\r\\n      border-bottom: initial;\\r\\n      border-top: 7px solid #ccc; }\\r\\n    .daterangepicker.dropup:after {\\r\\n      top: initial;\\r\\n      bottom: -6px;\\r\\n      border-bottom: initial;\\r\\n      border-top: 6px solid #fff; }\\r\\n  .daterangepicker.dropdown-menu {\\r\\n    max-width: none;\\r\\n    z-index: 3001; }\\r\\n  .daterangepicker.single .ranges, .daterangepicker.single .calendar {\\r\\n    float: none; }\\r\\n  .daterangepicker.show-calendar .calendar {\\r\\n    display: block; }\\r\\n  .daterangepicker .calendar {\\r\\n    display: none;\\r\\n    max-width: 270px;\\r\\n    margin: 4px; }\\r\\n    .daterangepicker .calendar.single .calendar-table {\\r\\n      border: none; }\\r\\n    .daterangepicker .calendar th, .daterangepicker .calendar td {\\r\\n      white-space: nowrap;\\r\\n      text-align: center;\\r\\n      min-width: 32px; }\\r\\n  .daterangepicker .calendar-table {\\r\\n    border: 1px solid #fff;\\r\\n    padding: 4px;\\r\\n    border-radius: 4px;\\r\\n    background: #fff; }\\r\\n  .daterangepicker table {\\r\\n    width: 100%;\\r\\n    margin: 0; }\\r\\n  .daterangepicker td, .daterangepicker th {\\r\\n    text-align: center;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    border-radius: 4px;\\r\\n    border: 1px solid transparent;\\r\\n    white-space: nowrap;\\r\\n    cursor: pointer; }\\r\\n    .daterangepicker td.available:hover, .daterangepicker th.available:hover {\\r\\n      background-color: #eee;\\r\\n      border-color: transparent;\\r\\n      color: inherit; }\\r\\n    .daterangepicker td.week, .daterangepicker th.week {\\r\\n      font-size: 80%;\\r\\n      color: #ccc; }\\r\\n  .daterangepicker td.off, .daterangepicker td.off.in-range, .daterangepicker td.off.start-date, .daterangepicker td.off.end-date {\\r\\n    background-color: #fff;\\r\\n    border-color: transparent;\\r\\n    color: #999; }\\r\\n  .daterangepicker td.in-range {\\r\\n    background-color: #ebf4f8;\\r\\n    border-color: transparent;\\r\\n    color: #000;\\r\\n    border-radius: 0; }\\r\\n  .daterangepicker td.start-date {\\r\\n    border-radius: 4px 0 0 4px; }\\r\\n  .daterangepicker td.end-date {\\r\\n    border-radius: 0 4px 4px 0; }\\r\\n  .daterangepicker td.start-date.end-date {\\r\\n    border-radius: 4px; }\\r\\n  .daterangepicker td.active, .daterangepicker td.active:hover {\\r\\n    background-color: #357ebd;\\r\\n    border-color: transparent;\\r\\n    color: #fff; }\\r\\n  .daterangepicker th.month {\\r\\n    width: auto; }\\r\\n  .daterangepicker td.disabled, .daterangepicker option.disabled {\\r\\n    color: #999;\\r\\n    cursor: not-allowed;\\r\\n    text-decoration: line-through; }\\r\\n  .daterangepicker select.monthselect, .daterangepicker select.yearselect {\\r\\n    font-size: 12px;\\r\\n    padding: 1px;\\r\\n    height: auto;\\r\\n    margin: 0;\\r\\n    cursor: default; }\\r\\n  .daterangepicker select.monthselect {\\r\\n    margin-right: 2%;\\r\\n    width: 56%; }\\r\\n  .daterangepicker select.yearselect {\\r\\n    width: 40%; }\\r\\n  .daterangepicker select.hourselect, .daterangepicker select.minuteselect, .daterangepicker select.secondselect, .daterangepicker select.ampmselect {\\r\\n    width: 50px;\\r\\n    margin-bottom: 0; }\\r\\n  .daterangepicker .input-mini {\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n    color: #555;\\r\\n    height: 30px;\\r\\n    line-height: 30px;\\r\\n    display: block;\\r\\n    vertical-align: middle;\\r\\n    margin: 0 0 5px 0;\\r\\n    padding: 0 6px 0 28px;\\r\\n    width: 100%; }\\r\\n    .daterangepicker .input-mini.active {\\r\\n      border: 1px solid #08c;\\r\\n      border-radius: 4px; }\\r\\n  .daterangepicker .daterangepicker_input {\\r\\n    position: relative; }\\r\\n    .daterangepicker .daterangepicker_input i {\\r\\n      position: absolute;\\r\\n      left: 8px;\\r\\n      top: 8px; }\\r\\n  .daterangepicker.rtl .input-mini {\\r\\n    padding-right: 28px;\\r\\n    padding-left: 6px; }\\r\\n  .daterangepicker.rtl .daterangepicker_input i {\\r\\n    left: auto;\\r\\n    right: 8px; }\\r\\n  .daterangepicker .calendar-time {\\r\\n    text-align: center;\\r\\n    margin: 5px auto;\\r\\n    line-height: 30px;\\r\\n    position: relative;\\r\\n    padding-left: 28px; }\\r\\n    .daterangepicker .calendar-time select.disabled {\\r\\n      color: #ccc;\\r\\n      cursor: not-allowed; }\\r\\n\\r\\n.ranges {\\r\\n  font-size: 11px;\\r\\n  float: none;\\r\\n  margin: 4px;\\r\\n  text-align: left; }\\r\\n  .ranges ul {\\r\\n    list-style: none;\\r\\n    margin: 0 auto;\\r\\n    padding: 0;\\r\\n    width: 100%; }\\r\\n  .ranges li {\\r\\n    font-size: 13px;\\r\\n    background: #f5f5f5;\\r\\n    border: 1px solid #f5f5f5;\\r\\n    border-radius: 4px;\\r\\n    color: #08c;\\r\\n    padding: 3px 12px;\\r\\n    margin-bottom: 8px;\\r\\n    cursor: pointer; }\\r\\n    .ranges li:hover {\\r\\n      background: #08c;\\r\\n      border: 1px solid #08c;\\r\\n      color: #fff; }\\r\\n    .ranges li.active {\\r\\n      background: #08c;\\r\\n      border: 1px solid #08c;\\r\\n      color: #fff; }\\r\\n\\r\\n/*  Larger Screen Styling */\\r\\n@media (min-width: 564px) {\\r\\n  .daterangepicker {\\r\\n    width: auto; }\\r\\n    .daterangepicker .ranges ul {\\r\\n      width: 160px; }\\r\\n    .daterangepicker.single .ranges ul {\\r\\n      width: 100%; }\\r\\n    .daterangepicker.single .calendar.left {\\r\\n      clear: none; }\\r\\n    .daterangepicker.single.ltr .ranges, .daterangepicker.single.ltr .calendar {\\r\\n      float: left; }\\r\\n    .daterangepicker.single.rtl .ranges, .daterangepicker.single.rtl .calendar {\\r\\n      float: right; }\\r\\n    .daterangepicker.ltr {\\r\\n      direction: ltr;\\r\\n      text-align: left; }\\r\\n      .daterangepicker.ltr .calendar.left {\\r\\n        clear: left;\\r\\n        margin-right: 0; }\\r\\n        .daterangepicker.ltr .calendar.left .calendar-table {\\r\\n          border-right: none;\\r\\n          border-top-right-radius: 0;\\r\\n          border-bottom-right-radius: 0; }\\r\\n      .daterangepicker.ltr .calendar.right {\\r\\n        margin-left: 0; }\\r\\n        .daterangepicker.ltr .calendar.right .calendar-table {\\r\\n          border-left: none;\\r\\n          border-top-left-radius: 0;\\r\\n          border-bottom-left-radius: 0; }\\r\\n      .daterangepicker.ltr .left .daterangepicker_input {\\r\\n        padding-right: 12px; }\\r\\n      .daterangepicker.ltr .calendar.left .calendar-table {\\r\\n        padding-right: 12px; }\\r\\n      .daterangepicker.ltr .ranges, .daterangepicker.ltr .calendar {\\r\\n        float: left; }\\r\\n    .daterangepicker.rtl {\\r\\n      direction: rtl;\\r\\n      text-align: right; }\\r\\n      .daterangepicker.rtl .calendar.left {\\r\\n        clear: right;\\r\\n        margin-left: 0; }\\r\\n        .daterangepicker.rtl .calendar.left .calendar-table {\\r\\n          border-left: none;\\r\\n          border-top-left-radius: 0;\\r\\n          border-bottom-left-radius: 0; }\\r\\n      .daterangepicker.rtl .calendar.right {\\r\\n        margin-right: 0; }\\r\\n        .daterangepicker.rtl .calendar.right .calendar-table {\\r\\n          border-right: none;\\r\\n          border-top-right-radius: 0;\\r\\n          border-bottom-right-radius: 0; }\\r\\n      .daterangepicker.rtl .left .daterangepicker_input {\\r\\n        padding-left: 12px; }\\r\\n      .daterangepicker.rtl .calendar.left .calendar-table {\\r\\n        padding-left: 12px; }\\r\\n      .daterangepicker.rtl .ranges, .daterangepicker.rtl .calendar {\\r\\n        text-align: right;\\r\\n        float: right; } }\\r\\n@media (min-width: 730px) {\\r\\n  .daterangepicker .ranges {\\r\\n    width: auto; }\\r\\n  .daterangepicker.ltr .ranges {\\r\\n    float: left; }\\r\\n  .daterangepicker.rtl .ranges {\\r\\n    float: right; }\\r\\n  .daterangepicker .calendar.left {\\r\\n    clear: none !important; } }\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-daterangepicker/src/app/daterangepicker/daterangepicker.css\n// module id = 1404\n// module chunks = 1","module.exports = \".ct-area {\\n  fill-opacity: .5; }\\n\\n.ct-label {\\n  color: #000000;\\n  opacity: 0.9;\\n  fill: #000000; }\\n\\n.ct-chart .ct-label {\\n  font-size: 1em; }\\n\\n.ct-chart svg {\\n  width: 100%;\\n  display: block; }\\n\\n#col1 {\\n  z-index: 1000;\\n  position: absolute;\\n  bottom: 0;\\n  left: 50%;\\n  width: 80%;\\n  cursor: pointer;\\n  transform: translateX(-50%);\\n  -webkit-transform: translateX(-50%);\\n  -moz-transform: translateX(-50%); }\\n\\n.ct-series-a .ct-line, .ct-series-a .ct-point, .ct-series-a .ct-slice-donut {\\n  stroke: #00acac; }\\n\\n.ct-series-a .ct-slice-pie {\\n  stroke: #00acac; }\\n\\n.ct-series-a .ct-bar {\\n  stroke: #ffcd03;\\n  stroke-width: 14px; }\\n\\n.ct-series-a .ct-slice-pie, .ct-series-a .ct-area {\\n  fill: #00acac; }\\n\\n.ct-series-b .ct-bar, .ct-series-b .ct-line, .ct-series-b .ct-point, .ct-series-b .ct-slice-donut, .ct-series-b .ct-slice-pie {\\n  stroke: #8bd22f; }\\n\\n.ct-series-b .ct-slice-pie, .ct-series-b .ct-area {\\n  fill: #8bd22f; }\\n\\n.ct-series-c .ct-bar, .ct-series-c .ct-line, .ct-series-c .ct-point, .ct-series-c .ct-slice-donut, .ct-series-c .ct-slice-pie {\\n  stroke: #f95372; }\\n\\n.ct-series-c .ct-slice-pie, .ct-series-c .ct-area {\\n  fill: #f95372; }\\n\\n.ct-series-d .ct-bar, .ct-series-d .ct-line, .ct-series-d .ct-point, .ct-series-d .ct-slice-donut, .ct-series-d .ct-slice-pie {\\n  stroke: #e7ba08; }\\n\\n.ct-series-d .ct-slice-pie, .ct-series-d .ct-area {\\n  fill: #e7ba08; }\\n\\n.ct-series-e .ct-bar, .ct-series-e .ct-line, .ct-series-e .ct-point, .ct-series-e .ct-slice-donut, .ct-series-e .ct-slice-pie {\\n  stroke: #40daf1; }\\n\\n.ct-series-e .ct-slice-pie, .ct-series-e .ct-area {\\n  fill: #40daf1; }\\n\\n.stacked-bar .ct-bar {\\n  stroke-width: 30px;\\n  position: relative;\\n  left: -102px; }\\n\\n.bubble-maps {\\n  width: 100%;\\n  height: calc(100vh - 283px);\\n  font-size: 11px; }\\n\\n.popup {\\n  position: relative;\\n  display: block; }\\n  .popup span {\\n    cursor: pointer; }\\n  .popup .popup-in {\\n    position: absolute;\\n    border: 1px solid #eee;\\n    max-width: 400px;\\n    left: 25px;\\n    top: 100%; }\\n  .popup.showing span {\\n    color: red; }\\n\\n.dropbtn {\\n  background-color: #00acac;\\n  color: white;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px; }\\n\\n.dropbtn:hover {\\n  background-color: white;\\n  color: black;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px;\\n  box-shadow: black; }\\n\\n.ct-tooltip {\\n  position: absolute;\\n  display: inline-block;\\n  min-width: 5em;\\n  padding: 8px 10px;\\n  background: #383838;\\n  color: #fff;\\n  text-align: center;\\n  pointer-events: none;\\n  z-index: 100;\\n  transition: opacity .2s linear; }\\n  .ct-tooltip:before {\\n    position: absolute;\\n    bottom: -14px;\\n    left: 50%;\\n    border: solid transparent;\\n    content: ' hey';\\n    height: 0;\\n    width: 0;\\n    pointer-events: none;\\n    border-color: rgba(251, 249, 228, 0);\\n    border-top-color: #383838;\\n    border-width: 7px;\\n    margin-left: -8px; }\\n  .ct-tooltip.hide {\\n    display: block;\\n    opacity: 0;\\n    visibility: hidden; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/charts/components/brand_league/brand_league.scss\n// module id = 1405\n// module chunks = 1","module.exports = \"#barchart {\\n  cursor: pointer; }\\n\\n.ct-area {\\n  fill-opacity: .5; }\\n\\n.chartAreaWrapper {\\n  width: 2400px;\\n  overflow-x: scroll; }\\n\\n.ct-label {\\n  color: #000000;\\n  opacity: 0.9;\\n  fill: #000000; }\\n\\n.ct-chart .ct-label {\\n  font-size: 1em; }\\n\\n.ct-chart svg {\\n  width: 100%;\\n  display: block; }\\n\\n#col1 {\\n  z-index: 1000;\\n  position: absolute;\\n  bottom: 0;\\n  left: 50%;\\n  width: 80%;\\n  cursor: pointer;\\n  transform: translateX(-50%);\\n  -webkit-transform: translateX(-50%);\\n  -moz-transform: translateX(-50%); }\\n\\n.ct-series-a .ct-line, .ct-series-a .ct-point, .ct-series-a .ct-slice-donut {\\n  stroke: #00acac; }\\n\\n.ct-series-a .ct-slice-pie {\\n  stroke: #00acac; }\\n\\n.ct-series-a .ct-bar {\\n  stroke: #ffcd03;\\n  stroke-width: 14px; }\\n\\n.ct-series-a .ct-slice-pie, .ct-series-a .ct-area {\\n  fill: #00acac; }\\n\\n.ct-series-b .ct-bar, .ct-series-b .ct-line, .ct-series-b .ct-point, .ct-series-b .ct-slice-donut, .ct-series-b .ct-slice-pie {\\n  stroke: #8bd22f; }\\n\\n.ct-series-b .ct-slice-pie, .ct-series-b .ct-area {\\n  fill: #8bd22f; }\\n\\n.ct-series-c .ct-bar, .ct-series-c .ct-line, .ct-series-c .ct-point, .ct-series-c .ct-slice-donut, .ct-series-c .ct-slice-pie {\\n  stroke: #f95372; }\\n\\n.ct-series-c .ct-slice-pie, .ct-series-c .ct-area {\\n  fill: #f95372; }\\n\\n.ct-series-d .ct-bar, .ct-series-d .ct-line, .ct-series-d .ct-point, .ct-series-d .ct-slice-donut, .ct-series-d .ct-slice-pie {\\n  stroke: #e7ba08; }\\n\\n.ct-series-d .ct-slice-pie, .ct-series-d .ct-area {\\n  fill: #e7ba08; }\\n\\n.ct-series-e .ct-bar, .ct-series-e .ct-line, .ct-series-e .ct-point, .ct-series-e .ct-slice-donut, .ct-series-e .ct-slice-pie {\\n  stroke: #40daf1; }\\n\\n.ct-series-e .ct-slice-pie, .ct-series-e .ct-area {\\n  fill: #40daf1; }\\n\\n.stacked-bar .ct-bar {\\n  stroke-width: 30px;\\n  position: relative;\\n  left: -102px; }\\n\\n.bubble-maps {\\n  width: 100%;\\n  height: calc(100vh - 283px);\\n  font-size: 11px; }\\n\\n.popup {\\n  position: relative;\\n  display: block; }\\n  .popup span {\\n    cursor: pointer; }\\n  .popup .popup-in {\\n    position: absolute;\\n    border: 1px solid #eee;\\n    max-width: 400px;\\n    left: 25px;\\n    top: 100%; }\\n  .popup.showing span {\\n    color: red; }\\n\\n.dropbtn {\\n  background-color: #00acac;\\n  color: white;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px; }\\n\\n.dropbtn:hover {\\n  background-color: white;\\n  color: black;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px;\\n  box-shadow: black; }\\n\\n.Intervalbutton {\\n  background-color: #00acac;\\n  color: white;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px; }\\n\\n.Intervalbutton:hover {\\n  background-color: white;\\n  color: black;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px;\\n  box-shadow: black; }\\n\\n.ct-tooltip {\\n  position: absolute;\\n  display: inline-block;\\n  min-width: 5em;\\n  padding: 8px 10px;\\n  background: #383838;\\n  color: #fff;\\n  text-align: center;\\n  pointer-events: none;\\n  z-index: 100;\\n  transition: opacity .2s linear; }\\n  .ct-tooltip:before {\\n    position: absolute;\\n    bottom: -14px;\\n    left: 50%;\\n    border: solid transparent;\\n    content: ' hey';\\n    height: 0;\\n    width: 0;\\n    pointer-events: none;\\n    border-color: rgba(251, 249, 228, 0);\\n    border-top-color: #383838;\\n    border-width: 7px;\\n    margin-left: -8px; }\\n  .ct-tooltip.hide {\\n    display: block;\\n    opacity: 0;\\n    visibility: hidden; }\\n\\n.space-overall {\\n  margin-top: 20px;\\n  margin-bottom: 25px; }\\n\\n.space-asset {\\n  margin-top: 15px;\\n  margin-bottom: 35px; }\\n\\n.padding-xsmall-card {\\n  padding: 35px 15px; }\\n\\n.card-text {\\n  font-size: 18px;\\n  font-family: cursive;\\n  padding: 15px 0px 2px; }\\n\\n.top-buffer {\\n  margin-top: 20px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/charts/components/chartistJs/chartistJs.scss\n// module id = 1406\n// module chunks = 1","module.exports = \".ct-area {\\n  fill-opacity: .5; }\\n\\n.ct-label {\\n  color: #000000;\\n  opacity: 0.9;\\n  fill: #000000; }\\n\\n.ct-chart .ct-label {\\n  font-size: 1em; }\\n\\n.ct-chart svg {\\n  width: 100%;\\n  display: block; }\\n\\n#col1 {\\n  z-index: 1000;\\n  position: absolute;\\n  bottom: 0;\\n  left: 50%;\\n  width: 80%;\\n  cursor: pointer;\\n  transform: translateX(-50%);\\n  -webkit-transform: translateX(-50%);\\n  -moz-transform: translateX(-50%); }\\n\\n.ct-series-a .ct-line, .ct-series-a .ct-point, .ct-series-a .ct-slice-donut {\\n  stroke: #00acac; }\\n\\n.ct-series-a .ct-slice-pie {\\n  stroke: #00acac; }\\n\\n.ct-series-a .ct-bar {\\n  stroke: #ffcd03;\\n  stroke-width: 14px; }\\n\\n.ct-series-a .ct-slice-pie, .ct-series-a .ct-area {\\n  fill: #00acac; }\\n\\n.ct-series-b .ct-bar, .ct-series-b .ct-line, .ct-series-b .ct-point, .ct-series-b .ct-slice-donut, .ct-series-b .ct-slice-pie {\\n  stroke: #8bd22f; }\\n\\n.ct-series-b .ct-slice-pie, .ct-series-b .ct-area {\\n  fill: #8bd22f; }\\n\\n.ct-series-c .ct-bar, .ct-series-c .ct-line, .ct-series-c .ct-point, .ct-series-c .ct-slice-donut, .ct-series-c .ct-slice-pie {\\n  stroke: #f95372; }\\n\\n.ct-series-c .ct-slice-pie, .ct-series-c .ct-area {\\n  fill: #f95372; }\\n\\n.ct-series-d .ct-bar, .ct-series-d .ct-line, .ct-series-d .ct-point, .ct-series-d .ct-slice-donut, .ct-series-d .ct-slice-pie {\\n  stroke: #e7ba08; }\\n\\n.ct-series-d .ct-slice-pie, .ct-series-d .ct-area {\\n  fill: #e7ba08; }\\n\\n.ct-series-e .ct-bar, .ct-series-e .ct-line, .ct-series-e .ct-point, .ct-series-e .ct-slice-donut, .ct-series-e .ct-slice-pie {\\n  stroke: #40daf1; }\\n\\n.ct-series-e .ct-slice-pie, .ct-series-e .ct-area {\\n  fill: #40daf1; }\\n\\n.stacked-bar .ct-bar {\\n  stroke-width: 30px;\\n  position: relative;\\n  left: -102px; }\\n\\n.bubble-maps {\\n  width: 100%;\\n  height: calc(100vh - 283px);\\n  font-size: 11px; }\\n\\n.popup {\\n  position: relative;\\n  display: block; }\\n  .popup span {\\n    cursor: pointer; }\\n  .popup .popup-in {\\n    position: absolute;\\n    border: 1px solid #eee;\\n    max-width: 400px;\\n    left: 25px;\\n    top: 100%; }\\n  .popup.showing span {\\n    color: red; }\\n\\n.dropbtn {\\n  background-color: #00acac;\\n  color: white;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px; }\\n\\n.dropbtn:hover {\\n  background-color: white;\\n  color: black;\\n  padding: 9px 24px;\\n  font-family: Cursive;\\n  font-size: 16px;\\n  border: 2px solid #00acac;\\n  cursor: pointer;\\n  display: block;\\n  border-radius: 6px;\\n  box-shadow: black; }\\n\\n.ct-tooltip {\\n  position: absolute;\\n  display: inline-block;\\n  min-width: 5em;\\n  padding: 8px 10px;\\n  background: #383838;\\n  color: #fff;\\n  text-align: center;\\n  pointer-events: none;\\n  z-index: 100;\\n  transition: opacity .2s linear; }\\n  .ct-tooltip:before {\\n    position: absolute;\\n    bottom: -14px;\\n    left: 50%;\\n    border: solid transparent;\\n    content: ' hey';\\n    height: 0;\\n    width: 0;\\n    pointer-events: none;\\n    border-color: rgba(251, 249, 228, 0);\\n    border-top-color: #383838;\\n    border-width: 7px;\\n    margin-left: -8px; }\\n  .ct-tooltip.hide {\\n    display: block;\\n    opacity: 0;\\n    visibility: hidden; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/charts/components/chartistJs2/chartistJs2.scss\n// module id = 1407\n// module chunks = 1","module.exports = \"\\n\\n<section class=\\\"chartist\\\">\\n\\n\\n  <!--<div class=\\\"row\\\">\\n     <button (click)=\\\"onClickMe()\\\">Click me!</button>\\n  </div>-->\\n  <ba-card title=\\\"Select options\\\" baCardClass=\\\"with-scroll\\\">\\n   <div class=\\\"row\\\">\\n   \\n    \\n    \\n      <!--<div class=\\\"col-md-15 col-sm-3\\\">\\n            <select class=\\\"dropbtn\\\"  (change)=\\\"OnChangeDate()\\\" [(ngModel)]=\\\"selectedDate\\\">\\n               \\n                <option *ngFor=\\\"let item of dropDownDate\\\" value=\\\"{{item.date}}\\\">\\n                  {{item.name}}\\n                </option>\\n            </select>\\n      </div>-->\\n\\n     \\n\\n     </div>\\n     </ba-card>\\n\\n\\n\\n     \\n  \\n    <ba-card title=\\\"Overall Statistics Summary\\\">\\n  <div class=\\\"row\\\">\\n         <div class=\\\"col-md-12 col-lg-3\\\">\\n               <ba-card  baCardClass=\\\"with-scroll\\\">\\n                   <h4> Total Count </h4>\\n             <h2> {{ brand_count }} </h2>\\n          </ba-card>\\n          </div>\\n            \\n          <div class=\\\"col-md-12 col-lg-3\\\">\\n             <ba-card  baCardClass=\\\"with-scroll\\\">\\n              <div class=\\\"button-wrapper\\\">\\n                <button type=\\\"button\\\" (click)=\\\"getBackHome()\\\" class=\\\"btn btn-default  btn-xs\\\">Home</button>\\n              </div>\\n              </ba-card>\\n          </div>\\n             <div class=\\\"col-md-15 col-sm-3\\\"  >\\n         <form>\\n           \\n           <div class=\\\"form-group \\\" *ngFor=\\\"let dateInput of dateInputs\\\" >\\n             <div  daterangepicker [options]=\\\"{startDate:dateInput.start, endDate:dateInput.end }\\\" (change)=\\\"OnChangeDate()\\\" (selected)=\\\"selectDate($event, dateInput)\\\" >\\n                   <span class=\\\"dropbtn\\\"  name=\\\"daterange\\\" >\\n                       {{ dateInput.start | date:'yyyy/MM/dd' }} - {{ dateInput.end| date:'yyyy/MM/dd' }}\\n                   </span>\\n               </div>\\n           </div>\\n       </form>\\n       </div>\\n  </div>\\n    </ba-card>\\n\\n\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\"> \\n                <ba-card  title=\\\" Sentimental\\\" baCardClass=\\\"with-scroll\\\">\\n               <canvas baseChart\\n          [data]=\\\"sentimentData\\\"\\n          [labels]=\\\"sentimentLabels\\\"\\n          [options]=\\\"sentimentOptions\\\"\\n          [chartType]=\\\"sentimentChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartSentimentalClicked($event)\\\"></canvas>\\n           </ba-card>\\n    </div>\\n     <div class=\\\"col-md-6\\\"> \\n      <ba-card  title=\\\"Brand Monitoring - Media Count\\\" baCardClass=\\\"with-scroll\\\">\\n      <canvas baseChart\\n            [datasets]=\\\"topBrandMoniteringData\\\"\\n            [labels]=\\\"topBrandMoniteringLabels\\\"\\n            [colors]=\\\"topMentionColor\\\"\\n            [options]=\\\"barChartOptions\\\"\\n            [legend]=\\\"topMentionLegend\\\"\\n            [chartType]=\\\"topBrandMoniteringType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n      </ba-card>\\n    </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n       \\n      <ba-card  title=\\\" Top tag\\\" baCardClass=\\\"with-scroll\\\"> \\n        <div id=\\\"col1\\\" style=\\\"height: 520px; position: relative;\\\" >  </div>\\n      </ba-card>\\n      </div>\\n          \\n\\n<div class=\\\"row\\\">\\n   <div class=\\\"col-md-6 \\\">\\n   <ba-card  title=\\\"Total Mentions\\\" baCardClass=\\\"with-scroll\\\">\\n      <canvas baseChart \\n            [datasets]=\\\"topMentionData\\\"\\n            [labels]=\\\"topMentionLabels\\\"\\n            [colors]=\\\"topMentionColor\\\"\\n            [options]=\\\"barChartOptions\\\"\\n            [legend]=\\\"topMentionLegend\\\"\\n            [chartType]=\\\"topMentionChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n      </ba-card>\\n    </div>\\n  <div class=\\\"col-md-6 \\\">\\n     \\n      <ba-card title=\\\"Total Domain\\\" baCardClass=\\\"with-scroll\\\">\\n       <canvas baseChart\\n            [datasets]=\\\"topDomainData\\\"\\n            [labels]=\\\"topDomainLabels\\\"\\n            [colors]=\\\"topDomainColor\\\"\\n            [options]=\\\"barChartOptions\\\"\\n            [legend]=\\\"topDomainLegend\\\"\\n            [chartType]=\\\"topDomainChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n      </ba-card>\\n    </div>\\n</div>\\n  \\n<div class=\\\"row\\\">\\n  <ba-card  title=\\\"Top Brands\\\" baCardClass=\\\"with-scroll\\\">\\n      <canvas baseChart\\n            [datasets]=\\\"topKeywordData\\\"\\n            [labels]=\\\"topKeywordLabels\\\"\\n            [colors]=\\\"topMentionColor\\\"\\n            [options]=\\\"barChartOptions\\\"\\n            [legend]=\\\"topMentionLegend\\\"\\n            [chartType]=\\\"topBrandMoniteringType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n      </ba-card>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <ba-card  title=\\\"Top Brands Type\\\" baCardClass=\\\"with-scroll\\\">\\n      <canvas baseChart\\n            [datasets]=\\\"topBrandTypeData\\\"\\n            [labels]=\\\"topBrandTypeLabels\\\"\\n            [colors]=\\\"topMentionColor\\\"\\n            [options]=\\\"barChartOptions\\\"\\n            [legend]=\\\"topMentionLegend\\\"\\n            [chartType]=\\\"topBrandChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n      </ba-card>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <ba-card  title=\\\"ARTICLES DISTRIBUTION BY LANGUAGE\\\" baCardClass=\\\"with-scroll\\\">\\n     <canvas baseChart\\n          [data]=\\\"topUserData\\\"\\n          [labels]=\\\"topUserLabels\\\"\\n          [legend]=\\\"topUserLegend\\\"\\n          [options]=\\\"topUserOptions\\\"\\n          [chartType]=\\\"topUserChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n      </ba-card>\\n</div>\\n\\n\\n<ba-card title=\\\" Brand DISTRIBUTION By Location\\\">\\n  <div #baAmChart class=\\\"ba-am-chart bubble-maps\\\"></div>\\n</ba-card>\\n\\n\\n\\n <div class=\\\"row\\\">\\n  <ba-card  title=\\\" Brand Monitering Engagments \\\" baCardClass=\\\"with-scroll\\\"> \\n    \\n    <canvas baseChart\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [legend]=\\\"lineChartLegend\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n   \\n </ba-card>\\n  \\n</div>\\n\\n<div class=\\\"row\\\">\\n  <ba-card title=\\\"Top Tweets\\\" baCardClass=\\\"with-scroll\\\">\\n    <div class=\\\"col-md-12\\\" >\\n       <div class=\\\"col-xs-6 col-sm-3\\\"  *ngFor=\\\"let item of twitterFeeds\\\"  >\\n       <blockquote class=\\\"twitter-tweet\\\"><a href=  {{item.url}} > May 5, 2014</a></blockquote>\\n       <script async src=\\\"//platform.twitter.com/widgets.js\\\" charset=\\\"utf-8\\\"></script>\\n       </div>\\n </div>\\n </ba-card>\\n</div>\\n\\n\\n\\n  \\n \\n\\n\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/charts/components/brand_league/brand_league.html\n// module id = 1423\n// module chunks = 1","module.exports = \"\\n\\n<section class=\\\"chartist\\\">\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 \\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\" col-md-6 col-sm-6 col-xs-6 col-lg-6\\\">\\n     <ba-card title=\\\" Select\\\"  baCardClass=\\\"xsmall-card\\\">\\n       <div class=\\\"row top-buffer\\\">\\n      <div class=\\\"col-md-6 col-sm-4 offset-md-1  col-xs-4 col-lg-4\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 card-text\\\"> <label for=\\\"name\\\">   League </label> </div>\\n        <div class=\\\"col-md-6\\\"> \\n            <select class=\\\"dropbtn\\\" (change)=\\\"OnChangeChannel()\\\"   [(ngModel)]=\\\"selected_league\\\">\\n                \\n                <option *ngFor=\\\"let item of dropDownLeague \\\" value=\\\"{{item.league}}\\\" >\\n                    {{item.name | uppercase }}\\n                   \\n                </option>\\n            </select>\\n        </div>  \\n         </div>\\n     </div>\\n     </div>\\n\\n       <div class=\\\"row top-buffer\\\">\\n      <div class=\\\"col-md-6 col-sm-4 offset-md-1  col-xs-4 col-lg-4\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 card-text\\\"> <label for=\\\"name\\\">   Match </label> </div>\\n        <div class=\\\"col-md-6\\\"> \\n          <select class=\\\"dropbtn\\\"    [(ngModel)]=\\\"selected_match\\\">\\n                \\n                <option *ngFor=\\\"let item of dropDownMatch\\\" value=\\\"{{item.match}}\\\" disabled >\\n                    {{item.name | uppercase }}\\n                   \\n                </option>\\n            </select>\\n        </div>  \\n         </div>\\n     </div>\\n     </div>\\n\\n\\n\\n\\n        </ba-card>\\n    </div>\\n\\n\\n\\n        <div class=\\\"col-md-6 col-lg-6\\\">  \\n          <ba-card   baCardClass=\\\"xsmall-card2\\\">\\n            <h1 >{{totalFrameCount}} </h1>\\n            <h4> Frames</h4>\\n            <p >Total Frame Count </p>\\n          </ba-card>\\n          </div>\\n          </div>\\n\\n\\n    <div class=\\\"row\\\">\\n           <div class=\\\"col-md-6 col-lg-6\\\"> \\n               <ba-card   baCardClass=\\\"xsmall-card3\\\">\\n                 \\n             <h1>{{totalExposureTime }}</h1>\\n                <h4> Video Length</h4>\\n             <p>Total Video Length (HH:MM:SS)</p>\\n             \\n          </ba-card>\\n          </div>\\n\\n          <div class=\\\"col-md-6 col-lg-6\\\"> \\n            <ba-card  baCardClass=\\\"xsmall-card1\\\">\\n              <h1>{{brands_exposure}}</h1>\\n                 <h4> Brand Exposure</h4>\\n              <p>Overall Brand Exposure (HH:MM:SS)</p>\\n           \\n          </ba-card>\\n          </div>\\n\\n\\n    </div>\\n\\n  </div>\\n    <div class=\\\"col-md-6 \\\">\\n    <ba-card  title=\\\" Assets exposure \\\" baCardClass=\\\"medium-card\\\">\\n    <canvas class=\\\"space-asset\\\"  baseChart \\n            [datasets]=\\\"topAssetWiseData\\\"\\n            [labels]=\\\"topAssetWiseLabels\\\"\\n            [colors]=\\\"topAssetWiseColor\\\"\\n            [options]=\\\"topAssetWiseOptions\\\"\\n            [legend]=\\\"topAssetWiseLegend\\\"\\n            [chartType]=\\\"topAssetWiseChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"></canvas>\\n      </ba-card>\\n  </div>\\n\\n</div>\\n\\n\\n\\n  <!--<div class=\\\"row\\\">\\n               <div class=\\\"col-md-15 col-sm-3\\\">\\n              <div class=\\\"button-wrapper\\\">\\n                <button type=\\\"button\\\" (click)=\\\"getBackHome()\\\" class=\\\"dropbtn  btn-xs\\\">Reset</button>\\n              </div>  \\n    </div>\\n  </div>-->\\n\\n\\n <!--<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 \\\">\\n    <google-chart [data]=\\\"gaugeChartOptions\\\"></google-chart>\\n   \\n\\n  </div>\\n  <div class=\\\"col-md-6 \\\"></div>\\n </div>-->\\n\\n  <div class=\\\"row\\\">\\n  \\n\\n    <div class=\\\"col-md-6\\\">\\n        \\n    <ba-card  title=\\\"Logos\\\" baCardClass=\\\"with-scroll\\\">\\n\\n        <div class=\\\" col-md-12 input-demo radio-demo row\\\">\\n\\n    <div class=\\\"col-md-3\\\">\\n      <label class=\\\"radio-inline custom-radio nowrap\\\">\\n        <input type=\\\"radio\\\" (click)=\\\"topTenLogo()\\\" name=\\\"toplogo\\\" id=\\\"toptenlogo\\\"  >\\n        <span>Top Ten Logos</span>\\n      </label>\\n    </div>\\n       <div class=\\\"col-md-3\\\">\\n      <label class=\\\"radio-inline custom-radio nowrap\\\">\\n        <input type=\\\"radio\\\" (click)=\\\"topLastTenLogo()\\\" name=\\\"toplogo\\\" id=\\\"leastten\\\" >\\n        <span>Lowest Ten Logos</span>\\n      </label>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <label class=\\\"radio-inline custom-radio nowrap\\\">\\n        <input type=\\\"radio\\\" (click)=\\\"topLogos()\\\" name=\\\"toplogo\\\" id=\\\"toplogos\\\" checked=\\\"checked\\\" >\\n        <span>All Logos</span>\\n      </label>\\n    </div>\\n              <div class=\\\"col-md-15 col-sm-3\\\">\\n              <div class=\\\"button-wrapper\\\">\\n                <button type=\\\"button\\\" (click)=\\\"getBackHome()\\\" class=\\\"dropbtn  btn-xs\\\">Reset</button>\\n              </div>  \\n    </div>\\n \\n    </div>\\n\\n      <canvas class=\\\"space-overall\\\" baseChart\\n            [datasets]=\\\"topLogoData\\\"\\n            [labels]=\\\"topLogoLabels\\\"\\n            [colors]=\\\"topAssetColor\\\"\\n            [options]=\\\"topLogoOptions\\\"\\n            [legend]=\\\"topLogoLegend\\\"\\n            [chartType]=\\\"topLogoType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"logoExposureClicked($event)\\\"></canvas>\\n      </ba-card>\\n  </div>\\n    <div class=\\\"col-md-6 \\\">\\n  <ba-card  title=\\\" Percentage Exposure of Assets \\\" baCardClass=\\\"with-scroll\\\">\\n    <canvas class=\\\"space-asset\\\"  baseChart \\n            [datasets]=\\\"topAssetData\\\"\\n            [labels]=\\\"topAssetLabels\\\"\\n            [colors]=\\\"topAssetColor\\\"\\n            [options]=\\\"topAssetOptions\\\"\\n            [legend]=\\\"topAssetLegend\\\"\\n            [chartType]=\\\"topAssetChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"assetExposureClicked($event)\\\"></canvas>\\n      </ba-card>\\n    </div>\\n \\n</div>\\n\\n<div class=\\\"row\\\">\\n  <ba-card  title=\\\" Detections Across Time \\\" baCardClass=\\\"medium-card with-scroll\\\"> \\n    \\n      <div class=\\\" col-md-6 input-demo radio-demo row\\\">\\n\\n    <div class=\\\"col-md-3\\\">\\n      <label class=\\\"radio-inline custom-radio nowrap\\\">\\n        <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" (click)=\\\"fullInterval()\\\" id=\\\"inlineRadio1\\\" value=\\\"option1\\\" checked=\\\"checked\\\">\\n        <span>full </span>\\n      </label>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <label class=\\\"radio-inline custom-radio nowrap\\\">\\n        <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" (click)=\\\"firstHalfInterval()\\\" id=\\\"inlineRadio1\\\" value=\\\"option2\\\" >\\n        <span>first Half</span>\\n      </label>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <label class=\\\"radio-inline custom-radio nowrap\\\">\\n        <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" (click)=\\\"secondHalfInterval()\\\" id=\\\"inlineRadio2\\\" value=\\\"option3\\\">\\n        <span>Second Half</span>\\n      </label>\\n    </div>\\n\\n  <div class=\\\"col-md-3\\\">\\n      <select class=\\\"Intervalbutton\\\" (change)=\\\"OnChangeInterval()\\\"   [(ngModel)]=\\\"selected_interval\\\">\\n                \\n                <option *ngFor=\\\"let item of dropDownInterval \\\" value=\\\"{{item.value}}\\\" >\\n                    {{item.name | uppercase }}\\n                   \\n                </option>\\n      </select>\\n    </div>\\n  </div>\\n\\n <div class=\\\"chartAreaWrapper\\\">\\n\\n    <canvas baseChart width=\\\"5000\\\" height=\\\"650\\\"\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"topAssetWiseColor\\\"\\n                [legend]=\\\"lineChartLegend\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n </div>\\n   \\n </ba-card>\\n  \\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <ba-card  title=\\\" Logo Elements\\\" baCardClass=\\\"with-scroll\\\"> \\n            <div id=\\\"col1\\\" style=\\\"height: 420px; position: relative;\\\" >  </div>\\n            <p><b> Logo Elements:</b> Total number of 120 logo elements were detected from total 67 Sponsors Logo.</p>\\n          </ba-card>\\n  </div>      \\n </div>\\n\\n\\n\\n\\n\\n\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/charts/components/chartistJs/chartistJs.html\n// module id = 1424\n// module chunks = 1","module.exports = \"\\n\\n<section class=\\\"chartist\\\">\\n\\n\\n  <!--<div class=\\\"row\\\">\\n     <button (click)=\\\"onClickMe()\\\">Click me!</button>\\n  </div>-->\\n  <ba-card title=\\\"Select options\\\" baCardClass=\\\"with-scroll\\\">\\n   <div class=\\\"row\\\">\\n   \\n      <div class=\\\"col-md-15 col-sm-3  \\\">\\n            <select class=\\\"dropbtn\\\"  (change)=\\\"OnChangeChannel()\\\"  [(ngModel)]=\\\"selectedChannel\\\">\\n                \\n                <option *ngFor=\\\"let item of dropDownChannel \\\" value=\\\"{{item.channel}}\\\" >\\n                    {{item.name | uppercase }}\\n                   \\n                </option>\\n            </select>\\n     </div>\\n\\n    <div class=\\\"col-md-15 col-sm-3\\\" >\\n            <select class=\\\"dropbtn\\\"  (change)=\\\"OnChangeBrand()\\\"   [(ngModel)]=\\\"selectedBrand\\\">\\n                \\n                <option *ngFor=\\\"let item of dropDownBrand\\\" value=\\\"{{item.brand}}\\\">\\n                  {{item.name | uppercase }}\\n                </option>\\n            </select>\\n     </div>\\n    \\n      <!--<div class=\\\"col-md-15 col-sm-3\\\">\\n            <select class=\\\"dropbtn\\\"  (change)=\\\"OnChangeDate()\\\" [(ngModel)]=\\\"selectedDate\\\">\\n               \\n                <option *ngFor=\\\"let item of dropDownDate\\\" value=\\\"{{item.date}}\\\">\\n                  {{item.name}}\\n                </option>\\n            </select>\\n      </div>-->\\n\\n        <div class=\\\"col-md-15 col-sm-3\\\"  >\\n         <form>\\n           <div class=\\\"form-group \\\" *ngFor=\\\"let dateInput of dateInputs\\\" >\\n             <div  daterangepicker [options]=\\\"{startDate:dateInput.start, endDate:dateInput.end }\\\" (change)=\\\"OnChangeDate()\\\" (selected)=\\\"selectDate($event, dateInput)\\\" >\\n                   <span class=\\\"dropbtn\\\"  name=\\\"daterange\\\" >\\n                       {{ dateInput.start | date:'yyyy/MM/dd' }} - {{ dateInput.end| date:'yyyy/MM/dd' }}\\n                   </span>\\n               </div>\\n           </div>\\n       </form>\\n       </div>\\n\\n     </div>\\n     </ba-card>\\n\\n\\n\\n     \\n  \\n    \\n\\n\\n    <div class=\\\"row\\\">\\n       \\n          \\n\\n<div class=\\\"col-md-6\\\"> \\n  <ba-card  title=\\\"Total Engagement\\\" baCardClass=\\\"with-scroll\\\">\\n        <canvas baseChart width=\\\"400\\\" height=\\\"225\\\"\\n          [data]=\\\"polarAreaChartData\\\"\\n          [labels]=\\\"polarAreaChartLabels\\\"\\n          [options]=\\\"polarOptions\\\"\\n          [legend]=\\\"polarAreaLegend\\\"\\n          [chartType]=\\\"polarAreaChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n  </ba-card>\\n\\n</div>\\n\\n<div class=\\\"col-md-6\\\">\\n   \\n      <ba-card  title=\\\" Top tag\\\" baCardClass=\\\"with-scroll\\\"> \\n<div id=\\\"col1\\\" style=\\\"height: 420px; position: relative;\\\" >  </div>\\n</ba-card>\\n  \\n\\n</div>\\n  \\n </div>\\n\\n\\n  \\n\\n\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-12\\\">\\n       \\n      <ba-card title=\\\"Impact Score\\\" baCardClass=\\\"with-scroll\\\">\\n       \\n\\n        <div class=\\\"row\\\">\\n           \\n           <div class=\\\"col-md-12 col-lg-4\\\"><h5> Sentiments Analysis </h5>\\n           \\n             <canvas baseChart\\n          [data]=\\\"sentimentData\\\"\\n          [labels]=\\\"sentimentLabels\\\"\\n          [options]=\\\"sentimentOptions\\\"\\n          [chartType]=\\\"sentimentChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            \\n          </div>\\n         \\n          <div class=\\\"col-md-12 col-lg-4\\\"><h5>User's Classification</h5>\\n            <canvas baseChart\\n          [data]=\\\"userClassData\\\"\\n          [labels]=\\\"userClassLabels\\\"\\n          [legend]=\\\"userClassLegend\\\"\\n          [chartType]=\\\"userClassChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n          </div>\\n\\n           <div class=\\\"col-md-12 col-lg-4\\\"><h5>Top Users </h5>\\n            <canvas baseChart\\n          [data]=\\\"topUserData\\\"\\n          [labels]=\\\"topUserLabels\\\"\\n          [legend]=\\\"topUserLegend\\\"\\n          [options]=\\\"topUserOptions\\\"\\n          [chartType]=\\\"topUserChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n          </div>\\n         \\n        </div>\\n      </ba-card>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n   \\n\\n    <div class=\\\"col-md-6 \\\">\\n      <ba-card  title=\\\"Total Mentions\\\" baCardClass=\\\"with-scroll\\\">\\n      <canvas baseChart\\n            [datasets]=\\\"topMentionData\\\"\\n            [labels]=\\\"topMentionLabels\\\"\\n            [colors]=\\\"topMentionColor\\\"\\n            [options]=\\\"barChartOptions\\\"\\n            [legend]=\\\"topMentionLegend\\\"\\n            [chartType]=\\\"topMentionChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n      </ba-card>\\n    </div>\\n\\n     <div class=\\\"col-md-6 \\\">\\n     \\n      <ba-card title=\\\"Total Domain\\\" baCardClass=\\\"with-scroll\\\">\\n       <canvas baseChart\\n            [datasets]=\\\"topDomainData\\\"\\n            [labels]=\\\"topDomainLabels\\\"\\n            [colors]=\\\"topDomainColor\\\"\\n            [options]=\\\"barChartOptions\\\"\\n            [legend]=\\\"topDomainLegend\\\"\\n            [chartType]=\\\"topDomainChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\"\\n            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n      </ba-card>\\n    </div>\\n  </div>\\n\\n\\n\\n<ba-card title=\\\"Map with bubbles\\\">\\n  <div #baAmChart class=\\\"ba-am-chart bubble-maps\\\"></div>\\n</ba-card>\\n\\n\\n<div class=\\\"row\\\">\\n   <div class=\\\"col-md-12 \\\">\\n   \\n     <ba-card title=\\\"Articles distribution by Language\\\" baCardClass=\\\"with-scroll\\\">\\n      <canvas baseChart  width=\\\"400\\\" height=\\\"100\\\"\\n           [datasets]=\\\"languageData\\\"\\n           [labels]=\\\"languageLabels\\\"\\n           [colors]=\\\"languageColor\\\"\\n           [options]=\\\"articleChartOptions\\\"\\n           [legend]=\\\"topReachLegend\\\"\\n           [chartType]=\\\"languageChartType\\\"\\n           (chartHover)=\\\"chartHovered($event)\\\"\\n           (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n     </ba-card>\\n     </div>\\n\\n</div>\\n \\n\\n<div class=\\\"row\\\">\\n  <ba-card title=\\\"Top Tweets\\\" baCardClass=\\\"with-scroll\\\">\\n    <div class=\\\"col-md-12\\\" >\\n       <div class=\\\"col-xs-6 col-sm-3\\\"  *ngFor=\\\"let item of twitterFeeds\\\"  >\\n       <blockquote class=\\\"twitter-tweet\\\"><a href=  {{item.url}} > May 5, 2014</a></blockquote>\\n       <script async src=\\\"//platform.twitter.com/widgets.js\\\" charset=\\\"utf-8\\\"></script>\\n       </div>\\n </div>\\n </ba-card>\\n</div>\\n\\n\\n\\n  \\n \\n\\n\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/charts/components/chartistJs2/chartistJs2.html\n// module id = 1425\n// module chunks = 1"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoCA;AAAA;AAAA;AAhCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;ACzDA;AAEA;AAQA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAWA;;AAAA;AAVA;;;;;;;;;;ACVA;AACA;AAGA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAjfA;AAAA;;AAAA;AAkfA;;AAAA;AAjfA;;;;;;;;;;ACJA;AAOA;AAEA;AACA;AAEA;AACA;AAXA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AASA;AAAA;AARA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AAGA;AAIA;AACA;AACA;AAPA;AAAA;;AAAA;AASA;AAAA;AARA;;;;;;;;ACHA;;;;;;;ACAA;;;;;;;;;ACAA;AAEA;AAGA;AACA;AAIA;AAKA;AAAA;AAAA;AAHA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AApBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AAAA;;AAAA;AAwBA;;AAAA;AAvBA;;;;;;;;;;ACVA;AAOA;AAEA;AACA;AAEA;AACA;AAXA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AASA;AAAA;AARA;;;;;;;;;;ACPA;AAEA;AAGA;AA2LA;AAAA;AAzgBA;AAmHA;AAAA;AAAA;AAAA;AACA;AACA;AA3GA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AAEA;AASA;AAOA;AAgBA;AAEA;AACA;AACA;AACA;AACA;AAOA;AA+fA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAEA;AAEA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAirsCA;AAAA;;AAAA;AAvHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyzCA;;AAAA;AApzCA;;;;;;;;;;;AC1BA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;AA4DA;AAAA;AAAA;AACA;AACA;AA/CA;AAMA;AAIA;AAQA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AAoksvuBA;AAAA;;AAAA;AAjEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAoyBA;;AAAA;AA/xBA;;;;;;;;;;;ACvBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAgBA;AAsGA;AAAA;AAAA;AAAA;AACA;AACA;AAnGA;AACA;AACA;AACA;AACA;AACA;AAuBA;AAEA;AAQA;AAKA;AAOA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAEA;AACA;AACA;AACA;AACA;AAOA;AA+cA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAIA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA9xCA;AAAA;;AAAA;AA1GA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAq4CA;;AAAA;AAh4CA;;;;;;;;;;;AC1BA;AAEA;AAGA;AA2LA;AAAA;AAzjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzDA;AACA;AACA;AASA;AAAA;AAAA;AAPA;AAAA;AACA;AACA;AACA;AACA;AAEA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACXA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;ACxBA;AAEA;AAGA;AA2LA;AAAA;AAzjjlhCA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}