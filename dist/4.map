{"version":3,"file":"4.chunk.js","sources":["webpack:///./src/app/pages/register/register.module.ts","webpack:///./src/app/pages/register/register.component.ts","webpack:///./src/app/pages/register/register.routing.ts","webpack:///./src/app/pages/register/register.scss","webpack:///./src/app/pages/register/register.html"],"sourcesContent":["import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgaModule } from '../../theme/nga.module';\nimport {HttpModule} from '@angular/http';\n//import {ToastModule, ToastOptions} from 'ng2-toastr/ng2-toastr';\nimport { Register } from './register.component';\nimport { routing }       from './register.routing';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgaModule,\n    routing,\n    HttpModule\n  ],\n  declarations: [\n    Register\n  ]\n})\nexport default class RegisterModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/register/register.module.ts","import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormGroup, AbstractControl, FormBuilder, Validators} from '@angular/forms';\nimport {EmailValidator, EqualPasswordsValidator} from '../../theme/validators';\nimport {HttpServices} from \"../../shared/services/httpservice\";\n//import { ToastsManager } from 'ng2-toastr/ng2-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'register',\n  encapsulation: ViewEncapsulation.None,\n  styles: [require('./register.scss')],\n  template: require('./register.html'),\n})\n\n\nexport class Register {\n\n public form:FormGroup;\n public firstname:AbstractControl;\n public lastname:AbstractControl;\n public phone:AbstractControl;\n public email:AbstractControl;\n public company:AbstractControl;\n public password:AbstractControl;\n public repeatPassword:AbstractControl;\n public passwords:FormGroup;\n private httpServices: HttpServices;\n\n public submitted:boolean = false;\n\n constructor(fb:FormBuilder,  httpServices: HttpServices, private router: Router) {\n   this.httpServices = httpServices;\n\n   this.form = fb.group({\n     'firstname': ['', Validators.compose([Validators.required, Validators.minLength(4)])],\n     'lastname': ['', Validators.compose([Validators.required, Validators.minLength(4)])],\n     'company': ['', Validators.compose([Validators.required, Validators.minLength(4)])],\n     'phone': ['', Validators.compose([Validators.required, Validators.minLength(4)])],\n     'email': ['', Validators.compose([Validators.required, EmailValidator.validate])],\n     'passwords': fb.group({\n       'password': ['', Validators.compose([Validators.required, Validators.minLength(4)])],\n       'repeatPassword': ['', Validators.compose([Validators.required, Validators.minLength(4)])]\n     }, {validator: EqualPasswordsValidator.validate('password', 'repeatPassword')})\n   });\n\n   this.firstname = this.form.controls['firstname'];\n   this.lastname = this.form.controls['lastname'];\n   this.company = this.form.controls['company'];\n   this.phone = this.form.controls['phone'];\n   this.email = this.form.controls['email'];\n   this.passwords = <FormGroup> this.form.controls['passwords'];\n   this.password = this.passwords.controls['password'];\n   this.repeatPassword = this.passwords.controls['repeatPassword'];\n }\n\n public onSubmit(values:Object):void {\n   this.submitted = true;\n   if (this.form.valid) {\n     // your code goes here\n      \n      var data = {\"vcFirstname\":this.firstname.value,\"vcLastname\":this.lastname.value,\"vcphonenumber\":this.phone.value,\n      \"vcEmail\":this.email.value,\"vcCompany\":this.company.value ,\"createdBy\":\"1\",\"vcUsername\":this.email.value ,\"vcPassword\":this.repeatPassword.value}\n      \n      this.httpServices.PostHttpWithoutToken(JSON.stringify(data), \"registration\")\n            .subscribe(\n            (data) => {\n               // this.toastr.success('Success!');\n                this.onSuccess(data);\n                console.log(\"success registration\");\n               \n            },\n            (error) => {\n                this.customeError(error);\n            }\n            );\n   }\n }\n\n\n   onSuccess(success) {\n     console.log(success.result);\n        localStorage.setItem('currentUser', success.result);\n        this.router.navigate(['login']);\n    }\n\n    customeError(error) {\n      console.log(error);\n        var errMessage = \"<ul style='vertical-align: middle; margin: 0;'>\";\n        if (error.error) {\n            error.error.forEach((message) => {\n                console.log(message);\n                errMessage += \"<li style='text-transform: uppercase; font-size:10px;'>\" + message.message + \"</li>\"\n            })\n        }\n        errMessage += \"</ul>\";\n         this.router.navigate(['login']);\n       // this.toastr.error(errMessage, null, { enableHTML: true });\n    }\n\n\n}\n\n\n\n\n\n\n// export class LoginComponent {\n//     private isRegistration: boolean;\n//     private username: string;\n//     private password: string;\n//     private email: string;\n//     private httpServices: HttpServices;\n\n    // constructor(httpServices: HttpServices, public toastr: ToastsManager, private router: Router) {\n    //     this.isRegistration = false;\n    //     this.httpServices = httpServices;\n    // }\n\n    // toggleRegistration(status) {\n    //     this.isRegistration = status;\n    //     this.username = \"\";\n    //     this.password = \"\";\n    //     this.email = \"\";\n    // }\n\n// //     // login() {\n// //     //     var data = {\n// //     //         vcUsername: this.username,\n// //     //         vcPassword: this.password\n// //     //     };\n\n// //     //     this.httpServices.PostHttpWithoutToken(JSON.stringify(data), \"login\")\n// //     //         .subscribe(\n// //     //         (data) => {\n// //     //             this.toastr.success('Success!');\n// //     //             this.onSuccess(data);\n// //     //         },\n// //     //         (error) => {\n// //     //             this.customeError(error);\n// //     //         }\n// //     //         );\n// //     // }\n\n//     registration() {\n//         var data = {\n//             vcUsername: this.username,\n//             vcPassword: this.password,\n//             vcEmail: this.email,\n//         };\n\n        // this.httpServices.PostHttpWithoutToken(JSON.stringify(data), \"registration\")\n        //     .subscribe(\n        //     (data) => {\n        //         this.toastr.success('Success!');\n        //         this.onSuccess(data);\n        //     },\n        //     (error) => {\n        //         this.customeError(error);\n        //     }\n        //     );\n//     }\n\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/register/register.component.ts","import { Routes, RouterModule }  from '@angular/router';\n\nimport { Register } from './register.component';\n\n// noinspection TypeScriptValidateTypes\nconst routes: Routes = [\n  {\n    path: '',\n    component: Register\n  }\n];\n\nexport const routing = RouterModule.forChild(routes);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src!./~/string-replace-loader?{\"search\":{},\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\"}!./src/app/pages/register/register.routing.ts","module.exports = \".auth-main {\\n  display: flex;\\n  align-items: center;\\n  height: 100%;\\n  width: 100%;\\n  position: absolute;\\n  background-color: #99ccff; }\\n\\n.auth-block {\\n  width: 540px;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n  background: rgba(0, 0, 0, 0.45);\\n  color: #fff;\\n  padding: 32px; }\\n  .auth-block h1 {\\n    font-weight: 300;\\n    margin-bottom: 28px;\\n    text-align: center; }\\n  .auth-block p {\\n    font-size: 16px; }\\n  .auth-block a {\\n    text-decoration: none;\\n    outline: none;\\n    transition: all 0.2s ease;\\n    color: #00acac; }\\n    .auth-block a:hover {\\n      color: #009292; }\\n  .auth-block .control-label {\\n    padding-top: 11px;\\n    color: #ffffff; }\\n  .auth-block .form-group {\\n    margin-bottom: 12px; }\\n\\n.auth-input {\\n  width: 300px;\\n  margin-bottom: 24px; }\\n  .auth-input input {\\n    display: block;\\n    width: 100%;\\n    border: none;\\n    font-size: 16px;\\n    padding: 4px 10px;\\n    outline: none; }\\n\\na.forgot-pass {\\n  display: block;\\n  text-align: right;\\n  margin-bottom: -20px;\\n  float: right;\\n  z-index: 2;\\n  position: relative; }\\n\\n.auth-link {\\n  display: block;\\n  font-size: 16px;\\n  text-align: center;\\n  margin-bottom: 33px; }\\n\\n.auth-sep {\\n  margin-top: 36px;\\n  margin-bottom: 24px;\\n  line-height: 20px;\\n  font-size: 16px;\\n  text-align: center;\\n  display: block;\\n  position: relative; }\\n  .auth-sep > span {\\n    display: table-cell;\\n    width: 30%;\\n    white-space: nowrap;\\n    padding: 0 24px;\\n    color: #ffffff; }\\n    .auth-sep > span > span {\\n      margin-top: -12px;\\n      display: block; }\\n  .auth-sep:before, .auth-sep:after {\\n    border-top: solid 1px #ffffff;\\n    content: \\\"\\\";\\n    height: 1px;\\n    width: 35%;\\n    display: table-cell; }\\n\\n.al-share-auth {\\n  text-align: center; }\\n  .al-share-auth .al-share {\\n    float: none;\\n    margin: 0;\\n    padding: 0;\\n    display: inline-block; }\\n    .al-share-auth .al-share li {\\n      margin-left: 24px; }\\n      .al-share-auth .al-share li:first-child {\\n        margin-left: 0; }\\n      .al-share-auth .al-share li i {\\n        font-size: 24px; }\\n\\n.btn-auth {\\n  color: #ffffff !important; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/register/register.scss\n// module id = 1422\n// module chunks = 4","module.exports = \"<div class=\\\"auth-main\\\">\\n  <div class=\\\"auth-block\\\">\\n    <h1>Sign up to Drive Account</h1>\\n    <a routerLink=\\\"/login\\\" class=\\\"auth-link\\\">Already have an Drive account? Sign in!</a>\\n\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"form-horizontal\\\">\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!firstname.valid && firstname.touched), 'has-success': (firstname.valid && firstname.touched)}\\\">\\n        <label for=\\\"inputfirstName3\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [formControl]=\\\"firstname\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputfirstName3\\\" placeholder=\\\"First Name\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!lastname.valid && lastname.touched), 'has-success': (lastname.valid && lastname.touched)}\\\">\\n        <label for=\\\"inputlastName3\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [formControl]=\\\"lastname\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputlastName3\\\" placeholder=\\\"last Name\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!company.valid && company.touched), 'has-success': (company.valid && company.touched)}\\\">\\n        <label for=\\\"inputcompany3\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [formControl]=\\\"company\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputcompany3\\\" placeholder=\\\"Company\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!email.valid && email.touched), 'has-success': (email.valid && email.touched)}\\\">\\n        <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [formControl]=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"Email\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!phone.valid && phone.touched), 'has-success': (phone.valid && phone.touched)}\\\">\\n        <label for=\\\"inputphone3\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [formControl]=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputphone3\\\" placeholder=\\\"Phone\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!password.valid && password.touched), 'has-success': (password.valid && password.touched)}\\\">\\n        <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [formControl]=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Password\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!repeatPassword.valid && repeatPassword.touched), 'has-success': (repeatPassword.valid && repeatPassword.touched)}\\\">\\n        <label for=\\\"inputPassword4\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [formControl]=\\\"repeatPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Repeat\\\">\\n          <span *ngIf=\\\"!passwords.valid && (password.touched || repeatPassword.touched)\\\" class=\\\"help-block sub-little-text\\\">Passwords don't match.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <div class=\\\"offset-sm-2 col-sm-10\\\">\\n          <button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn-auth\\\">Sign up</button>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <div class=\\\"auth-sep\\\"><span><span>or Sign up with one click</span></span></div>\\n\\n    <div class=\\\"al-share-auth\\\">\\n      <ul class=\\\"al-share clearfix\\\">\\n        <li><i class=\\\"socicon socicon-facebook\\\" title=\\\"Share on Facebook\\\"></i></li>\\n        <li><i class=\\\"socicon socicon-twitter\\\" title=\\\"Share on Twitter\\\"></i></li>\\n        <li><i class=\\\"socicon socicon-google\\\" title=\\\"Share on Google Plus\\\"></i></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/register/register.html\n// module id = 1445\n// module chunks = 4"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;AAAA;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAUA;AAeA;AAAA;AAFA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1FA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAwFA;;AAAA;AArFA;AA4FA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;ACZA;;;;;;;ACAA;;;;","sourceRoot":""}